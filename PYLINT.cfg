[MASTER]
 
# Specify a configuration file.
#rcfile=
 
# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=
 
# Profiled execution.
profile=no
 
# Add <file or directory> to the black list. It should be a base name, not a
# path. You may set this option multiple times.
ignore=CVS
 
# Pickle collected data for later comparisons.
persistent=yes
 
# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=
 
 
[MESSAGES CONTROL]
 
# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time.
#enable=
 
# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifier separated by comma (,) or put this option
# multiple time.
# E0401: unable to import
# C0115: no class doc string
# C0116: no mathod or function doc string
# C0103: 驼峰法
# E1101: Module has no member
# R0903: Too few public methods
# W0235: Useless super delegation in method
# W0221: Parameters differ from overridden method
# W1202: Use % formatting in logging functions and pass the % parameters as arguments
# W0640: Cell variable defined in loop.
# R0914: Too many local variables
# R1702: Too many nested blocks
# R0913: Too many arguments
# R1705: Unnecessary "else" after "return"
# R1724: Unnecessary "else" after "continue"
# R0902: Too many instance attributes
# R0915: Too many statements
# R1716: Simplify chained comparison between the operands
# R1725: Consider using Python 3 style super() without arguments
# W0622: Redefining built-in
# R0205: Class inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
# I1101: Module has no member
# W0212: Access to a protected member
# E1121: Too many positional arguments for constructor call (too-many-function-args)
# W0105: String statement has no effect (pointless-string-statement)
# W0621: Redefining name 'current_queue' from outer scope
disable=E1102,C0114,E0401,C0103,C0115,C0116,E1101,R0903,W0235,W0221,W1202,W0640,R0914,R1702,R0913,R1705,R1724,R0902,R0915,R1716,R1725,W0622,R0205,I1101,W0212,E1121,W0105,W0621
 
 
[REPORTS]
 
# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html
output-format=text
 
# Include message's id in output
include-ids=no
 
# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no
 
# Tells whether to display a full report or only the messages
reports=no
 
# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (R0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)
 
# Add a comment according to your evaluation note. This is used by the global
# evaluation report (R0004).
comment=no
 
 
[VARIABLES]
 
# Tells whether we should check for unused import in __init__ files.
init-import=no
 
# A regular expression matching names used for dummy variables (i.e. not used).
dummy-variables-rgx=_|dummy
 
# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=
 
 
[BASIC]
 
# Required attributes for module, separated by a comma
required-attributes=
 
# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input
 
# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$
 
# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$
 
# Regular expression which should only match correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$
 
# Regular expression which should only match correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$
 
# Regular expression which should only match correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$
 
# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$
 
# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$
 
# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$
 
# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$
 
# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_
 
# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata
 
# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=__.*__
 
 
[MISCELLANEOUS]
 
# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO
 
 
[FORMAT]
 
# Maximum number of characters on a single line.
max-line-length=100
 
# Maximum number of lines in a module
max-module-lines=1000
 
# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='    '
 
 
[SIMILARITIES]
 
# Minimum lines number of a similarity.
min-similarity-lines=4
 
# Ignore comments when computing similarities.
ignore-comments=yes
 
# Ignore docstrings when computing similarities.
ignore-docstrings=yes
 
 
[TYPECHECK]
 
# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes
 
# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
ignored-classes=SQLObject
 
# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members.
zope=no
 
# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed.
generated-members=REQUEST,acl_users,aq_parent
 
 
[DESIGN]
 
# Maximum number of arguments for function / method
max-args=5
 
# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*
 
# Maximum number of locals for function / method body
max-locals=15
 
# Maximum number of return / yield for function / method body
max-returns=6
 
# Maximum number of branch for function / method body
max-branchs=12
 
# Maximum number of statements in function / method body
max-statements=50
 
# Maximum number of parents for a class (see R0901).
max-parents=7
 
# Maximum number of attributes for a class (see R0902).
max-attributes=7
 
# Minimum number of public methods for a class (see R0903).
min-public-methods=2
 
# Maximum number of public methods for a class (see R0904).
max-public-methods=20
 
 
[IMPORTS]
 
# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec
 
# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=
 
# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=
 
# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=
 
 
[CLASSES]
 
# List of interface methods to ignore, separated by a comma. This is used for
# instance to not check methods defines in Zope's Interface base class.
ignore-iface-methods=isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by
 
# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp
