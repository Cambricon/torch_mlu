- torch:

  - api: torch.Generator
    supported: true

  - api: torch.Generator.clone_state
    supported: true

  - api: torch.Generator.device
    supported: true

  - api: torch.Generator.get_state
    supported: true

  - api: torch.Generator.graphsafe_get_state
    supported: true

  - api: torch.Generator.graphsafe_set_state
    supported: true

  - api: torch.Generator.initial_seed
    supported: true

  - api: torch.Generator.manual_seed
    supported: true

  - api: torch.Generator.seed
    supported: true

  - api: torch.Generator.set_state
    supported: true

  - api: torch.SymBool
    supported: false

  - api: torch.SymFloat
    supported: false

  - api: torch.SymFloat.is_integer
    supported: false

  - api: torch.SymInt
    supported: false

  - api: torch.Tag
    supported: false

  - api: torch.Tag.name
    supported: false

  - api: torch._assert
    supported: false

  - api: torch._foreach_abs
    supported: false

  - api: torch._foreach_abs_
    supported: false

  - api: torch._foreach_acos
    supported: false

  - api: torch._foreach_acos_
    supported: false

  - api: torch._foreach_asin
    supported: false

  - api: torch._foreach_asin_
    supported: false

  - api: torch._foreach_atan
    supported: false

  - api: torch._foreach_atan_
    supported: false

  - api: torch._foreach_ceil
    supported: false

  - api: torch._foreach_ceil_
    supported: false

  - api: torch._foreach_cos
    supported: false

  - api: torch._foreach_cos_
    supported: false

  - api: torch._foreach_cosh
    supported: false

  - api: torch._foreach_cosh_
    supported: false

  - api: torch._foreach_erf
    supported: false

  - api: torch._foreach_erf_
    supported: false

  - api: torch._foreach_erfc
    supported: false

  - api: torch._foreach_erfc_
    supported: false

  - api: torch._foreach_exp
    supported: false

  - api: torch._foreach_exp_
    supported: false

  - api: torch._foreach_expm1
    supported: false

  - api: torch._foreach_expm1_
    supported: false

  - api: torch._foreach_floor
    supported: false

  - api: torch._foreach_floor_
    supported: false

  - api: torch._foreach_frac
    supported: false

  - api: torch._foreach_frac_
    supported: false

  - api: torch._foreach_lgamma
    supported: false

  - api: torch._foreach_lgamma_
    supported: false

  - api: torch._foreach_log
    supported: false

  - api: torch._foreach_log10
    supported: false

  - api: torch._foreach_log10_
    supported: false

  - api: torch._foreach_log1p
    supported: false

  - api: torch._foreach_log1p_
    supported: false

  - api: torch._foreach_log2
    supported: false

  - api: torch._foreach_log2_
    supported: false

  - api: torch._foreach_log_
    supported: false

  - api: torch._foreach_neg
    supported: false

  - api: torch._foreach_neg_
    supported: false

  - api: torch._foreach_reciprocal
    supported: false

  - api: torch._foreach_reciprocal_
    supported: false

  - api: torch._foreach_round
    supported: false

  - api: torch._foreach_round_
    supported: false

  - api: torch._foreach_sigmoid
    supported: false

  - api: torch._foreach_sigmoid_
    supported: false

  - api: torch._foreach_sin
    supported: false

  - api: torch._foreach_sin_
    supported: false

  - api: torch._foreach_sinh
    supported: false

  - api: torch._foreach_sinh_
    supported: false

  - api: torch._foreach_sqrt
    supported: false

  - api: torch._foreach_sqrt_
    supported: false

  - api: torch._foreach_tan
    supported: false

  - api: torch._foreach_tan_
    supported: false

  - api: torch._foreach_trunc
    supported: false

  - api: torch._foreach_trunc_
    supported: false

  - api: torch._foreach_zero_
    supported: false

  - api: torch.abs
    supported: true

  - api: torch.absolute
    supported: true

  - api: torch.acos
    supported: true

  - api: torch.acosh
    supported: true

  - api: torch.add
    supported: true

  - api: torch.addbmm
    supported: true

  - api: torch.addcdiv
    supported: true

  - api: torch.addcmul
    supported: true

  - api: torch.addmm
    supported: true

  - api: torch.addmv
    supported: true

  - api: torch.addr
    supported: true

  - api: torch.adjoint
    supported: true

  - api: torch.all
    supported: true

  - api: torch.allclose
    supported: true

  - api: torch.amax
    supported: true

  - api: torch.amin
    supported: true

  - api: torch.aminmax
    supported: false

  - api: torch.angle
    supported: true

  - api: torch.any
    supported: true

  - api: torch.arange
    supported: true

  - api: torch.arccos
    supported: true

  - api: torch.arccosh
    supported: true

  - api: torch.arcsin
    supported: true

  - api: torch.arcsinh
    supported: true

  - api: torch.arctan
    supported: true

  - api: torch.arctan2
    supported: true

  - api: torch.arctanh
    supported: true

  - api: torch.are_deterministic_algorithms_enabled
    supported: false

  - api: torch.argmax
    supported: true

  - api: torch.argmin
    supported: true

  - api: torch.argsort
    supported: true

  - api: torch.argwhere
    supported: true

  - api: torch.as_strided
    supported: true

  - api: torch.as_tensor
    supported: true

  - api: torch.asarray
    supported: false

  - api: torch.asin
    supported: true

  - api: torch.asinh
    supported: true

  - api: torch.atan
    supported: true

  - api: torch.atan2
    supported: true

  - api: torch.atanh
    supported: true

  - api: torch.atleast_1d
    supported: true

  - api: torch.atleast_2d
    supported: true

  - api: torch.atleast_3d
    supported: true

  - api: torch.autograd.grad_mode.inference_mode
    supported: true

  - api: torch.autograd.grad_mode.inference_mode.clone
    supported: true

  - api: torch.autograd.grad_mode.set_grad_enabled
    supported: true

  - api: torch.autograd.grad_mode.set_grad_enabled.clone
    supported: true

  - api: torch.baddbmm
    supported: true

  - api: torch.bartlett_window
    supported: false

  - api: torch.bernoulli
    supported: true

  - api: torch.bincount
    supported: true
    limitations: 不支持确定性训练告警或报错功能

  - api: torch.bitwise_and
    supported: true

  - api: torch.bitwise_left_shift
    supported: true

  - api: torch.bitwise_not
    supported: true

  - api: torch.bitwise_or
    supported: true

  - api: torch.bitwise_right_shift
    supported: true

  - api: torch.bitwise_xor
    supported: true

  - api: torch.blackman_window
    supported: false

  - api: torch.block_diag
    supported: false

  - api: torch.bmm
    supported: true

  - api: torch.broadcast_shapes
    supported: true

  - api: torch.broadcast_tensors
    supported: true

  - api: torch.broadcast_to
    supported: true

  - api: torch.bucketize
    supported: false

  - api: torch.can_cast
    supported: false

  - api: torch.cartesian_prod
    supported: false

  - api: torch.cat
    supported: true

  - api: torch.cdist
    supported: true

  - api: torch.ceil
    supported: true

  - api: torch.chain_matmul
    supported: false

  - api: torch.cholesky
    supported: false

  - api: torch.cholesky_inverse
    supported: false

  - api: torch.cholesky_solve
    supported: false

  - api: torch.chunk
    supported: true

  - api: torch.clamp
    supported: true

  - api: torch.clip
    supported: true

  - api: torch.clone
    supported: true

  - api: torch.column_stack
    supported: true

  - api: torch.combinations
    supported: false

  - api: torch.compile
    supported: false

  - api: torch.compiled_with_cxx11_abi
    supported: false

  - api: torch.complex
    supported: false

  - api: torch.concat
    supported: true

  - api: torch.concatenate
    supported: true

  - api: torch.cond
    supported: false

  - api: torch.conj
    supported: true

  - api: torch.conj_physical
    supported: true

  - api: torch.copysign
    supported: false

  - api: torch.corrcoef
    supported: false

  - api: torch.cos
    supported: true

  - api: torch.cosh
    supported: true

  - api: torch.count_nonzero
    supported: true

  - api: torch.cov
    supported: false

  - api: torch.cross
    supported: true

  - api: torch.cummax
    supported: true

  - api: torch.cummin
    supported: true

  - api: torch.cumprod
    supported: true

  - api: torch.cumsum
    supported: true

  - api: torch.cumulative_trapezoid
    supported: false

  - api: torch.default_generator
    supported: false

  - api: torch.deg2rad
    supported: false

  - api: torch.dequantize
    supported: false

  - api: torch.det
    supported: true

  - api: torch.diag
    supported: true

  - api: torch.diag_embed
    supported: true

  - api: torch.diagflat
    supported: true

  - api: torch.diagonal
    supported: true

  - api: torch.diagonal_scatter
    supported: true

  - api: torch.diff
    supported: false

  - api: torch.digamma
    supported: false

  - api: torch.dist
    supported: false

  - api: torch.div
    supported: true

  - api: torch.divide
    supported: true

  - api: torch.dot
    supported: true

  - api: torch.dsplit
    supported: true

  - api: torch.dstack
    supported: true

  - api: torch.einsum
    supported: false

  - api: torch.empty
    supported: true

  - api: torch.empty_like
    supported: true

  - api: torch.empty_strided
    supported: true

  - api: torch.enable_grad
    supported: false

  - api: torch.eq
    supported: true

  - api: torch.equal
    supported: true

  - api: torch.erf
    supported: true

  - api: torch.erfc
    supported: true

  - api: torch.erfinv
    supported: true

  - api: torch.exp
    supported: true

  - api: torch.exp2
    supported: true

  - api: torch.expm1
    supported: true

  - api: torch.eye
    supported: true

  - api: torch.fake_quantize_per_channel_affine
    supported: false

  - api: torch.fake_quantize_per_tensor_affine
    supported: false

  - api: torch.fix
    supported: true

  - api: torch.flatten
    supported: true

  - api: torch.flip
    supported: true

  - api: torch.fliplr
    supported: false

  - api: torch.flipud
    supported: false

  - api: torch.float_power
    supported: false

  - api: torch.floor
    supported: true

  - api: torch.floor_divide
    supported: true

  - api: torch.fmax
    supported: false

  - api: torch.fmin
    supported: false

  - api: torch.fmod
    supported: true

  - api: torch.frac
    supported: true

  - api: torch.frexp
    supported: false

  - api: torch.from_dlpack
    supported: false

  - api: torch.from_file
    supported: false

  - api: torch.from_numpy
    supported: true

  - api: torch.frombuffer
    supported: false

  - api: torch.full
    supported: true

  - api: torch.full_like
    supported: true

  - api: torch.gather
    supported: true

  - api: torch.gcd
    supported: false

  - api: torch.ge
    supported: true

  - api: torch.geqrf
    supported: false

  - api: torch.ger
    supported: true

  - api: torch.get_default_device
    supported: true

  - api: torch.get_default_dtype
    supported: true

  - api: torch.get_deterministic_debug_mode
    supported: false

  - api: torch.get_device_module
    supported: true

  - api: torch.get_float32_matmul_precision
    supported: true

  - api: torch.get_num_interop_threads
    supported: false

  - api: torch.get_num_threads
    supported: false

  - api: torch.get_rng_state
    supported: true

  - api: torch.gradient
    supported: false

  - api: torch.greater
    supported: true

  - api: torch.greater_equal
    supported: true

  - api: torch.gt
    supported: true

  - api: torch.hamming_window
    supported: false

  - api: torch.hann_window
    supported: false

  - api: torch.heaviside
    supported: false

  - api: torch.histc
    supported: true

  - api: torch.histogram
    supported: false

  - api: torch.histogramdd
    supported: false

  - api: torch.hsplit
    supported: true

  - api: torch.hstack
    supported: true

  - api: torch.hypot
    supported: false

  - api: torch.i0
    supported: false

  - api: torch.igamma
    supported: false

  - api: torch.igammac
    supported: false

  - api: torch.imag
    supported: true

  - api: torch.index_add
    supported: true

  - api: torch.index_copy
    supported: true

  - api: torch.index_reduce
    supported: false

  - api: torch.index_select
    supported: true

  - api: torch.initial_seed
    supported: false

  - api: torch.inner
    supported: false

  - api: torch.inverse
    supported: true
    limitations: 只支持可逆的输入，对于不可逆的输入没有做检查。

  - api: torch.is_complex
    supported: false

  - api: torch.is_conj
    supported: true

  - api: torch.is_deterministic_algorithms_warn_only_enabled
    supported: false

  - api: torch.is_floating_point
    supported: false

  - api: torch.is_grad_enabled
    supported: false

  - api: torch.is_inference_mode_enabled
    supported: false

  - api: torch.is_nonzero
    supported: true

  - api: torch.is_storage
    supported: true

  - api: torch.is_tensor
    supported: false

  - api: torch.is_warn_always_enabled
    supported: false

  - api: torch.isclose
    supported: false

  - api: torch.isfinite
    supported: true

  - api: torch.isin
    supported: true

  - api: torch.isinf
    supported: false

  - api: torch.isnan
    supported: true

  - api: torch.isneginf
    supported: false

  - api: torch.isposinf
    supported: false

  - api: torch.isreal
    supported: false

  - api: torch.istft
    supported: false

  - api: torch.kaiser_window
    supported: false

  - api: torch.kron
    supported: false

  - api: torch.kthvalue
    supported: true
    limitations: 输出tensor的MemoryFormat可能跟竞品GPU不一致，具体表现在当输入的input是ChannelsLast或者ChannelsLast3d连续的非空tensor时，输出tensor也是ChannelsLast或者ChannelsLast3d连续的。

  - api: torch.lcm
    supported: false

  - api: torch.ldexp
    supported: false

  - api: torch.le
    supported: true

  - api: torch.lerp
    supported: true

  - api: torch.less
    supported: true

  - api: torch.less_equal
    supported: true

  - api: torch.lgamma
    supported: false

  - api: torch.linspace
    supported: true

  - api: torch.load
    supported: true

  - api: torch.lobpcg
    supported: false

  - api: torch.log
    supported: true

  - api: torch.log10
    supported: true

  - api: torch.log1p
    supported: true

  - api: torch.log2
    supported: true

  - api: torch.logaddexp
    supported: true

  - api: torch.logaddexp2
    supported: true

  - api: torch.logcumsumexp
    supported: false

  - api: torch.logdet
    supported: true

  - api: torch.logical_and
    supported: true

  - api: torch.logical_not
    supported: true

  - api: torch.logical_or
    supported: true

  - api: torch.logical_xor
    supported: true

  - api: torch.logit
    supported: false

  - api: torch.logspace
    supported: false

  - api: torch.logsumexp
    supported: false

  - api: torch.lt
    supported: true

  - api: torch.lu
    supported: false

  - api: torch.lu_solve
    supported: false

  - api: torch.lu_unpack
    supported: false

  - api: torch.manual_seed
    supported: false

  - api: torch.masked_select
    supported: true

  - api: torch.matmul
    supported: true

  - api: torch.matrix_exp
    supported: false

  - api: torch.matrix_power
    supported: false

  - api: torch.max
    supported: true

  - api: torch.maximum
    supported: true

  - api: torch.mean
    supported: true

  - api: torch.median
    supported: true

  - api: torch.meshgrid
    supported: false

  - api: torch.min
    supported: true

  - api: torch.minimum
    supported: true

  - api: torch.mm
    supported: true

  - api: torch.mode
    supported: false

  - api: torch.moveaxis
    supported: false

  - api: torch.movedim
    supported: false

  - api: torch.msort
    supported: false

  - api: torch.mul
    supported: true

  - api: torch.multinomial
    supported: true

  - api: torch.multiply
    supported: true

  - api: torch.mv
    supported: true

  - api: torch.mvlgamma
    supported: false

  - api: torch.nan_to_num
    supported: true

  - api: torch.nanmean
    supported: false

  - api: torch.nanmedian
    supported: false

  - api: torch.nanquantile
    supported: false

  - api: torch.nansum
    supported: true

  - api: torch.narrow
    supported: true

  - api: torch.narrow_copy
    supported: false

  - api: torch.ne
    supported: true

  - api: torch.neg
    supported: true

  - api: torch.negative
    supported: true

  - api: torch.nextafter
    supported: false

  - api: torch.no_grad
    supported: false

  - api: torch.nonzero
    supported: true

  - api: torch.norm
    supported: true
    limitations: 参数p不支持inf、-inf和'nuc'。

  - api: torch.normal
    supported: true

  - api: torch.not_equal
    supported: true

  - api: torch.numel
    supported: false

  - api: torch.ones
    supported: true

  - api: torch.ones_like
    supported: true

  - api: torch.orgqr
    supported: false

  - api: torch.ormqr
    supported: false

  - api: torch.outer
    supported: true

  - api: torch.pca_lowrank
    supported: false

  - api: torch.permute
    supported: true

  - api: torch.pinverse
    supported: false

  - api: torch.poisson
    supported: false

  - api: torch.polar
    supported: true

  - api: torch.polygamma
    supported: false

  - api: torch.positive
    supported: false

  - api: torch.pow
    supported: true

  - api: torch.prod
    supported: true

  - api: torch.promote_types
    supported: false

  - api: torch.qr
    supported: true

  - api: torch.quantile
    supported: false

  - api: torch.quantize_per_channel
    supported: false

  - api: torch.quantize_per_tensor
    supported: false

  - api: torch.quantized_batch_norm
    supported: false

  - api: torch.quantized_max_pool1d
    supported: false

  - api: torch.quantized_max_pool2d
    supported: false

  - api: torch.quasirandom.SobolEngine
    supported: false

  - api: torch.quasirandom.SobolEngine.draw
    supported: false

  - api: torch.quasirandom.SobolEngine.draw_base2
    supported: false

  - api: torch.quasirandom.SobolEngine.fast_forward
    supported: false

  - api: torch.quasirandom.SobolEngine.reset
    supported: false

  - api: torch.rad2deg
    supported: false

  - api: torch.rand
    supported: true

  - api: torch.rand_like
    supported: true

  - api: torch.randint
    supported: true

  - api: torch.randint_like
    supported: true

  - api: torch.randn
    supported: true

  - api: torch.randn_like
    supported: true

  - api: torch.randperm
    supported: true
    limitations: generator参数不支持传入torch.Generator(device='mlu'), 传入的Generator会被转换成CPU的Generator。

  - api: torch.range
    supported: false

  - api: torch.ravel
    supported: false

  - api: torch.real
    supported: false

  - api: torch.reciprocal
    supported: true

  - api: torch.remainder
    supported: true

  - api: torch.renorm
    supported: false

  - api: torch.repeat_interleave
    supported: true

  - api: torch.reshape
    supported: true

  - api: torch.resolve_conj
    supported: true

  - api: torch.resolve_neg
    supported: false

  - api: torch.result_type
    supported: false

  - api: torch.roll
    supported: true

  - api: torch.rot90
    supported: false

  - api: torch.round
    supported: true
    limitations: 不支持decimals参数。

  - api: torch.row_stack
    supported: true

  - api: torch.rsqrt
    supported: true

  - api: torch.save
    supported: true

  - api: torch.scatter
    supported: true
    limitations: reduce模式只支持add。

  - api: torch.scatter_add
    supported: true

  - api: torch.scatter_reduce
    supported: true
    limitations: reduce只支持sum/amin/amax模式

  - api: torch.searchsorted
    supported: false

  - api: torch.seed
    supported: false

  - api: torch.select
    supported: true

  - api: torch.select_scatter
    supported: false

  - api: torch.set_default_device
    supported: false

  - api: torch.set_default_dtype
    supported: true

  - api: torch.set_default_tensor_type
    supported: false

  - api: torch.set_deterministic_debug_mode
    supported: false

  - api: torch.set_float32_matmul_precision
    supported: true

  - api: torch.set_flush_denormal
    supported: false

  - api: torch.set_num_interop_threads
    supported: false

  - api: torch.set_num_threads
    supported: false

  - api: torch.set_printoptions
    supported: false

  - api: torch.set_rng_state
    supported: true

  - api: torch.set_warn_always
    supported: false

  - api: torch.sgn
    supported: true

  - api: torch.sigmoid
    supported: true

  - api: torch.sign
    supported: true

  - api: torch.signbit
    supported: false

  - api: torch.sin
    supported: true

  - api: torch.sinc
    supported: false

  - api: torch.sinh
    supported: true

  - api: torch.slice_scatter
    supported: false

  - api: torch.slogdet
    supported: true

  - api: torch.softmax
    supported: true

  - api: torch.sort
    supported: true

  - api: torch.sparse_bsc_tensor
    supported: false

  - api: torch.sparse_bsr_tensor
    supported: false

  - api: torch.sparse_coo_tensor
    supported: true
    limitations: 不支持check_invariants和is_coalesced同时为True。

  - api: torch.sparse_csc_tensor
    supported: false

  - api: torch.sparse_csr_tensor
    supported: false

  - api: torch.split
    supported: true

  - api: torch.sqrt
    supported: true

  - api: torch.square
    supported: false

  - api: torch.squeeze
    supported: true

  - api: torch.stack
    supported: true

  - api: torch.std
    supported: true
    limitations: correction参数仅支持0和1。

  - api: torch.std_mean
    supported: false

  - api: torch.stft
    supported: true
    limitations: 不支持反向求梯度。

  - api: torch.sub
    supported: true

  - api: torch.subtract
    supported: true

  - api: torch.sum
    supported: true
    limitations: 不支持输入是int16, 输出是int8的情况。

  - api: torch.svd
    supported: true

  - api: torch.svd_lowrank
    supported: false

  - api: torch.swapaxes
    supported: false

  - api: torch.swapdims
    supported: false

  - api: torch.sym_float
    supported: false

  - api: torch.sym_int
    supported: false

  - api: torch.sym_ite
    supported: false

  - api: torch.sym_max
    supported: false

  - api: torch.sym_min
    supported: false

  - api: torch.sym_not
    supported: false

  - api: torch.t
    supported: true

  - api: torch.take
    supported: true

  - api: torch.take_along_dim
    supported: false

  - api: torch.tan
    supported: true

  - api: torch.tanh
    supported: true

  - api: torch.tensor
    supported: true

  - api: torch.tensor_split
    supported: true

  - api: torch.tensordot
    supported: false

  - api: torch.tile
    supported: false

  - api: torch.topk
    supported: true
    limitations: 参数sorted只支持True；

  - api: torch.trace
    supported: true

  - api: torch.transpose
    supported: true

  - api: torch.trapezoid
    supported: false

  - api: torch.trapz
    supported: false

  - api: torch.triangular_solve
    supported: false

  - api: torch.tril
    supported: true

  - api: torch.tril_indices
    supported: false

  - api: torch.triu
    supported: true

  - api: torch.triu_indices
    supported: false

  - api: torch.true_divide
    supported: true

  - api: torch.trunc
    supported: true

  - api: torch.unbind
    supported: true

  - api: torch.unflatten
    supported: true

  - api: torch.unique
    supported: true
    limitations: 当输入数据类型是half时，unique不支持dim参数。

  - api: torch.unique_consecutive
    supported: true

  - api: torch.unravel_index
    supported: false

  - api: torch.unsqueeze
    supported: true

  - api: torch.use_deterministic_algorithms
    supported: false

  - api: torch.vander
    supported: false

  - api: torch.var
    supported: true
    limitations: correction参数仅支持0和1。

  - api: torch.var_mean
    supported: false

  - api: torch.vdot
    supported: false

  - api: torch.view_as_complex
    supported: true

  - api: torch.view_as_real
    supported: true

  - api: torch.vmap
    supported: false

  - api: torch.vsplit
    supported: true

  - api: torch.vstack
    supported: true

  - api: torch.where
    supported: true

  - api: torch.xlogy
    supported: true

  - api: torch.zeros
    supported: true

  - api: torch.zeros_like
    supported: true

- torch.nn:

  - api: torch.nn.AdaptiveAvgPool1d
    supported: true

  - api: torch.nn.AdaptiveAvgPool2d
    supported: true

  - api: torch.nn.AdaptiveAvgPool3d
    supported: true

  - api: torch.nn.AdaptiveLogSoftmaxWithLoss
    supported: false

  - api: torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob
    supported: false

  - api: torch.nn.AdaptiveLogSoftmaxWithLoss.predict
    supported: false

  - api: torch.nn.AdaptiveMaxPool1d
    supported: true

  - api: torch.nn.AdaptiveMaxPool2d
    supported: true

  - api: torch.nn.AdaptiveMaxPool3d
    supported: true

  - api: torch.nn.AlphaDropout
    supported: true

  - api: torch.nn.AvgPool1d
    supported: true

  - api: torch.nn.AvgPool2d
    supported: true

  - api: torch.nn.AvgPool3d
    supported: true

  - api: torch.nn.BCELoss
    supported: true

  - api: torch.nn.BCEWithLogitsLoss
    supported: true

  - api: torch.nn.BatchNorm1d
    supported: true

  - api: torch.nn.BatchNorm2d
    supported: true

  - api: torch.nn.BatchNorm3d
    supported: true

  - api: torch.nn.Bilinear
    supported: false

  - api: torch.nn.CELU
    supported: true

  - api: torch.nn.CTCLoss
    supported: true

  - api: torch.nn.ChannelShuffle
    supported: false

  - api: torch.nn.CircularPad1d
    supported: false

  - api: torch.nn.CircularPad2d
    supported: false

  - api: torch.nn.CircularPad3d
    supported: false

  - api: torch.nn.ConstantPad1d
    supported: true

  - api: torch.nn.ConstantPad2d
    supported: true

  - api: torch.nn.ConstantPad3d
    supported: true

  - api: torch.nn.Conv1d
    supported: true

  - api: torch.nn.Conv2d
    supported: true

  - api: torch.nn.Conv3d
    supported: true

  - api: torch.nn.ConvTranspose1d
    supported: true

  - api: torch.nn.ConvTranspose2d
    supported: true

  - api: torch.nn.ConvTranspose3d
    supported: true

  - api: torch.nn.CosineEmbeddingLoss
    supported: false

  - api: torch.nn.CosineSimilarity
    supported: false

  - api: torch.nn.CrossEntropyLoss
    supported: true

  - api: torch.nn.DataParallel
    supported: false

  - api: torch.nn.Dropout
    supported: true

  - api: torch.nn.Dropout1d
    supported: true

  - api: torch.nn.Dropout2d
    supported: true

  - api: torch.nn.Dropout3d
    supported: true

  - api: torch.nn.ELU
    supported: true

  - api: torch.nn.Embedding
    supported: true
    limitations: 不支持sparse参数为True。

  - api: torch.nn.Embedding.from_pretrained
    supported: true

  - api: torch.nn.EmbeddingBag
    supported: true
    limitations: 不支持sparse参数为True;不支持max_norm和norm_type参数;不支持include_last_offset参数为True。反向mode参数不支持mean和max，不支持per_sample_weights参数。

  - api: torch.nn.EmbeddingBag.forward
    supported: true
    limitations: 不支持sparse参数为True;不支持max_norm和norm_type参数;不支持include_last_offset参数为True。

  - api: torch.nn.EmbeddingBag.from_pretrained
    supported: true
    limitations: 不支持sparse参数为True;不支持max_norm和norm_type参数;不支持include_last_offset参数为True。

  - api: torch.nn.FeatureAlphaDropout
    supported: true

  - api: torch.nn.Flatten
    supported: true

  - api: torch.nn.Fold
    supported: true

  - api: torch.nn.FractionalMaxPool2d
    supported: false

  - api: torch.nn.FractionalMaxPool3d
    supported: false

  - api: torch.nn.GELU
    supported: true

  - api: torch.nn.GLU
    supported: true

  - api: torch.nn.GRU
    supported: true

  - api: torch.nn.GRUCell
    supported: true

  - api: torch.nn.GaussianNLLLoss
    supported: true

  - api: torch.nn.GroupNorm
    supported: true

  - api: torch.nn.Hardshrink
    supported: true

  - api: torch.nn.Hardsigmoid
    supported: true

  - api: torch.nn.Hardswish
    supported: true

  - api: torch.nn.Hardtanh
    supported: true

  - api: torch.nn.HingeEmbeddingLoss
    supported: false

  - api: torch.nn.HuberLoss
    supported: false

  - api: torch.nn.Identity
    supported: true

  - api: torch.nn.InstanceNorm1d
    supported: false

  - api: torch.nn.InstanceNorm2d
    supported: false

  - api: torch.nn.InstanceNorm3d
    supported: false

  - api: torch.nn.KLDivLoss
    supported: false

  - api: torch.nn.L1Loss
    supported: true

  - api: torch.nn.LPPool1d
    supported: false

  - api: torch.nn.LPPool2d
    supported: false

  - api: torch.nn.LPPool3d
    supported: false

  - api: torch.nn.LSTM
    supported: true

  - api: torch.nn.LSTMCell
    supported: true

  - api: torch.nn.LayerNorm
    supported: true

  - api: torch.nn.LazyBatchNorm1d
    supported: false

  - api: torch.nn.LazyBatchNorm1d.cls_to_become
    supported: false

  - api: torch.nn.LazyBatchNorm2d
    supported: false

  - api: torch.nn.LazyBatchNorm2d.cls_to_become
    supported: false

  - api: torch.nn.LazyBatchNorm3d
    supported: false

  - api: torch.nn.LazyBatchNorm3d.cls_to_become
    supported: false

  - api: torch.nn.LazyConv1d
    supported: false

  - api: torch.nn.LazyConv1d.cls_to_become
    supported: false

  - api: torch.nn.LazyConv2d
    supported: false

  - api: torch.nn.LazyConv2d.cls_to_become
    supported: false

  - api: torch.nn.LazyConv3d
    supported: false

  - api: torch.nn.LazyConv3d.cls_to_become
    supported: false

  - api: torch.nn.LazyConvTranspose1d
    supported: false

  - api: torch.nn.LazyConvTranspose1d.cls_to_become
    supported: false

  - api: torch.nn.LazyConvTranspose2d
    supported: false

  - api: torch.nn.LazyConvTranspose2d.cls_to_become
    supported: false

  - api: torch.nn.LazyConvTranspose3d
    supported: false

  - api: torch.nn.LazyConvTranspose3d.cls_to_become
    supported: false

  - api: torch.nn.LazyInstanceNorm1d
    supported: false

  - api: torch.nn.LazyInstanceNorm1d.cls_to_become
    supported: false

  - api: torch.nn.LazyInstanceNorm2d
    supported: false

  - api: torch.nn.LazyInstanceNorm2d.cls_to_become
    supported: false

  - api: torch.nn.LazyInstanceNorm3d
    supported: false

  - api: torch.nn.LazyInstanceNorm3d.cls_to_become
    supported: false

  - api: torch.nn.LazyLinear
    supported: false

  - api: torch.nn.LazyLinear.cls_to_become
    supported: false

  - api: torch.nn.LeakyReLU
    supported: true

  - api: torch.nn.Linear
    supported: true

  - api: torch.nn.LocalResponseNorm
    supported: false

  - api: torch.nn.LogSigmoid
    supported: true

  - api: torch.nn.LogSoftmax
    supported: true

  - api: torch.nn.MSELoss
    supported: true

  - api: torch.nn.MarginRankingLoss
    supported: false

  - api: torch.nn.MaxPool1d
    supported: true
    limitations: 不支持 dilation 参数大于1。输出的index为池化窗口内的局部坐标即kernel内的相对索引。

  - api: torch.nn.MaxPool2d
    supported: true
    limitations: 不支持 dilation 参数大于1。输出的index为池化窗口内的局部坐标即kernel内的相对索引。half数据类型的tensor输⼊时，输出indices为short类型。

  - api: torch.nn.MaxPool3d
    supported: true
    limitations: 不支持 dilation 参数大于1。输出的index为池化窗口内的局部坐标即kernel内的相对索引。half数据类型的tensor输⼊时，输出indices为short类型。

  - api: torch.nn.MaxUnpool1d
    supported: false

  - api: torch.nn.MaxUnpool2d
    supported: true

  - api: torch.nn.MaxUnpool3d
    supported: false

  - api: torch.nn.Mish
    supported: false

  - api: torch.nn.Module
    supported: true

  - api: torch.nn.Module.add_module
    supported: true

  - api: torch.nn.Module.apply
    supported: true

  - api: torch.nn.Module.bfloat16
    supported: true

  - api: torch.nn.Module.buffers
    supported: false

  - api: torch.nn.Module.children
    supported: false

  - api: torch.nn.Module.compile
    supported: false

  - api: torch.nn.Module.cpu
    supported: true

  - api: torch.nn.Module.cuda
    supported: false

  - api: torch.nn.Module.double
    supported: true

  - api: torch.nn.Module.eval
    supported: true

  - api: torch.nn.Module.extra_repr
    supported: false

  - api: torch.nn.Module.float
    supported: true

  - api: torch.nn.Module.forward
    supported: true

  - api: torch.nn.Module.get_buffer
    supported: false

  - api: torch.nn.Module.get_extra_state
    supported: false

  - api: torch.nn.Module.get_parameter
    supported: false

  - api: torch.nn.Module.get_submodule
    supported: false

  - api: torch.nn.Module.half
    supported: true

  - api: torch.nn.Module.ipu
    supported: false

  - api: torch.nn.Module.load_state_dict
    supported: true

  - api: torch.nn.Module.modules
    supported: true

  - api: torch.nn.Module.named_buffers
    supported: false

  - api: torch.nn.Module.named_children
    supported: false

  - api: torch.nn.Module.named_modules
    supported: false

  - api: torch.nn.Module.named_parameters
    supported: false

  - api: torch.nn.Module.parameters
    supported: true

  - api: torch.nn.Module.register_backward_hook
    supported: false

  - api: torch.nn.Module.register_buffer
    supported: false

  - api: torch.nn.Module.register_forward_hook
    supported: false

  - api: torch.nn.Module.register_forward_pre_hook
    supported: false

  - api: torch.nn.Module.register_full_backward_hook
    supported: false

  - api: torch.nn.Module.register_full_backward_pre_hook
    supported: false

  - api: torch.nn.Module.register_load_state_dict_post_hook
    supported: false

  - api: torch.nn.Module.register_module
    supported: false

  - api: torch.nn.Module.register_parameter
    supported: false

  - api: torch.nn.Module.register_state_dict_pre_hook
    supported: false

  - api: torch.nn.Module.requires_grad_
    supported: true

  - api: torch.nn.Module.set_extra_state
    supported: false

  - api: torch.nn.Module.share_memory
    supported: false

  - api: torch.nn.Module.state_dict
    supported: true

  - api: torch.nn.Module.to
    supported: true

  - api: torch.nn.Module.to_empty
    supported: false

  - api: torch.nn.Module.train
    supported: true

  - api: torch.nn.Module.type
    supported: true

  - api: torch.nn.Module.xpu
    supported: false

  - api: torch.nn.Module.zero_grad
    supported: true

  - api: torch.nn.ModuleDict
    supported: false

  - api: torch.nn.ModuleDict.clear
    supported: false

  - api: torch.nn.ModuleDict.items
    supported: false

  - api: torch.nn.ModuleDict.keys
    supported: false

  - api: torch.nn.ModuleDict.pop
    supported: false

  - api: torch.nn.ModuleDict.update
    supported: false

  - api: torch.nn.ModuleDict.values
    supported: false

  - api: torch.nn.ModuleList
    supported: true

  - api: torch.nn.ModuleList.append
    supported: true

  - api: torch.nn.ModuleList.extend
    supported: true

  - api: torch.nn.ModuleList.insert
    supported: true

  - api: torch.nn.MultiLabelMarginLoss
    supported: false

  - api: torch.nn.MultiLabelSoftMarginLoss
    supported: false

  - api: torch.nn.MultiMarginLoss
    supported: false

  - api: torch.nn.MultiheadAttention
    supported: false

  - api: torch.nn.MultiheadAttention.forward
    supported: false

  - api: torch.nn.MultiheadAttention.merge_masks
    supported: false

  - api: torch.nn.NLLLoss
    supported: true
    limitations: 对于输入是1d的tensor，当reduction=="mean"且target.item()==ignore_index时，MLU与cpu都返回NaN，而gpu返回0

  - api: torch.nn.PReLU
    supported: true

  - api: torch.nn.PairwiseDistance
    supported: false

  - api: torch.nn.ParameterDict
    supported: false

  - api: torch.nn.ParameterDict.clear
    supported: false

  - api: torch.nn.ParameterDict.copy
    supported: false

  - api: torch.nn.ParameterDict.fromkeys
    supported: false

  - api: torch.nn.ParameterDict.get
    supported: false

  - api: torch.nn.ParameterDict.items
    supported: false

  - api: torch.nn.ParameterDict.keys
    supported: false

  - api: torch.nn.ParameterDict.pop
    supported: false

  - api: torch.nn.ParameterDict.popitem
    supported: false

  - api: torch.nn.ParameterDict.setdefault
    supported: false

  - api: torch.nn.ParameterDict.update
    supported: false

  - api: torch.nn.ParameterDict.values
    supported: false

  - api: torch.nn.ParameterList
    supported: false

  - api: torch.nn.ParameterList.append
    supported: false

  - api: torch.nn.ParameterList.extend
    supported: false

  - api: torch.nn.PixelShuffle
    supported: false

  - api: torch.nn.PixelUnshuffle
    supported: false

  - api: torch.nn.PoissonNLLLoss
    supported: true

  - api: torch.nn.RMSNorm
    supported: false

  - api: torch.nn.RMSNorm.extra_repr
    supported: false

  - api: torch.nn.RMSNorm.forward
    supported: false

  - api: torch.nn.RMSNorm.reset_parameters
    supported: false

  - api: torch.nn.RNN
    supported: true

  - api: torch.nn.RNNBase
    supported: true

  - api: torch.nn.RNNBase.flatten_parameters
    supported: false

  - api: torch.nn.RNNCell
    supported: true

  - api: torch.nn.RReLU
    supported: true

  - api: torch.nn.ReLU
    supported: true

  - api: torch.nn.ReLU6
    supported: false

  - api: torch.nn.ReflectionPad1d
    supported: true

  - api: torch.nn.ReflectionPad2d
    supported: true

  - api: torch.nn.ReflectionPad3d
    supported: false

  - api: torch.nn.ReplicationPad1d
    supported: true

  - api: torch.nn.ReplicationPad2d
    supported: true

  - api: torch.nn.ReplicationPad3d
    supported: false

  - api: torch.nn.SELU
    supported: true

  - api: torch.nn.Sequential
    supported: true

  - api: torch.nn.Sequential.append
    supported: true

  - api: torch.nn.SiLU
    supported: true

  - api: torch.nn.Sigmoid
    supported: true

  - api: torch.nn.SmoothL1Loss
    supported: true

  - api: torch.nn.SoftMarginLoss
    supported: false

  - api: torch.nn.Softmax
    supported: true

  - api: torch.nn.Softmax2d
    supported: true

  - api: torch.nn.Softmin
    supported: false

  - api: torch.nn.Softplus
    supported: true

  - api: torch.nn.Softshrink
    supported: true

  - api: torch.nn.Softsign
    supported: false

  - api: torch.nn.SyncBatchNorm
    supported: true

  - api: torch.nn.SyncBatchNorm.convert_sync_batchnorm
    supported: true

  - api: torch.nn.Tanh
    supported: true

  - api: torch.nn.Tanhshrink
    supported: false

  - api: torch.nn.Threshold
    supported: true

  - api: torch.nn.Transformer
    supported: false

  - api: torch.nn.Transformer.forward
    supported: false

  - api: torch.nn.Transformer.generate_square_subsequent_mask
    supported: false

  - api: torch.nn.TransformerDecoder
    supported: false

  - api: torch.nn.TransformerDecoder.forward
    supported: false

  - api: torch.nn.TransformerDecoderLayer
    supported: false

  - api: torch.nn.TransformerDecoderLayer.forward
    supported: false

  - api: torch.nn.TransformerEncoder
    supported: false

  - api: torch.nn.TransformerEncoder.forward
    supported: false

  - api: torch.nn.TransformerEncoderLayer
    supported: true

  - api: torch.nn.TransformerEncoderLayer.forward
    supported: true
    limitations: forward的输入参数src_mask和src_key_padding_mask不支持值全为True。

  - api: torch.nn.TripletMarginLoss
    supported: false

  - api: torch.nn.TripletMarginWithDistanceLoss
    supported: false

  - api: torch.nn.Unflatten
    supported: true

  - api: torch.nn.Unfold
    supported: true

  - api: torch.nn.Upsample
    supported: true
    limitations: mode参数为nearest或nearest-exact时，不支持5D输入；mode参数为nearest-exact时，不支持反向。

  - api: torch.nn.UpsamplingBilinear2d
    supported: true

  - api: torch.nn.UpsamplingNearest2d
    supported: true

  - api: torch.nn.ZeroPad1d
    supported: false

  - api: torch.nn.ZeroPad2d
    supported: false

  - api: torch.nn.ZeroPad3d
    supported: false

  - api: torch.nn.modules.lazy.LazyModuleMixin
    supported: false

  - api: torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params
    supported: false

  - api: torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters
    supported: false

  - api: torch.nn.modules.module.register_module_backward_hook
    supported: false

  - api: torch.nn.modules.module.register_module_buffer_registration_hook
    supported: false

  - api: torch.nn.modules.module.register_module_forward_hook
    supported: false

  - api: torch.nn.modules.module.register_module_forward_pre_hook
    supported: false

  - api: torch.nn.modules.module.register_module_full_backward_hook
    supported: false

  - api: torch.nn.modules.module.register_module_full_backward_pre_hook
    supported: false

  - api: torch.nn.modules.module.register_module_module_registration_hook
    supported: false

  - api: torch.nn.modules.module.register_module_parameter_registration_hook
    supported: false

  - api: torch.nn.modules.normalization.RMSNorm
    supported: false

  - api: torch.nn.modules.normalization.RMSNorm.extra_repr
    supported: false

  - api: torch.nn.modules.normalization.RMSNorm.forward
    supported: false

  - api: torch.nn.modules.normalization.RMSNorm.reset_parameters
    supported: false

  - api: torch.nn.parallel.DistributedDataParallel
    supported: true
    limitations: 当前不支持一个进程内的网络模型参数分布在多张MLU卡上。

  - api: torch.nn.parallel.DistributedDataParallel.join
    supported: true

  - api: torch.nn.parallel.DistributedDataParallel.join_hook
    supported: true

  - api: torch.nn.parallel.DistributedDataParallel.no_sync
    supported: true

  - api: torch.nn.parallel.DistributedDataParallel.register_comm_hook
    supported: true

  - api: torch.nn.parameter.Parameter
    supported: false

  - api: torch.nn.parameter.UninitializedBuffer
    supported: false

  - api: torch.nn.parameter.UninitializedParameter
    supported: false

  - api: torch.nn.parameter.UninitializedParameter.cls_to_become
    supported: false

  - api: torch.nn.utils.clip_grad_norm
    supported: true

  - api: torch.nn.utils.clip_grad_norm_
    supported: true

  - api: torch.nn.utils.clip_grad_value_
    supported: false

  - api: torch.nn.utils.convert_conv2d_weight_memory_format
    supported: true

  - api: torch.nn.utils.convert_conv3d_weight_memory_format
    supported: true

  - api: torch.nn.utils.fuse_conv_bn_eval
    supported: false

  - api: torch.nn.utils.fuse_conv_bn_weights
    supported: false

  - api: torch.nn.utils.fuse_linear_bn_eval
    supported: false

  - api: torch.nn.utils.fuse_linear_bn_weights
    supported: false

  - api: torch.nn.utils.parameters_to_vector
    supported: false

  - api: torch.nn.utils.parametrizations.orthogonal
    supported: false

  - api: torch.nn.utils.parametrizations.spectral_norm
    supported: false

  - api: torch.nn.utils.parametrizations.weight_norm
    supported: true

  - api: torch.nn.utils.parametrize.ParametrizationList
    supported: false

  - api: torch.nn.utils.parametrize.ParametrizationList.right_inverse
    supported: false

  - api: torch.nn.utils.parametrize.cached
    supported: false

  - api: torch.nn.utils.parametrize.is_parametrized
    supported: false

  - api: torch.nn.utils.parametrize.register_parametrization
    supported: false

  - api: torch.nn.utils.parametrize.remove_parametrizations
    supported: false

  - api: torch.nn.utils.prune.BasePruningMethod
    supported: false

  - api: torch.nn.utils.prune.BasePruningMethod.apply
    supported: false

  - api: torch.nn.utils.prune.BasePruningMethod.apply_mask
    supported: false

  - api: torch.nn.utils.prune.BasePruningMethod.compute_mask
    supported: false

  - api: torch.nn.utils.prune.BasePruningMethod.prune
    supported: false

  - api: torch.nn.utils.prune.BasePruningMethod.remove
    supported: false

  - api: torch.nn.utils.prune.CustomFromMask
    supported: false

  - api: torch.nn.utils.prune.CustomFromMask.apply
    supported: false

  - api: torch.nn.utils.prune.CustomFromMask.apply_mask
    supported: false

  - api: torch.nn.utils.prune.CustomFromMask.prune
    supported: false

  - api: torch.nn.utils.prune.CustomFromMask.remove
    supported: false

  - api: torch.nn.utils.prune.Identity
    supported: false

  - api: torch.nn.utils.prune.Identity.apply
    supported: false

  - api: torch.nn.utils.prune.Identity.apply_mask
    supported: false

  - api: torch.nn.utils.prune.Identity.prune
    supported: false

  - api: torch.nn.utils.prune.Identity.remove
    supported: false

  - api: torch.nn.utils.prune.L1Unstructured
    supported: false

  - api: torch.nn.utils.prune.L1Unstructured.apply
    supported: false

  - api: torch.nn.utils.prune.L1Unstructured.apply_mask
    supported: false

  - api: torch.nn.utils.prune.L1Unstructured.prune
    supported: false

  - api: torch.nn.utils.prune.L1Unstructured.remove
    supported: false

  - api: torch.nn.utils.prune.LnStructured
    supported: false

  - api: torch.nn.utils.prune.LnStructured.apply
    supported: false

  - api: torch.nn.utils.prune.LnStructured.apply_mask
    supported: false

  - api: torch.nn.utils.prune.LnStructured.compute_mask
    supported: false

  - api: torch.nn.utils.prune.LnStructured.prune
    supported: false

  - api: torch.nn.utils.prune.LnStructured.remove
    supported: false

  - api: torch.nn.utils.prune.PruningContainer
    supported: false

  - api: torch.nn.utils.prune.PruningContainer.add_pruning_method
    supported: false

  - api: torch.nn.utils.prune.PruningContainer.apply
    supported: false

  - api: torch.nn.utils.prune.PruningContainer.apply_mask
    supported: false

  - api: torch.nn.utils.prune.PruningContainer.compute_mask
    supported: false

  - api: torch.nn.utils.prune.PruningContainer.prune
    supported: false

  - api: torch.nn.utils.prune.PruningContainer.remove
    supported: false

  - api: torch.nn.utils.prune.RandomStructured
    supported: false

  - api: torch.nn.utils.prune.RandomStructured.apply
    supported: false

  - api: torch.nn.utils.prune.RandomStructured.apply_mask
    supported: false

  - api: torch.nn.utils.prune.RandomStructured.compute_mask
    supported: false

  - api: torch.nn.utils.prune.RandomStructured.prune
    supported: false

  - api: torch.nn.utils.prune.RandomStructured.remove
    supported: false

  - api: torch.nn.utils.prune.RandomUnstructured
    supported: false

  - api: torch.nn.utils.prune.RandomUnstructured.apply
    supported: false

  - api: torch.nn.utils.prune.RandomUnstructured.apply_mask
    supported: false

  - api: torch.nn.utils.prune.RandomUnstructured.prune
    supported: false

  - api: torch.nn.utils.prune.RandomUnstructured.remove
    supported: false

  - api: torch.nn.utils.prune.custom_from_mask
    supported: false

  - api: torch.nn.utils.prune.global_unstructured
    supported: false

  - api: torch.nn.utils.prune.identity
    supported: false

  - api: torch.nn.utils.prune.is_pruned
    supported: false

  - api: torch.nn.utils.prune.l1_unstructured
    supported: false

  - api: torch.nn.utils.prune.ln_structured
    supported: false

  - api: torch.nn.utils.prune.random_structured
    supported: false

  - api: torch.nn.utils.prune.random_unstructured
    supported: false

  - api: torch.nn.utils.prune.remove
    supported: false

  - api: torch.nn.utils.remove_spectral_norm
    supported: false

  - api: torch.nn.utils.remove_weight_norm
    supported: true

  - api: torch.nn.utils.rnn.PackedSequence
    supported: true

  - api: torch.nn.utils.rnn.PackedSequence.batch_sizes
    supported: true

  - api: torch.nn.utils.rnn.PackedSequence.count
    supported: true

  - api: torch.nn.utils.rnn.PackedSequence.data
    supported: true

  - api: torch.nn.utils.rnn.PackedSequence.index
    supported: true

  - api: torch.nn.utils.rnn.PackedSequence.is_cuda
    supported: true
    limitations: 对应MLU的torch.rnn.utils.rnn.PackedSequence.is_mlu

  - api: torch.nn.utils.rnn.PackedSequence.is_pinned
    supported: true

  - api: torch.nn.utils.rnn.PackedSequence.sorted_indices
    supported: true

  - api: torch.nn.utils.rnn.PackedSequence.to
    supported: true

  - api: torch.nn.utils.rnn.PackedSequence.unsorted_indices
    supported: true

  - api: torch.nn.utils.rnn.pack_padded_sequence
    supported: true

  - api: torch.nn.utils.rnn.pack_sequence
    supported: true

  - api: torch.nn.utils.rnn.pad_packed_sequence
    supported: true

  - api: torch.nn.utils.rnn.pad_sequence
    supported: true

  - api: torch.nn.utils.rnn.unpack_sequence
    supported: false

  - api: torch.nn.utils.rnn.unpad_sequence
    supported: false

  - api: torch.nn.utils.skip_init
    supported: true

  - api: torch.nn.utils.spectral_norm
    supported: false

  - api: torch.nn.utils.stateless.functional_call
    supported: false

  - api: torch.nn.utils.vector_to_parameters
    supported: false

  - api: torch.nn.utils.weight_norm
    supported: true

- torch.nn.functional:

  - api: torch.nn.functional.adaptive_avg_pool1d
    supported: true

  - api: torch.nn.functional.adaptive_avg_pool2d
    supported: true

  - api: torch.nn.functional.adaptive_avg_pool3d
    supported: true

  - api: torch.nn.functional.adaptive_max_pool1d
    supported: true

  - api: torch.nn.functional.adaptive_max_pool2d
    supported: true
    limitations: 输出的index为池化窗口内的局部坐标即kernel内的相对索引。

  - api: torch.nn.functional.adaptive_max_pool3d
    supported: false

  - api: torch.nn.functional.affine_grid
    supported: false

  - api: torch.nn.functional.alpha_dropout
    supported: true

  - api: torch.nn.functional.avg_pool1d
    supported: true
    limitations: 不支持 divisor_override 设置为 True。

  - api: torch.nn.functional.avg_pool2d
    supported: true
    limitations: 不支持 divisor_override 设置为 True。

  - api: torch.nn.functional.avg_pool3d
    supported: true
    limitations: 不支持 divisor_override 设置为 True。

  - api: torch.nn.functional.batch_norm
    supported: true

  - api: torch.nn.functional.bilinear
    supported: false

  - api: torch.nn.functional.binary_cross_entropy
    supported: true

  - api: torch.nn.functional.binary_cross_entropy_with_logits
    supported: true

  - api: torch.nn.functional.celu
    supported: true

  - api: torch.nn.functional.conv1d
    supported: true

  - api: torch.nn.functional.conv2d
    supported: true

  - api: torch.nn.functional.conv3d
    supported: true

  - api: torch.nn.functional.conv_transpose1d
    supported: true

  - api: torch.nn.functional.conv_transpose2d
    supported: true

  - api: torch.nn.functional.conv_transpose3d
    supported: true

  - api: torch.nn.functional.cosine_embedding_loss
    supported: false

  - api: torch.nn.functional.cosine_similarity
    supported: false

  - api: torch.nn.functional.cross_entropy
    supported: true

  - api: torch.nn.functional.ctc_loss
    supported: true

  - api: torch.nn.functional.dropout
    supported: true

  - api: torch.nn.functional.dropout1d
    supported: true

  - api: torch.nn.functional.dropout2d
    supported: true

  - api: torch.nn.functional.dropout3d
    supported: true

  - api: torch.nn.functional.elu
    supported: true

  - api: torch.nn.functional.elu_
    supported: true

  - api: torch.nn.functional.embedding
    supported: true
    limitations: 不支持sparse参数为True。

  - api: torch.nn.functional.embedding_bag
    supported: true
    limitations: 不支持sparse参数为True;不支持max_norm和norm_type参数;不支持include_last_offset参数为True。反向mode参数不支持mean和max, 不支持per_sample_weights参数。

  - api: torch.nn.functional.feature_alpha_dropout
    supported: true

  - api: torch.nn.functional.fold
    supported: true

  - api: torch.nn.functional.fractional_max_pool2d
    supported: false

  - api: torch.nn.functional.fractional_max_pool3d
    supported: false

  - api: torch.nn.functional.gaussian_nll_loss
    supported: true

  - api: torch.nn.functional.gelu
    supported: true

  - api: torch.nn.functional.glu
    supported: true

  - api: torch.nn.functional.grid_sample
    supported: true
    limitations: 不支持5D输入;mode参数仅支持bilinear和nearest，为bilinear时仅支持padding_mode参数为zeros和reflection，为nearest时仅支持padding_mode为zeros。

  - api: torch.nn.functional.group_norm
    supported: true

  - api: torch.nn.functional.gumbel_softmax
    supported: false

  - api: torch.nn.functional.hardshrink
    supported: true

  - api: torch.nn.functional.hardsigmoid
    supported: true

  - api: torch.nn.functional.hardswish
    supported: true

  - api: torch.nn.functional.hardtanh
    supported: true
    limitations: 不支持参数min_val的值大于max_val的值。

  - api: torch.nn.functional.hardtanh_
    supported: true
    limitations: 不支持参数min_val的值大于max_val的值。

  - api: torch.nn.functional.hinge_embedding_loss
    supported: false

  - api: torch.nn.functional.huber_loss
    supported: false

  - api: torch.nn.functional.instance_norm
    supported: false

  - api: torch.nn.functional.interpolate
    supported: true
    limitations: mode参数为nearest或nearest-exact时，不支持5D输入；mode参数为nearest-exact时，不支持反向；antialias参数不支持为True。

  - api: torch.nn.functional.kl_div
    supported: true

  - api: torch.nn.functional.l1_loss
    supported: true

  - api: torch.nn.functional.layer_norm
    supported: true

  - api: torch.nn.functional.leaky_relu
    supported: true

  - api: torch.nn.functional.leaky_relu_
    supported: true

  - api: torch.nn.functional.linear
    supported: true

  - api: torch.nn.functional.local_response_norm
    supported: false

  - api: torch.nn.functional.log_softmax
    supported: true

  - api: torch.nn.functional.logsigmoid
    supported: true

  - api: torch.nn.functional.lp_pool1d
    supported: false

  - api: torch.nn.functional.lp_pool2d
    supported: false

  - api: torch.nn.functional.lp_pool3d
    supported: false

  - api: torch.nn.functional.margin_ranking_loss
    supported: false

  - api: torch.nn.functional.max_pool1d
    supported: true
    limitations: kernel_size所有维度乘积必须小于1535;不支持dilation参数大于1;输出的index为池化窗口内的局部坐标即kernel内的相对索引。

  - api: torch.nn.functional.max_pool2d
    supported: true
    limitations: kernel_size所有维度乘积必须小于1535;不支持dilation参数大于1;输出的index为池化窗口内的局部坐标即kernel内的相对索引。

  - api: torch.nn.functional.max_pool3d
    supported: true
    limitations: kernel_size所有维度乘积必须小于1535;不支持dilation参数大于1;输出的index为池化窗口内的局部坐标即kernel内的相对索引。

  - api: torch.nn.functional.max_unpool1d
    supported: false

  - api: torch.nn.functional.max_unpool2d
    supported: true

  - api: torch.nn.functional.max_unpool3d
    supported: false

  - api: torch.nn.functional.mish
    supported: false

  - api: torch.nn.functional.mse_loss
    supported: true

  - api: torch.nn.functional.multi_margin_loss
    supported: false

  - api: torch.nn.functional.multilabel_margin_loss
    supported: false

  - api: torch.nn.functional.multilabel_soft_margin_loss
    supported: false

  - api: torch.nn.functional.nll_loss
    supported: true

  - api: torch.nn.functional.normalize
    supported: true

  - api: torch.nn.functional.one_hot
    supported: true

  - api: torch.nn.functional.pad
    supported: true
    limitations: mode参数为reflect时反向不支持pad参数为负数;mode参数为reflect或replicate时不支持三维填充。

  - api: torch.nn.functional.pairwise_distance
    supported: false

  - api: torch.nn.functional.pdist
    supported: false

  - api: torch.nn.functional.pixel_shuffle
    supported: false

  - api: torch.nn.functional.pixel_unshuffle
    supported: false

  - api: torch.nn.functional.poisson_nll_loss
    supported: true

  - api: torch.nn.functional.prelu
    supported: true

  - api: torch.nn.functional.relu
    supported: true

  - api: torch.nn.functional.relu6
    supported: false

  - api: torch.nn.functional.relu_
    supported: true

  - api: torch.nn.functional.rms_norm
    supported: false

  - api: torch.nn.functional.rrelu
    supported: true
    limitations: 不支持training参数为True。

  - api: torch.nn.functional.rrelu_
    supported: true
    limitations: 不支持training参数为True。

  - api: torch.nn.functional.scaled_dot_product_attention
    supported: true
    limitations: 不支持nested_tensor输入。Memory-Efficient Attention不能对attn_mask求导。MLU300系列板卡不支持融合attention算子。

  - api: torch.nn.functional.selu
    supported: true

  - api: torch.nn.functional.sigmoid
    supported: true

  - api: torch.nn.functional.silu
    supported: true

  - api: torch.nn.functional.smooth_l1_loss
    supported: true

  - api: torch.nn.functional.soft_margin_loss
    supported: false

  - api: torch.nn.functional.softmax
    supported: true

  - api: torch.nn.functional.softmin
    supported: false

  - api: torch.nn.functional.softplus
    supported: true

  - api: torch.nn.functional.softshrink
    supported: true

  - api: torch.nn.functional.softsign
    supported: false

  - api: torch.nn.functional.tanh
    supported: true

  - api: torch.nn.functional.tanhshrink
    supported: false

  - api: torch.nn.functional.threshold
    supported: true

  - api: torch.nn.functional.threshold_
    supported: true

  - api: torch.nn.functional.triplet_margin_loss
    supported: false

  - api: torch.nn.functional.triplet_margin_with_distance_loss
    supported: false

  - api: torch.nn.functional.unfold
    supported: true

  - api: torch.nn.functional.upsample
    supported: true
    limitations: mode参数为nearest或nearest-exact时，不支持5D输入；mode参数为nearest-exact时，不支持反向。

  - api: torch.nn.functional.upsample_bilinear
    supported: true

  - api: torch.nn.functional.upsample_nearest
    supported: true
    limitations: 不支持5D输入。

  - api: torch.nn.parallel.data_parallel
    supported: false

- torch.Tensor:

  - api: torch.Tensor
    supported: true

  - api: torch.Tensor.H
    supported: true

  - api: torch.Tensor.T
    supported: true

  - api: torch.Tensor.__init__
    supported: true

  - api: torch.Tensor.abs
    supported: true

  - api: torch.Tensor.abs_
    supported: true

  - api: torch.Tensor.absolute
    supported: true

  - api: torch.Tensor.absolute_
    supported: true

  - api: torch.Tensor.acos
    supported: true

  - api: torch.Tensor.acos_
    supported: true

  - api: torch.Tensor.acosh
    supported: true

  - api: torch.Tensor.acosh_
    supported: true

  - api: torch.Tensor.add
    supported: true

  - api: torch.Tensor.add_
    supported: true

  - api: torch.Tensor.addbmm
    supported: true

  - api: torch.Tensor.addbmm_
    supported: true

  - api: torch.Tensor.addcdiv
    supported: true

  - api: torch.Tensor.addcdiv_
    supported: true

  - api: torch.Tensor.addcmul
    supported: true

  - api: torch.Tensor.addcmul_
    supported: true

  - api: torch.Tensor.addmm
    supported: true

  - api: torch.Tensor.addmm_
    supported: true

  - api: torch.Tensor.addmv
    supported: true

  - api: torch.Tensor.addmv_
    supported: true

  - api: torch.Tensor.addr
    supported: true

  - api: torch.Tensor.addr_
    supported: true

  - api: torch.Tensor.adjoint
    supported: true

  - api: torch.Tensor.all
    supported: true

  - api: torch.Tensor.allclose
    supported: true

  - api: torch.Tensor.amax
    supported: true

  - api: torch.Tensor.amin
    supported: true

  - api: torch.Tensor.aminmax
    supported: false

  - api: torch.Tensor.angle
    supported: true

  - api: torch.Tensor.any
    supported: true

  - api: torch.Tensor.apply_
    supported: false

  - api: torch.Tensor.arccos
    supported: true

  - api: torch.Tensor.arccos_
    supported: true

  - api: torch.Tensor.arccosh
    supported: true

  - api: torch.Tensor.arccosh_
    supported: true

  - api: torch.Tensor.arcsin
    supported: true

  - api: torch.Tensor.arcsin_
    supported: true

  - api: torch.Tensor.arcsinh
    supported: true

  - api: torch.Tensor.arcsinh_
    supported: true

  - api: torch.Tensor.arctan
    supported: true

  - api: torch.Tensor.arctan2
    supported: true

  - api: torch.Tensor.arctan2_
    supported: true

  - api: torch.Tensor.arctan_
    supported: true

  - api: torch.Tensor.arctanh
    supported: true

  - api: torch.Tensor.arctanh_
    supported: true

  - api: torch.Tensor.argmax
    supported: true

  - api: torch.Tensor.argmin
    supported: true

  - api: torch.Tensor.argsort
    supported: true

  - api: torch.Tensor.argwhere
    supported: true

  - api: torch.Tensor.as_strided
    supported: true

  - api: torch.Tensor.as_subclass
    supported: false

  - api: torch.Tensor.asin
    supported: true

  - api: torch.Tensor.asin_
    supported: true

  - api: torch.Tensor.asinh
    supported: true

  - api: torch.Tensor.asinh_
    supported: true

  - api: torch.Tensor.atan
    supported: true

  - api: torch.Tensor.atan2
    supported: true

  - api: torch.Tensor.atan2_
    supported: true

  - api: torch.Tensor.atan_
    supported: true

  - api: torch.Tensor.atanh
    supported: true

  - api: torch.Tensor.atanh_
    supported: true

  - api: torch.Tensor.backward
    supported: true

  - api: torch.Tensor.baddbmm
    supported: true

  - api: torch.Tensor.baddbmm_
    supported: true

  - api: torch.Tensor.bernoulli
    supported: true

  - api: torch.Tensor.bernoulli_
    supported: true

  - api: torch.Tensor.bfloat16
    supported: true

  - api: torch.Tensor.bincount
    supported: true

  - api: torch.Tensor.bitwise_and
    supported: true

  - api: torch.Tensor.bitwise_and_
    supported: true

  - api: torch.Tensor.bitwise_left_shift
    supported: true

  - api: torch.Tensor.bitwise_left_shift_
    supported: true

  - api: torch.Tensor.bitwise_not
    supported: true

  - api: torch.Tensor.bitwise_not_
    supported: true

  - api: torch.Tensor.bitwise_or
    supported: true

  - api: torch.Tensor.bitwise_or_
    supported: true

  - api: torch.Tensor.bitwise_right_shift
    supported: true

  - api: torch.Tensor.bitwise_right_shift_
    supported: true

  - api: torch.Tensor.bitwise_xor
    supported: true

  - api: torch.Tensor.bitwise_xor_
    supported: true

  - api: torch.Tensor.bmm
    supported: true

  - api: torch.Tensor.bool
    supported: true

  - api: torch.Tensor.broadcast_to
    supported: true

  - api: torch.Tensor.byte
    supported: true

  - api: torch.Tensor.cauchy_
    supported: false

  - api: torch.Tensor.cdouble
    supported: false

  - api: torch.Tensor.ceil
    supported: true

  - api: torch.Tensor.ceil_
    supported: true

  - api: torch.Tensor.cfloat
    supported: true

  - api: torch.Tensor.chalf
    supported: false

  - api: torch.Tensor.char
    supported: true

  - api: torch.Tensor.cholesky
    supported: false

  - api: torch.Tensor.cholesky_inverse
    supported: false

  - api: torch.Tensor.cholesky_solve
    supported: false

  - api: torch.Tensor.chunk
    supported: true

  - api: torch.Tensor.clamp
    supported: true

  - api: torch.Tensor.clamp_
    supported: true

  - api: torch.Tensor.clip
    supported: true

  - api: torch.Tensor.clip_
    supported: true

  - api: torch.Tensor.clone
    supported: true

  - api: torch.Tensor.conj
    supported: true

  - api: torch.Tensor.conj_physical
    supported: true

  - api: torch.Tensor.conj_physical_
    supported: true

  - api: torch.Tensor.contiguous
    supported: true

  - api: torch.Tensor.copy_
    supported: true

  - api: torch.Tensor.copysign
    supported: false

  - api: torch.Tensor.copysign_
    supported: false

  - api: torch.Tensor.corrcoef
    supported: true

  - api: torch.Tensor.cos
    supported: true

  - api: torch.Tensor.cos_
    supported: true

  - api: torch.Tensor.cosh
    supported: true

  - api: torch.Tensor.cosh_
    supported: true

  - api: torch.Tensor.count_nonzero
    supported: true

  - api: torch.Tensor.cov
    supported: true

  - api: torch.Tensor.cpu
    supported: true

  - api: torch.Tensor.cross
    supported: true

  - api: torch.Tensor.cuda
    supported: true
    limitations: 提供torch.Tensor.mlu来转换Tensor对象的device为mlu。

  - api: torch.Tensor.cummax
    supported: true

  - api: torch.Tensor.cummin
    supported: true

  - api: torch.Tensor.cumprod
    supported: true

  - api: torch.Tensor.cumprod_
    supported: true

  - api: torch.Tensor.cumsum
    supported: true

  - api: torch.Tensor.cumsum_
    supported: true

  - api: torch.Tensor.data_ptr
    supported: true

  - api: torch.Tensor.deg2rad
    supported: true

  - api: torch.Tensor.dense_dim
    supported: false

  - api: torch.Tensor.dequantize
    supported: false

  - api: torch.Tensor.det
    supported: true

  - api: torch.Tensor.detach
    supported: true

  - api: torch.Tensor.detach_
    supported: true

  - api: torch.Tensor.device
    supported: true

  - api: torch.Tensor.diag
    supported: true

  - api: torch.Tensor.diag_embed
    supported: true

  - api: torch.Tensor.diagflat
    supported: true

  - api: torch.Tensor.diagonal
    supported: true

  - api: torch.Tensor.diagonal_scatter
    supported: true

  - api: torch.Tensor.diff
    supported: true

  - api: torch.Tensor.digamma
    supported: false

  - api: torch.Tensor.digamma_
    supported: false

  - api: torch.Tensor.dim
    supported: true

  - api: torch.Tensor.dim_order
    supported: false

  - api: torch.Tensor.dist
    supported: true

  - api: torch.Tensor.div
    supported: true

  - api: torch.Tensor.div_
    supported: true

  - api: torch.Tensor.divide
    supported: true

  - api: torch.Tensor.divide_
    supported: true

  - api: torch.Tensor.dot
    supported: true

  - api: torch.Tensor.double
    supported: true

  - api: torch.Tensor.dsplit
    supported: true

  - api: torch.Tensor.element_size
    supported: true

  - api: torch.Tensor.eq
    supported: true

  - api: torch.Tensor.eq_
    supported: true

  - api: torch.Tensor.equal
    supported: true

  - api: torch.Tensor.erf
    supported: true

  - api: torch.Tensor.erf_
    supported: true

  - api: torch.Tensor.erfc
    supported: true

  - api: torch.Tensor.erfc_
    supported: true

  - api: torch.Tensor.erfinv
    supported: true

  - api: torch.Tensor.erfinv_
    supported: true

  - api: torch.Tensor.exp
    supported: true

  - api: torch.Tensor.exp_
    supported: true

  - api: torch.Tensor.expand
    supported: true

  - api: torch.Tensor.expand_as
    supported: true

  - api: torch.Tensor.expm1
    supported: true

  - api: torch.Tensor.expm1_
    supported: true

  - api: torch.Tensor.exponential_
    supported: true

  - api: torch.Tensor.fill_
    supported: true

  - api: torch.Tensor.fill_diagonal_
    supported: true

  - api: torch.Tensor.fix
    supported: true

  - api: torch.Tensor.fix_
    supported: true

  - api: torch.Tensor.flatten
    supported: true

  - api: torch.Tensor.flip
    supported: true

  - api: torch.Tensor.fliplr
    supported: true

  - api: torch.Tensor.flipud
    supported: true

  - api: torch.Tensor.float
    supported: true

  - api: torch.Tensor.float_power
    supported: true

  - api: torch.Tensor.float_power_
    supported: true

  - api: torch.Tensor.floor
    supported: true

  - api: torch.Tensor.floor_
    supported: true

  - api: torch.Tensor.floor_divide
    supported: true

  - api: torch.Tensor.floor_divide_
    supported: true

  - api: torch.Tensor.fmax
    supported: false

  - api: torch.Tensor.fmin
    supported: false

  - api: torch.Tensor.fmod
    supported: true

  - api: torch.Tensor.fmod_
    supported: true

  - api: torch.Tensor.frac
    supported: true

  - api: torch.Tensor.frac_
    supported: true

  - api: torch.Tensor.frexp
    supported: false

  - api: torch.Tensor.gather
    supported: true

  - api: torch.Tensor.gcd
    supported: false

  - api: torch.Tensor.gcd_
    supported: false

  - api: torch.Tensor.ge
    supported: true

  - api: torch.Tensor.ge_
    supported: true

  - api: torch.Tensor.geometric_
    supported: false

  - api: torch.Tensor.geqrf
    supported: false

  - api: torch.Tensor.ger
    supported: true

  - api: torch.Tensor.get_device
    supported: true

  - api: torch.Tensor.grad
    supported: true

  - api: torch.Tensor.greater
    supported: true

  - api: torch.Tensor.greater_
    supported: true

  - api: torch.Tensor.greater_equal
    supported: true

  - api: torch.Tensor.greater_equal_
    supported: true

  - api: torch.Tensor.gt
    supported: true

  - api: torch.Tensor.gt_
    supported: true

  - api: torch.Tensor.half
    supported: true

  - api: torch.Tensor.hardshrink
    supported: true

  - api: torch.Tensor.heaviside
    supported: false

  - api: torch.Tensor.histc
    supported: true

  - api: torch.Tensor.histogram
    supported: false

  - api: torch.Tensor.hsplit
    supported: true

  - api: torch.Tensor.hypot
    supported: false

  - api: torch.Tensor.hypot_
    supported: false

  - api: torch.Tensor.i0
    supported: false

  - api: torch.Tensor.i0_
    supported: false

  - api: torch.Tensor.igamma
    supported: false

  - api: torch.Tensor.igamma_
    supported: false

  - api: torch.Tensor.igammac
    supported: false

  - api: torch.Tensor.igammac_
    supported: false

  - api: torch.Tensor.imag
    supported: true

  - api: torch.Tensor.index_add
    supported: true

  - api: torch.Tensor.index_add_
    supported: true

  - api: torch.Tensor.index_copy
    supported: true

  - api: torch.Tensor.index_copy_
    supported: true

  - api: torch.Tensor.index_fill
    supported: true

  - api: torch.Tensor.index_fill_
    supported: true

  - api: torch.Tensor.index_put
    supported: true
    limitations: indices不能包含None。indices不能为空。不支持有internal overlap的input。

  - api: torch.Tensor.index_put_
    supported: true
    limitations: indices不能包含None。indices不能为空。不支持有internal overlap的input。

  - api: torch.Tensor.index_reduce
    supported: false

  - api: torch.Tensor.index_reduce_
    supported: false

  - api: torch.Tensor.index_select
    supported: true

  - api: torch.Tensor.indices
    supported: false

  - api: torch.Tensor.inner
    supported: true

  - api: torch.Tensor.int
    supported: true

  - api: torch.Tensor.int_repr
    supported: false

  - api: torch.Tensor.inverse
    supported: true

  - api: torch.Tensor.is_complex
    supported: true

  - api: torch.Tensor.is_conj
    supported: true

  - api: torch.Tensor.is_contiguous
    supported: true

  - api: torch.Tensor.is_cuda
    supported: true
    limitations: 提供torch.Tensor.is_mlu接口来判断Tensor对象的device是否为mlu。

  - api: torch.Tensor.is_floating_point
    supported: true

  - api: torch.Tensor.is_inference
    supported: true

  - api: torch.Tensor.is_leaf
    supported: false

  - api: torch.Tensor.is_meta
    supported: false

  - api: torch.Tensor.is_pinned
    supported: true

  - api: torch.Tensor.is_quantized
    supported: false

  - api: torch.Tensor.is_set_to
    supported: true

  - api: torch.Tensor.is_shared
    supported: true

  - api: torch.Tensor.is_signed
    supported: true

  - api: torch.Tensor.is_sparse
    supported: true

  - api: torch.Tensor.isclose
    supported: true

  - api: torch.Tensor.isfinite
    supported: true

  - api: torch.Tensor.isinf
    supported: true

  - api: torch.Tensor.isnan
    supported: true

  - api: torch.Tensor.isneginf
    supported: false

  - api: torch.Tensor.isposinf
    supported: false

  - api: torch.Tensor.isreal
    supported: true

  - api: torch.Tensor.istft
    supported: false

  - api: torch.Tensor.item
    supported: true

  - api: torch.Tensor.itemsize
    supported: false

  - api: torch.Tensor.kthvalue
    supported: true

  - api: torch.Tensor.lcm
    supported: false

  - api: torch.Tensor.lcm_
    supported: false

  - api: torch.Tensor.ldexp
    supported: true

  - api: torch.Tensor.ldexp_
    supported: true

  - api: torch.Tensor.le
    supported: true

  - api: torch.Tensor.le_
    supported: true

  - api: torch.Tensor.lerp
    supported: true

  - api: torch.Tensor.lerp_
    supported: true

  - api: torch.Tensor.less
    supported: true

  - api: torch.Tensor.less_
    supported: true

  - api: torch.Tensor.less_equal
    supported: true

  - api: torch.Tensor.less_equal_
    supported: true

  - api: torch.Tensor.lgamma
    supported: false

  - api: torch.Tensor.lgamma_
    supported: false

  - api: torch.Tensor.log
    supported: true

  - api: torch.Tensor.log10
    supported: true

  - api: torch.Tensor.log10_
    supported: true

  - api: torch.Tensor.log1p
    supported: true

  - api: torch.Tensor.log1p_
    supported: true

  - api: torch.Tensor.log2
    supported: true

  - api: torch.Tensor.log2_
    supported: true

  - api: torch.Tensor.log_
    supported: true

  - api: torch.Tensor.log_normal_
    supported: false

  - api: torch.Tensor.logaddexp
    supported: true

  - api: torch.Tensor.logaddexp2
    supported: true

  - api: torch.Tensor.logcumsumexp
    supported: false

  - api: torch.Tensor.logdet
    supported: true

  - api: torch.Tensor.logical_and
    supported: true

  - api: torch.Tensor.logical_and_
    supported: true

  - api: torch.Tensor.logical_not
    supported: true

  - api: torch.Tensor.logical_not_
    supported: true

  - api: torch.Tensor.logical_or
    supported: true

  - api: torch.Tensor.logical_or_
    supported: true

  - api: torch.Tensor.logical_xor
    supported: true

  - api: torch.Tensor.logical_xor_
    supported: true

  - api: torch.Tensor.logit
    supported: false

  - api: torch.Tensor.logit_
    supported: false

  - api: torch.Tensor.logsumexp
    supported: true

  - api: torch.Tensor.long
    supported: true

  - api: torch.Tensor.lt
    supported: true

  - api: torch.Tensor.lt_
    supported: true

  - api: torch.Tensor.lu
    supported: false

  - api: torch.Tensor.lu_solve
    supported: false

  - api: torch.Tensor.mH
    supported: true

  - api: torch.Tensor.mT
    supported: true

  - api: torch.Tensor.map_
    supported: false

  - api: torch.Tensor.masked_fill
    supported: true

  - api: torch.Tensor.masked_fill_
    supported: true

  - api: torch.Tensor.masked_scatter
    supported: true

  - api: torch.Tensor.masked_scatter_
    supported: true

  - api: torch.Tensor.masked_select
    supported: true

  - api: torch.Tensor.matmul
    supported: true

  - api: torch.Tensor.matrix_exp
    supported: false

  - api: torch.Tensor.matrix_power
    supported: true

  - api: torch.Tensor.max
    supported: true

  - api: torch.Tensor.maximum
    supported: true

  - api: torch.Tensor.mean
    supported: true

  - api: torch.Tensor.median
    supported: true

  - api: torch.Tensor.min
    supported: true

  - api: torch.Tensor.minimum
    supported: true

  - api: torch.Tensor.mm
    supported: true

  - api: torch.Tensor.mode
    supported: false

  - api: torch.Tensor.module_load
    supported: true

  - api: torch.Tensor.moveaxis
    supported: true

  - api: torch.Tensor.movedim
    supported: true

  - api: torch.Tensor.msort
    supported: true

  - api: torch.Tensor.mul
    supported: true

  - api: torch.Tensor.mul_
    supported: true

  - api: torch.Tensor.multinomial
    supported: true

  - api: torch.Tensor.multiply
    supported: true

  - api: torch.Tensor.multiply_
    supported: true

  - api: torch.Tensor.mv
    supported: true

  - api: torch.Tensor.mvlgamma
    supported: false

  - api: torch.Tensor.mvlgamma_
    supported: false

  - api: torch.Tensor.nan_to_num
    supported: true

  - api: torch.Tensor.nan_to_num_
    supported: true

  - api: torch.Tensor.nanmean
    supported: true

  - api: torch.Tensor.nanmedian
    supported: false

  - api: torch.Tensor.nanquantile
    supported: true

  - api: torch.Tensor.nansum
    supported: true

  - api: torch.Tensor.narrow
    supported: true

  - api: torch.Tensor.narrow_copy
    supported: true

  - api: torch.Tensor.nbytes
    supported: false

  - api: torch.Tensor.ndim
    supported: true

  - api: torch.Tensor.ndimension
    supported: true

  - api: torch.Tensor.ne
    supported: true

  - api: torch.Tensor.ne_
    supported: true

  - api: torch.Tensor.neg
    supported: true

  - api: torch.Tensor.neg_
    supported: true

  - api: torch.Tensor.negative
    supported: true

  - api: torch.Tensor.negative_
    supported: true

  - api: torch.Tensor.nelement
    supported: true

  - api: torch.Tensor.new_empty
    supported: true

  - api: torch.Tensor.new_full
    supported: true

  - api: torch.Tensor.new_ones
    supported: true

  - api: torch.Tensor.new_tensor
    supported: true

  - api: torch.Tensor.new_zeros
    supported: true

  - api: torch.Tensor.nextafter
    supported: false

  - api: torch.Tensor.nextafter_
    supported: false

  - api: torch.Tensor.nonzero
    supported: true

  - api: torch.Tensor.norm
    supported: true
    limitations: 参数p不支持inf、-inf和'nuc'。

  - api: torch.Tensor.normal_
    supported: true

  - api: torch.Tensor.not_equal
    supported: true

  - api: torch.Tensor.not_equal_
    supported: true

  - api: torch.Tensor.numel
    supported: true

  - api: torch.Tensor.numpy
    supported: false

  - api: torch.Tensor.orgqr
    supported: false

  - api: torch.Tensor.ormqr
    supported: false

  - api: torch.Tensor.outer
    supported: true

  - api: torch.Tensor.permute
    supported: true

  - api: torch.Tensor.pin_memory
    supported: true

  - api: torch.Tensor.pinverse
    supported: true

  - api: torch.Tensor.polygamma
    supported: false

  - api: torch.Tensor.polygamma_
    supported: false

  - api: torch.Tensor.positive
    supported: true

  - api: torch.Tensor.pow
    supported: true

  - api: torch.Tensor.pow_
    supported: true

  - api: torch.Tensor.prod
    supported: true

  - api: torch.Tensor.put_
    supported: true

  - api: torch.Tensor.q_per_channel_axis
    supported: false

  - api: torch.Tensor.q_per_channel_scales
    supported: false

  - api: torch.Tensor.q_per_channel_zero_points
    supported: false

  - api: torch.Tensor.q_scale
    supported: false

  - api: torch.Tensor.q_zero_point
    supported: false

  - api: torch.Tensor.qr
    supported: true

  - api: torch.Tensor.qscheme
    supported: false

  - api: torch.Tensor.quantile
    supported: true

  - api: torch.Tensor.rad2deg
    supported: true

  - api: torch.Tensor.random_
    supported: true

  - api: torch.Tensor.ravel
    supported: true

  - api: torch.Tensor.real
    supported: true

  - api: torch.Tensor.reciprocal
    supported: true

  - api: torch.Tensor.reciprocal_
    supported: true

  - api: torch.Tensor.record_stream
    supported: true

  - api: torch.Tensor.register_hook
    supported: true

  - api: torch.Tensor.register_post_accumulate_grad_hook
    supported: false

  - api: torch.Tensor.remainder
    supported: true

  - api: torch.Tensor.remainder_
    supported: false

  - api: torch.Tensor.renorm
    supported: false

  - api: torch.Tensor.renorm_
    supported: false

  - api: torch.Tensor.repeat
    supported: true

  - api: torch.Tensor.repeat_interleave
    supported: true

  - api: torch.Tensor.requires_grad
    supported: true

  - api: torch.Tensor.requires_grad_
    supported: true

  - api: torch.Tensor.reshape
    supported: true

  - api: torch.Tensor.reshape_as
    supported: true

  - api: torch.Tensor.resize_
    supported: true

  - api: torch.Tensor.resize_as_
    supported: true

  - api: torch.Tensor.resolve_conj
    supported: true

  - api: torch.Tensor.resolve_neg
    supported: true

  - api: torch.Tensor.retain_grad
    supported: true

  - api: torch.Tensor.retains_grad
    supported: true

  - api: torch.Tensor.roll
    supported: true

  - api: torch.Tensor.rot90
    supported: true

  - api: torch.Tensor.round
    supported: true
    limitations: 不支持decimals参数。

  - api: torch.Tensor.round_
    supported: true
    limitations: 不支持decimals参数。

  - api: torch.Tensor.rsqrt
    supported: true

  - api: torch.Tensor.rsqrt_
    supported: true

  - api: torch.Tensor.scatter
    supported: true
    limitations: reduce模式只支持add。

  - api: torch.Tensor.scatter_
    supported: true
    limitations: reduce模式只支持add。

  - api: torch.Tensor.scatter_add
    supported: true

  - api: torch.Tensor.scatter_add_
    supported: true

  - api: torch.Tensor.scatter_reduce
    supported: true
    limitations: reduce只支持sum/amin/amax模式。

  - api: torch.Tensor.scatter_reduce_
    supported: true
    limitations: reduce只支持sum/amin/amax模式。

  - api: torch.Tensor.select
    supported: true

  - api: torch.Tensor.select_scatter
    supported: true

  - api: torch.Tensor.set_
    supported: true

  - api: torch.Tensor.sgn
    supported: true

  - api: torch.Tensor.sgn_
    supported: true

  - api: torch.Tensor.shape
    supported: false

  - api: torch.Tensor.share_memory_
    supported: true

  - api: torch.Tensor.short
    supported: true

  - api: torch.Tensor.sigmoid
    supported: true

  - api: torch.Tensor.sigmoid_
    supported: true

  - api: torch.Tensor.sign
    supported: true

  - api: torch.Tensor.sign_
    supported: true

  - api: torch.Tensor.signbit
    supported: false

  - api: torch.Tensor.sin
    supported: true

  - api: torch.Tensor.sin_
    supported: true

  - api: torch.Tensor.sinc
    supported: false

  - api: torch.Tensor.sinc_
    supported: false

  - api: torch.Tensor.sinh
    supported: true

  - api: torch.Tensor.sinh_
    supported: true

  - api: torch.Tensor.size
    supported: true

  - api: torch.Tensor.slice_scatter
    supported: false

  - api: torch.Tensor.slogdet
    supported: true

  - api: torch.Tensor.smm
    supported: false

  - api: torch.Tensor.softmax
    supported: false

  - api: torch.Tensor.sort
    supported: true

  - api: torch.Tensor.sparse_dim
    supported: false

  - api: torch.Tensor.sparse_mask
    supported: false

  - api: torch.Tensor.split
    supported: true

  - api: torch.Tensor.sqrt
    supported: true

  - api: torch.Tensor.sqrt_
    supported: true

  - api: torch.Tensor.square
    supported: true

  - api: torch.Tensor.square_
    supported: true

  - api: torch.Tensor.squeeze
    supported: true

  - api: torch.Tensor.squeeze_
    supported: true

  - api: torch.Tensor.sspaddmm
    supported: false

  - api: torch.Tensor.std
    supported: true

  - api: torch.Tensor.stft
    supported: true
    limitations: 当前 pad_mode 不支持 replicate。当前不支持输入参数onesided传False，只能输出一半结果。

  - api: torch.Tensor.storage
    supported: true

  - api: torch.Tensor.storage_offset
    supported: true

  - api: torch.Tensor.storage_type
    supported: true

  - api: torch.Tensor.stride
    supported: true

  - api: torch.Tensor.sub
    supported: true

  - api: torch.Tensor.sub_
    supported: true

  - api: torch.Tensor.subtract
    supported: true

  - api: torch.Tensor.subtract_
    supported: true

  - api: torch.Tensor.sum
    supported: true

  - api: torch.Tensor.sum_to_size
    supported: false

  - api: torch.Tensor.svd
    supported: true
    limitations: 不支持compute_uv为false的情况，不支持driver参数。

  - api: torch.Tensor.swapaxes
    supported: false

  - api: torch.Tensor.swapdims
    supported: false

  - api: torch.Tensor.t
    supported: true

  - api: torch.Tensor.t_
    supported: true

  - api: torch.Tensor.take
    supported: true

  - api: torch.Tensor.take_along_dim
    supported: false

  - api: torch.Tensor.tan
    supported: true

  - api: torch.Tensor.tan_
    supported: true

  - api: torch.Tensor.tanh
    supported: true

  - api: torch.Tensor.tanh_
    supported: true

  - api: torch.Tensor.tensor_split
    supported: true

  - api: torch.Tensor.tile
    supported: false

  - api: torch.Tensor.to
    supported: true

  - api: torch.Tensor.to_dense
    supported: false

  - api: torch.Tensor.to_mkldnn
    supported: false

  - api: torch.Tensor.to_sparse
    supported: false

  - api: torch.Tensor.to_sparse_bsc
    supported: false

  - api: torch.Tensor.to_sparse_bsr
    supported: false

  - api: torch.Tensor.to_sparse_csc
    supported: false

  - api: torch.Tensor.to_sparse_csr
    supported: false

  - api: torch.Tensor.tolist
    supported: false

  - api: torch.Tensor.topk
    supported: true

  - api: torch.Tensor.trace
    supported: true

  - api: torch.Tensor.transpose
    supported: true

  - api: torch.Tensor.transpose_
    supported: true

  - api: torch.Tensor.triangular_solve
    supported: false

  - api: torch.Tensor.tril
    supported: true

  - api: torch.Tensor.tril_
    supported: true

  - api: torch.Tensor.triu
    supported: true

  - api: torch.Tensor.triu_
    supported: true

  - api: torch.Tensor.true_divide
    supported: true

  - api: torch.Tensor.true_divide_
    supported: true

  - api: torch.Tensor.trunc
    supported: true

  - api: torch.Tensor.trunc_
    supported: true

  - api: torch.Tensor.type
    supported: false

  - api: torch.Tensor.type_as
    supported: false

  - api: torch.Tensor.unbind
    supported: true

  - api: torch.Tensor.unflatten
    supported: true

  - api: torch.Tensor.unfold
    supported: true

  - api: torch.Tensor.uniform_
    supported: true

  - api: torch.Tensor.unique
    supported: true

  - api: torch.Tensor.unique_consecutive
    supported: true

  - api: torch.Tensor.unsqueeze
    supported: true

  - api: torch.Tensor.unsqueeze_
    supported: true

  - api: torch.Tensor.untyped_storage
    supported: false

  - api: torch.Tensor.values
    supported: false

  - api: torch.Tensor.var
    supported: true

  - api: torch.Tensor.vdot
    supported: false

  - api: torch.Tensor.view
    supported: true

  - api: torch.Tensor.view_as
    supported: true

  - api: torch.Tensor.vsplit
    supported: false

  - api: torch.Tensor.where
    supported: true

  - api: torch.Tensor.xlogy
    supported: true

  - api: torch.Tensor.xlogy_
    supported: true

  - api: torch.Tensor.xpu
    supported: false

  - api: torch.Tensor.zero_
    supported: true

- Tensor Attributes:

  - api: torch.device
    supported: true

  - api: torch.dtype
    supported: true

  - api: torch.layout
    supported: true

  - api: torch.memory_format
    supported: true

- Tensor Views: []

- torch.amp:

  - api: torch.amp.autocast_mode.is_autocast_available
    corresponding MLU api: torch.amp.autocast_mode.is_autocast_available
    supported: true

  - api: torch.amp.custom_bwd
    corresponding MLU api: torch.amp.custom_bwd
    supported: true

  - api: torch.amp.custom_fwd
    corresponding MLU api: torch.amp.custom_fwd
    supported: true

  - api: torch.autocast
    corresponding MLU api: torch.autocast
    supported: true

  - api: torch.cpu.amp.autocast
    supported: true

  - api: torch.cuda.amp.GradScaler
    corresponding MLU api: torch.mlu.amp.GradScaler
    supported: true

  - api: torch.cuda.amp.autocast
    corresponding MLU api: torch.mlu.amp.autocast
    supported: true
    limitations: torch.cuda.amp.XXX接口已经不支持，会产生Warning，并导致AMP模式不生效，请使用torch.mlu.amp.XXX接口

  - api: torch.cuda.amp.custom_bwd
    corresponding MLU api: torch.mlu.amp.custom_bwd
    supported: true

  - api: torch.cuda.amp.custom_fwd
    corresponding MLU api: torch.mlu.amp.custom_fwd
    supported: true

- torch.autograd:

  - api: torch.autograd.Function
    supported: true

  - api: torch.autograd.Function.backward
    supported: true

  - api: torch.autograd.Function.forward
    supported: true

  - api: torch.autograd.Function.jvp
    supported: true

  - api: torch.autograd.Function.vmap
    supported: false

  - api: torch.autograd.backward
    supported: true

  - api: torch.autograd.detect_anomaly
    supported: true

  - api: torch.autograd.forward_ad.UnpackedDualTensor
    supported: true

  - api: torch.autograd.forward_ad.UnpackedDualTensor.count
    supported: true

  - api: torch.autograd.forward_ad.UnpackedDualTensor.index
    supported: true

  - api: torch.autograd.forward_ad.UnpackedDualTensor.primal
    supported: true

  - api: torch.autograd.forward_ad.UnpackedDualTensor.tangent
    supported: true

  - api: torch.autograd.forward_ad.dual_level
    supported: true

  - api: torch.autograd.forward_ad.enter_dual_level
    supported: true

  - api: torch.autograd.forward_ad.exit_dual_level
    supported: true

  - api: torch.autograd.forward_ad.make_dual
    supported: true

  - api: torch.autograd.forward_ad.unpack_dual
    supported: true

  - api: torch.autograd.function.BackwardCFunction
    supported: true

  - api: torch.autograd.function.BackwardCFunction.apply
    supported: true

  - api: torch.autograd.function.BackwardCFunction.apply_jvp
    supported: true

  - api: torch.autograd.function.BackwardCFunction.mark_dirty
    supported: true

  - api: torch.autograd.function.BackwardCFunction.mark_non_differentiable
    supported: true

  - api: torch.autograd.function.BackwardCFunction.save_for_backward
    supported: true

  - api: torch.autograd.function.BackwardCFunction.save_for_forward
    supported: true

  - api: torch.autograd.function.BackwardCFunction.set_materialize_grads
    supported: true

  - api: torch.autograd.function.FunctionCtx.mark_dirty
    supported: true

  - api: torch.autograd.function.FunctionCtx.mark_non_differentiable
    supported: true

  - api: torch.autograd.function.FunctionCtx.save_for_backward
    supported: true

  - api: torch.autograd.function.FunctionCtx.set_materialize_grads
    supported: true

  - api: torch.autograd.function.InplaceFunction
    supported: true

  - api: torch.autograd.function.InplaceFunction.backward
    supported: true

  - api: torch.autograd.function.InplaceFunction.forward
    supported: true

  - api: torch.autograd.function.InplaceFunction.jvp
    supported: true

  - api: torch.autograd.function.InplaceFunction.mark_dirty
    supported: true

  - api: torch.autograd.function.InplaceFunction.mark_non_differentiable
    supported: true

  - api: torch.autograd.function.InplaceFunction.save_for_backward
    supported: true

  - api: torch.autograd.function.InplaceFunction.save_for_forward
    supported: true

  - api: torch.autograd.function.InplaceFunction.set_materialize_grads
    supported: true

  - api: torch.autograd.function.InplaceFunction.setup_context
    supported: true

  - api: torch.autograd.function.InplaceFunction.vjp
    supported: true

  - api: torch.autograd.function.InplaceFunction.vmap
    supported: true

  - api: torch.autograd.function.NestedIOFunction
    supported: true

  - api: torch.autograd.function.NestedIOFunction.backward
    supported: true

  - api: torch.autograd.function.NestedIOFunction.backward_extended
    supported: true

  - api: torch.autograd.function.NestedIOFunction.forward
    supported: true

  - api: torch.autograd.function.NestedIOFunction.forward_extended
    supported: true

  - api: torch.autograd.function.NestedIOFunction.jvp
    supported: true

  - api: torch.autograd.function.NestedIOFunction.mark_dirty
    supported: true

  - api: torch.autograd.function.NestedIOFunction.mark_non_differentiable
    supported: true

  - api: torch.autograd.function.NestedIOFunction.save_for_backward
    supported: true

  - api: torch.autograd.function.NestedIOFunction.save_for_forward
    supported: true

  - api: torch.autograd.function.NestedIOFunction.saved_tensors
    supported: true

  - api: torch.autograd.function.NestedIOFunction.set_materialize_grads
    supported: true

  - api: torch.autograd.function.NestedIOFunction.setup_context
    supported: true

  - api: torch.autograd.function.NestedIOFunction.vjp
    supported: true

  - api: torch.autograd.function.NestedIOFunction.vmap
    supported: true

  - api: torch.autograd.function.once_differentiable
    supported: true

  - api: torch.autograd.functional.hessian
    supported: true

  - api: torch.autograd.functional.hvp
    supported: true

  - api: torch.autograd.functional.jacobian
    supported: true

  - api: torch.autograd.functional.jvp
    supported: true

  - api: torch.autograd.functional.vhp
    supported: true

  - api: torch.autograd.functional.vjp
    supported: true

  - api: torch.autograd.grad
    supported: true

  - api: torch.autograd.grad_mode.set_multithreading_enabled
    supported: true

  - api: torch.autograd.grad_mode.set_multithreading_enabled.clone
    supported: true

  - api: torch.autograd.gradcheck.GradcheckError
    supported: true

  - api: torch.autograd.gradcheck.gradcheck
    supported: true

  - api: torch.autograd.gradcheck.gradgradcheck
    supported: true

  - api: torch.autograd.graph.GradientEdge
    supported: false

  - api: torch.autograd.graph.Node.metadata
    supported: false

  - api: torch.autograd.graph.Node.name
    supported: false

  - api: torch.autograd.graph.Node.next_functions
    supported: false

  - api: torch.autograd.graph.Node.register_hook
    supported: false

  - api: torch.autograd.graph.Node.register_prehook
    supported: false

  - api: torch.autograd.graph.allow_mutation_on_saved_tensors
    supported: false

  - api: torch.autograd.graph.disable_saved_tensors_hooks
    supported: true

  - api: torch.autograd.graph.get_gradient_edge
    supported: false

  - api: torch.autograd.graph.increment_version
    supported: false

  - api: torch.autograd.graph.register_multi_grad_hook
    supported: false

  - api: torch.autograd.graph.save_on_cpu
    supported: true

  - api: torch.autograd.graph.saved_tensors_hooks
    supported: true

  - api: torch.autograd.profiler.EnforceUnique
    supported: true

  - api: torch.autograd.profiler.EnforceUnique.see
    supported: true

  - api: torch.autograd.profiler.KinetoStepTracker
    supported: true

  - api: torch.autograd.profiler.KinetoStepTracker.current_step
    supported: true

  - api: torch.autograd.profiler.KinetoStepTracker.erase_step_count
    supported: true

  - api: torch.autograd.profiler.KinetoStepTracker.increment_step
    supported: true

  - api: torch.autograd.profiler.KinetoStepTracker.init_step_count
    supported: true

  - api: torch.autograd.profiler.emit_itt
    supported: false

  - api: torch.autograd.profiler.load_nvprof
    supported: false

  - api: torch.autograd.profiler.parse_nvprof_trace
    supported: false

  - api: torch.autograd.profiler.profile
    supported: true
    limitations: 不支持experimental_config、with_modules和with_flops参数

  - api: torch.autograd.profiler.profile.export_chrome_trace
    supported: true

  - api: torch.autograd.profiler.profile.key_averages
    supported: true

  - api: torch.autograd.profiler.profile.self_cpu_time_total
    supported: true

  - api: torch.autograd.profiler.profile.total_average
    supported: true

  - api: torch.autograd.profiler.record_function
    supported: true

  - api: torch.autograd.profiler_util.Interval
    supported: true

  - api: torch.autograd.profiler_util.Interval.elapsed_us
    supported: true

  - api: torch.autograd.profiler_util.Kernel
    supported: true

  - api: torch.autograd.profiler_util.Kernel.count
    supported: true

  - api: torch.autograd.profiler_util.Kernel.device
    supported: true

  - api: torch.autograd.profiler_util.Kernel.duration
    supported: true

  - api: torch.autograd.profiler_util.Kernel.index
    supported: true

  - api: torch.autograd.profiler_util.Kernel.name
    supported: true

  - api: torch.autograd.profiler_util.MemRecordsAcc
    supported: true

  - api: torch.autograd.profiler_util.MemRecordsAcc.in_interval
    supported: true

  - api: torch.autograd.profiler_util.StringTable
    supported: true

  - api: torch.autograd.profiler_util.StringTable.clear
    supported: true

  - api: torch.autograd.profiler_util.StringTable.copy
    supported: true

  - api: torch.autograd.profiler_util.StringTable.default_factory
    supported: true

  - api: torch.autograd.profiler_util.StringTable.fromkeys
    supported: true

  - api: torch.autograd.profiler_util.StringTable.get
    supported: true

  - api: torch.autograd.profiler_util.StringTable.items
    supported: true

  - api: torch.autograd.profiler_util.StringTable.keys
    supported: true

  - api: torch.autograd.profiler_util.StringTable.pop
    supported: true

  - api: torch.autograd.profiler_util.StringTable.popitem
    supported: true

  - api: torch.autograd.profiler_util.StringTable.setdefault
    supported: true

  - api: torch.autograd.profiler_util.StringTable.update
    supported: true

  - api: torch.autograd.profiler_util.StringTable.values
    supported: true

  - api: torch.autograd.set_detect_anomaly
    supported: true

- torch.library:

  - api: torch.library.Library
    supported: true

  - api: torch.library.Library.define
    supported: true

  - api: torch.library.Library.impl
    supported: true

  - api: torch.library.custom_op
    supported: false

  - api: torch.library.define
    supported: false

  - api: torch.library.fallthrough_kernel
    supported: false

  - api: torch.library.get_ctx
    supported: false

  - api: torch.library.impl
    supported: false

  - api: torch.library.impl_abstract
    supported: false

  - api: torch.library.opcheck
    supported: false

  - api: torch.library.register_autograd
    supported: false

  - api: torch.library.register_fake
    supported: false

  - api: torch.library.register_kernel
    supported: false

- torch.cpu:

  - api: torch.cpu.Stream
    supported: false

  - api: torch.cpu.StreamContext
    supported: false

  - api: torch.cpu.current_device
    supported: false

  - api: torch.cpu.current_stream
    supported: false

  - api: torch.cpu.device_count
    supported: false

  - api: torch.cpu.is_available
    supported: false

  - api: torch.cpu.set_device
    supported: false

  - api: torch.cpu.stream
    supported: false

  - api: torch.cpu.synchronize
    supported: false

- torch.cuda:

  - api: torch.cuda.CUDAGraph
    corresponding MLU api: torch.mlu.MLUGraph
    supported: true
    limitations: 当前使用relaxed模式捕获图；不支持rrelu training模式捕获；不支持带dropout参数的RNN系列算子捕获；不支持300系列板卡；单机CNCL版本需高于1.17.0且只支持MLULINK方式的通信，多机版本需高于1.19.0。

  - api: torch.cuda.CUDAGraph.capture_begin
    corresponding MLU api: torch.mlu.MLUGraph.capture_begin
    supported: true

  - api: torch.cuda.CUDAGraph.capture_end
    corresponding MLU api: torch.mlu.MLUGraph.capture_end
    supported: true

  - api: torch.cuda.CUDAGraph.debug_dump
    corresponding MLU api: torch.mlu.MLUGraph.debug_dump
    supported: true

  - api: torch.cuda.CUDAGraph.enable_debug_mode
    corresponding MLU api: torch.mlu.MLUGraph.enable_debug_mode
    supported: true

  - api: torch.cuda.CUDAGraph.pool
    corresponding MLU api: torch.mlu.MLUGraph.pool
    supported: true

  - api: torch.cuda.CUDAGraph.replay
    corresponding MLU api: torch.mlu.MLUGraph.replay
    supported: true

  - api: torch.cuda.CUDAGraph.reset
    corresponding MLU api: torch.mlu.MLUGraph.reset
    supported: true

  - api: torch.cuda.CUDAPluggableAllocator
    corresponding MLU api: torch.mlu.MLUPluggableAllocator
    supported: true

  - api: torch.cuda.Event
    corresponding MLU api: torch.mlu.Event
    supported: true
    limitations: 目前不支持 blocking=True 的初始化。

  - api: torch.cuda.Event.elapsed_time
    corresponding MLU api: torch.mlu.Event.elapsed_time
    supported: true

  - api: torch.cuda.Event.from_ipc_handle
    corresponding MLU api: torch.mlu.Event.from_ipc_handle
    supported: true

  - api: torch.cuda.Event.ipc_handle
    corresponding MLU api: torch.mlu.Event.ipc_handle
    supported: true

  - api: torch.cuda.Event.query
    corresponding MLU api: torch.mlu.Event.query
    supported: true

  - api: torch.cuda.Event.record
    corresponding MLU api: torch.mlu.Event.record
    supported: true

  - api: torch.cuda.Event.synchronize
    corresponding MLU api: torch.mlu.Event.synchronize
    supported: true

  - api: torch.cuda.Event.wait
    corresponding MLU api: torch.mlu.Event.wait
    supported: true

  - api: torch.cuda.ExternalStream
    corresponding MLU api: torch.mlu.ExternalStream
    supported: true

  - api: torch.cuda.ExternalStream.query
    corresponding MLU api: torch.mlu.ExternalStream.query
    supported: true

  - api: torch.cuda.ExternalStream.record_event
    corresponding MLU api: torch.mlu.ExternalStream.record_event
    supported: true

  - api: torch.cuda.ExternalStream.synchronize
    corresponding MLU api: torch.mlu.ExternalStream.synchronize
    supported: true

  - api: torch.cuda.ExternalStream.wait_event
    corresponding MLU api: torch.mlu.ExternalStream.wait_event
    supported: true

  - api: torch.cuda.ExternalStream.wait_stream
    corresponding MLU api: torch.mlu.ExternalStream.wait_stream
    supported: true

  - api: torch.cuda.OutOfMemoryError
    corresponding MLU api: torch.mlu.OutOfMemoryError
    supported: true

  - api: torch.cuda.Stream
    corresponding MLU api: torch.mlu.Stream
    supported: true

  - api: torch.cuda.Stream.query
    corresponding MLU api: torch.mlu.Stream.query
    supported: true

  - api: torch.cuda.Stream.record_event
    corresponding MLU api: torch.mlu.Stream.record_event
    supported: true

  - api: torch.cuda.Stream.synchronize
    corresponding MLU api: torch.mlu.Stream.synchronize
    supported: true

  - api: torch.cuda.Stream.wait_event
    corresponding MLU api: torch.mlu.Stream.wait_event
    supported: true

  - api: torch.cuda.Stream.wait_stream
    corresponding MLU api: torch.mlu.Stream.wait_stream
    supported: true

  - api: torch.cuda.StreamContext
    corresponding MLU api: torch.mlu.StreamContext
    supported: true

  - api: torch.cuda._sanitizer.enable_cuda_sanitizer
    supported: false

  - api: torch.cuda.caching_allocator_alloc
    corresponding MLU api: torch.mlu.caching_allocator_alloc
    supported: true

  - api: torch.cuda.caching_allocator_delete
    corresponding MLU api: torch.mlu.caching_allocator_delete
    supported: true

  - api: torch.cuda.can_device_access_peer
    corresponding MLU api: torch.mlu.can_device_access_peer
    supported: true

  - api: torch.cuda.change_current_allocator
    corresponding MLU api: torch.mlu.change_current_allocator
    supported: true

  - api: torch.cuda.clock_rate
    supported: false

  - api: torch.cuda.comm.broadcast
    supported: false

  - api: torch.cuda.comm.broadcast_coalesced
    supported: false

  - api: torch.cuda.comm.gather
    supported: false

  - api: torch.cuda.comm.reduce_add
    supported: false

  - api: torch.cuda.comm.scatter
    supported: false

  - api: torch.cuda.current_blas_handle
    supported: false

  - api: torch.cuda.current_device
    corresponding MLU api: torch.mlu.current_device
    supported: true

  - api: torch.cuda.current_stream
    corresponding MLU api: torch.mlu.current_stream
    supported: true

  - api: torch.cuda.default_stream
    corresponding MLU api: torch.mlu.default_stream
    supported: true

  - api: torch.cuda.device
    corresponding MLU api: torch.mlu.device
    supported: true

  - api: torch.cuda.device_count
    corresponding MLU api: torch.mlu.device_count
    supported: true

  - api: torch.cuda.device_of
    corresponding MLU api: torch.mlu.device_of
    supported: true

  - api: torch.cuda.empty_cache
    corresponding MLU api: torch.mlu.empty_cache
    supported: true

  - api: torch.cuda.get_allocator_backend
    supported: false

  - api: torch.cuda.get_arch_list
    supported: false

  - api: torch.cuda.get_device_capability
    corresponding MLU api: torch.mlu.get_device_capability
    supported: true

  - api: torch.cuda.get_device_name
    corresponding MLU api: torch.mlu.get_device_name
    supported: true

  - api: torch.cuda.get_device_properties
    corresponding MLU api: torch.mlu.get_device_properties
    supported: true

  - api: torch.cuda.get_gencode_flags
    supported: false

  - api: torch.cuda.get_rng_state
    corresponding MLU api: torch.mlu.get_rng_state
    supported: true

  - api: torch.cuda.get_rng_state_all
    corresponding MLU api: torch.mlu.get_rng_state_all
    supported: true

  - api: torch.cuda.get_sync_debug_mode
    supported: false

  - api: torch.cuda.graph
    corresponding MLU api: torch.mlu.graph
    supported: true

  - api: torch.cuda.graph_pool_handle
    corresponding MLU api: torch.mlu.graph_pool_handle
    supported: true

  - api: torch.cuda.init
    corresponding MLU api: torch.mlu.init
    supported: true

  - api: torch.cuda.initial_seed
    corresponding MLU api: torch.mlu.initial_seed
    supported: true

  - api: torch.cuda.ipc_collect
    corresponding MLU api: torch.mlu.ipc_collect
    supported: true

  - api: torch.cuda.is_available
    corresponding MLU api: torch.mlu.is_available
    supported: true

  - api: torch.cuda.is_current_stream_capturing
    supported: false

  - api: torch.cuda.is_initialized
    corresponding MLU api: torch.mlu.is_initialized
    supported: true

  - api: torch.cuda.jiterator._create_jit_fn
    supported: false

  - api: torch.cuda.jiterator._create_multi_output_jit_fn
    supported: false

  - api: torch.cuda.list_gpu_processes
    supported: false

  - api: torch.cuda.make_graphed_callables
    corresponding MLU api: torch.mlu.make_graphed_callables
    supported: true

  - api: torch.cuda.manual_seed
    corresponding MLU api: torch.mlu.manual_seed
    supported: true

  - api: torch.cuda.manual_seed_all
    corresponding MLU api: torch.mlu.manual_seed_all
    supported: true

  - api: torch.cuda.max_memory_allocated
    corresponding MLU api: torch.mlu.max_memory_allocated
    supported: true

  - api: torch.cuda.max_memory_cached
    corresponding MLU api: torch.mlu.max_memory_cached
    supported: true

  - api: torch.cuda.max_memory_reserved
    corresponding MLU api: torch.mlu.max_memory_reserved
    supported: true

  - api: torch.cuda.mem_get_info
    corresponding MLU api: torch.mlu.mem_get_info
    supported: true

  - api: torch.cuda.memory_allocated
    corresponding MLU api: torch.mlu.memory_allocated
    supported: true

  - api: torch.cuda.memory_cached
    corresponding MLU api: torch.mlu.memory_cached
    supported: true

  - api: torch.cuda.memory_reserved
    corresponding MLU api: torch.mlu.memory_reserved
    supported: true

  - api: torch.cuda.memory_snapshot
    corresponding MLU api: torch.mlu.memory_snapshot
    supported: true

  - api: torch.cuda.memory_stats
    corresponding MLU api: torch.mlu.memory_stats
    supported: true

  - api: torch.cuda.memory_summary
    corresponding MLU api: torch.mlu.memory_summary
    supported: true

  - api: torch.cuda.memory_usage
    supported: false

  - api: torch.cuda.nvtx.mark
    corresponding MLU api: torch.mlu.cnpx.mark
    supported: true

  - api: torch.cuda.nvtx.range
    supported: false

  - api: torch.cuda.nvtx.range_pop
    corresponding MLU api: torch.mlu.cnpx.range_pop
    supported: true

  - api: torch.cuda.nvtx.range_push
    corresponding MLU api: torch.mlu.cnpx.range_push
    supported: true

  - api: torch.cuda.power_draw
    supported: false

  - api: torch.cuda.reset_max_memory_allocated
    corresponding MLU api: torch.mlu.reset_max_memory_allocated
    supported: true

  - api: torch.cuda.reset_max_memory_cached
    corresponding MLU api: torch.mlu.reset_max_memory_cached
    supported: true

  - api: torch.cuda.reset_peak_memory_stats
    corresponding MLU api: torch.mlu.reset_peak_memory_stats
    supported: true

  - api: torch.cuda.seed
    corresponding MLU api: torch.mlu.seed
    supported: true

  - api: torch.cuda.seed_all
    corresponding MLU api: torch.mlu.seed_all
    supported: true

  - api: torch.cuda.set_device
    corresponding MLU api: torch.mlu.set_device
    supported: true

  - api: torch.cuda.set_per_process_memory_fraction
    corresponding MLU api: torch.mlu.set_per_process_memory_fraction
    supported: true

  - api: torch.cuda.set_rng_state
    corresponding MLU api: torch.mlu.set_rng_state
    supported: true

  - api: torch.cuda.set_rng_state_all
    corresponding MLU api: torch.mlu.set_rng_state_all
    supported: true

  - api: torch.cuda.set_stream
    corresponding MLU api: torch.mlu.set_stream
    supported: true

  - api: torch.cuda.set_sync_debug_mode
    supported: false

  - api: torch.cuda.stream
    corresponding MLU api: torch.mlu.stream
    supported: true

  - api: torch.cuda.synchronize
    corresponding MLU api: torch.mlu.synchronize
    supported: true

  - api: torch.cuda.temperature
    supported: false

  - api: torch.cuda.tunable.enable
    supported: false

  - api: torch.cuda.tunable.get_filename
    supported: false

  - api: torch.cuda.tunable.get_max_tuning_duration
    supported: false

  - api: torch.cuda.tunable.get_max_tuning_iterations
    supported: false

  - api: torch.cuda.tunable.get_results
    supported: false

  - api: torch.cuda.tunable.get_validators
    supported: false

  - api: torch.cuda.tunable.is_enabled
    supported: false

  - api: torch.cuda.tunable.read_file
    supported: false

  - api: torch.cuda.tunable.set_filename
    supported: false

  - api: torch.cuda.tunable.set_max_tuning_duration
    supported: false

  - api: torch.cuda.tunable.set_max_tuning_iterations
    supported: false

  - api: torch.cuda.tunable.tuning_enable
    supported: false

  - api: torch.cuda.tunable.tuning_is_enabled
    supported: false

  - api: torch.cuda.tunable.write_file
    supported: false

  - api: torch.cuda.tunable.write_file_on_exit
    supported: false

  - api: torch.cuda.utilization
    supported: false

- Understanding CUDA Memory Usage:

  - api: torch.cuda.memory._dump_snapshot
    corresponding MLU api: torch.mlu.memory._dump_snapshot
    supported: true

  - api: torch.cuda.memory._record_memory_history
    corresponding MLU api: torch.mlu.memory._record_memory_history
    supported: true

  - api: torch.cuda.memory._snapshot
    corresponding MLU api: torch.mlu.memory._snapshot
    supported: true

- torch.mps:

  - api: torch.mps.current_allocated_memory
    supported: false

  - api: torch.mps.device_count
    supported: false

  - api: torch.mps.driver_allocated_memory
    supported: false

  - api: torch.mps.empty_cache
    supported: false

  - api: torch.mps.event.Event
    supported: false

  - api: torch.mps.event.Event.elapsed_time
    supported: false

  - api: torch.mps.event.Event.query
    supported: false

  - api: torch.mps.event.Event.record
    supported: false

  - api: torch.mps.event.Event.synchronize
    supported: false

  - api: torch.mps.event.Event.wait
    supported: false

  - api: torch.mps.get_rng_state
    supported: false

  - api: torch.mps.manual_seed
    supported: false

  - api: torch.mps.profiler.profile
    supported: false

  - api: torch.mps.profiler.start
    supported: false

  - api: torch.mps.profiler.stop
    supported: false

  - api: torch.mps.seed
    supported: false

  - api: torch.mps.set_per_process_memory_fraction
    supported: false

  - api: torch.mps.set_rng_state
    supported: false

  - api: torch.mps.synchronize
    supported: false

- torch.xpu:

  - api: torch.xpu.Event
    supported: false

  - api: torch.xpu.Event.elapsed_time
    supported: false

  - api: torch.xpu.Event.query
    supported: false

  - api: torch.xpu.Event.record
    supported: false

  - api: torch.xpu.Event.synchronize
    supported: false

  - api: torch.xpu.Event.wait
    supported: false

  - api: torch.xpu.Stream
    supported: false

  - api: torch.xpu.Stream.query
    supported: false

  - api: torch.xpu.Stream.record_event
    supported: false

  - api: torch.xpu.Stream.synchronize
    supported: false

  - api: torch.xpu.Stream.wait_event
    supported: false

  - api: torch.xpu.Stream.wait_stream
    supported: false

  - api: torch.xpu.StreamContext
    supported: false

  - api: torch.xpu.current_device
    supported: false

  - api: torch.xpu.current_stream
    supported: false

  - api: torch.xpu.device
    supported: false

  - api: torch.xpu.device_count
    supported: false

  - api: torch.xpu.device_of
    supported: false

  - api: torch.xpu.empty_cache
    supported: false

  - api: torch.xpu.get_device_capability
    supported: false

  - api: torch.xpu.get_device_name
    supported: false

  - api: torch.xpu.get_device_properties
    supported: false

  - api: torch.xpu.get_rng_state
    supported: false

  - api: torch.xpu.get_rng_state_all
    supported: false

  - api: torch.xpu.init
    supported: false

  - api: torch.xpu.initial_seed
    supported: false

  - api: torch.xpu.is_available
    supported: false

  - api: torch.xpu.is_initialized
    supported: false

  - api: torch.xpu.manual_seed
    supported: false

  - api: torch.xpu.manual_seed_all
    supported: false

  - api: torch.xpu.seed
    supported: false

  - api: torch.xpu.seed_all
    supported: false

  - api: torch.xpu.set_device
    supported: false

  - api: torch.xpu.set_rng_state
    supported: false

  - api: torch.xpu.set_rng_state_all
    supported: false

  - api: torch.xpu.set_stream
    supported: false

  - api: torch.xpu.stream
    supported: false

  - api: torch.xpu.synchronize
    supported: false

- torch.mtia:

  - api: torch.mtia.DeferredMtiaCallError
    supported: false

  - api: torch.mtia.Event
    supported: false

  - api: torch.mtia.Stream
    supported: false

  - api: torch.mtia.StreamContext
    supported: false

  - api: torch.mtia.current_device
    supported: false

  - api: torch.mtia.current_stream
    supported: false

  - api: torch.mtia.default_stream
    supported: false

  - api: torch.mtia.device
    supported: false

  - api: torch.mtia.device_count
    supported: false

  - api: torch.mtia.init
    supported: false

  - api: torch.mtia.is_available
    supported: false

  - api: torch.mtia.is_initialized
    supported: false

  - api: torch.mtia.set_stream
    supported: false

  - api: torch.mtia.stream
    supported: false

  - api: torch.mtia.synchronize
    supported: false

- Meta device: []

- torch.backends:

  - api: torch.backends.cpu.get_cpu_capability
    supported: false

  - api: torch.backends.cuda.SDPAParams
    corresponding MLU api: torch.backends.mlu.SDPAParams
    supported: true

  - api: torch.backends.cuda.can_use_efficient_attention
    corresponding MLU api: torch.backends.mlu.can_use_efficient_attention
    supported: true

  - api: torch.backends.cuda.can_use_flash_attention
    corresponding MLU api: torch.backends.mlu.can_use_flash_attention
    supported: true

  - api: torch.backends.cuda.cudnn_sdp_enabled
    supported: false

  - api: torch.backends.cuda.cufft_plan_cache
    corresponding MLU api: torch.backends.mlu.cnfft_plan_cache
    supported: true
    limitations: MLU暂时没有最大cache个数的限制，所以目前调用该对象的max_size属性会返回一个超大值。

  - api: torch.backends.cuda.cufft_plan_cache.clear
    corresponding MLU api: torch.backends.mlu.cnfft_plan_cache.clear
    supported: true
    limitations: clear 会同步设备。

  - api: torch.backends.cuda.cufft_plan_cache.max_size
    corresponding MLU api: torch.backends.mlu.cnfft_plan_cache.max_size
    supported: true

  - api: torch.backends.cuda.cufft_plan_cache.size
    corresponding MLU api: torch.backends.mlu.cnfft_plan_cache.size
    supported: true

  - api: torch.backends.cuda.enable_cudnn_sdp
    supported: false

  - api: torch.backends.cuda.enable_flash_sdp
    corresponding MLU api: torch.backends.mlu.enable_flash_sdp
    supported: true

  - api: torch.backends.cuda.enable_math_sdp
    corresponding MLU api: torch.backends.mlu.enable_math_sdp
    supported: true

  - api: torch.backends.cuda.enable_mem_efficient_sdp
    corresponding MLU api: torch.backends.mlu.enable_mem_efficient_sdp
    supported: true

  - api: torch.backends.cuda.flash_sdp_enabled
    corresponding MLU api: torch.backends.mlu.flash_sdp_enabled
    supported: true

  - api: torch.backends.cuda.is_built
    supported: false

  - api: torch.backends.cuda.math_sdp_enabled
    corresponding MLU api: torch.backends.mlu.math_sdp_enabled
    supported: true

  - api: torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction
    supported: false

  - api: torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction
    supported: false

  - api: torch.backends.cuda.matmul.allow_tf32
    corresponding MLU api: torch.backends.mlu.matmul.allow_tf32
    supported: true
    limitations: 控制是否在MLU500系列板卡上使能TF32模式对矩阵乘类算子进行加速，目前不支持对cdist, tensordot, grid sample算子进行加速。

  - api: torch.backends.cuda.mem_efficient_sdp_enabled
    corresponding MLU api: torch.backends.mlu.mem_efficient_sdp_enabled
    supported: true

  - api: torch.backends.cuda.preferred_blas_library
    supported: false

  - api: torch.backends.cuda.preferred_linalg_library
    supported: false

  - api: torch.backends.cuda.sdp_kernel
    corresponding MLU api: torch.backends.mlu.sdp_kernel
    supported: true

  - api: torch.backends.cudnn.allow_tf32
    corresponding MLU api: torch.backends.cnnl.allow_tf32
    supported: true
    limitations: 控制是否在MLU500系列板卡上使能TF32模式对原生该API控制的算子进行加速，目前不支持对GRU和LSTM算子进行加速。

  - api: torch.backends.cudnn.benchmark
    supported: false

  - api: torch.backends.cudnn.benchmark_limit
    supported: false

  - api: torch.backends.cudnn.deterministic
    supported: false

  - api: torch.backends.cudnn.enabled
    corresponding MLU api: torch.backends.mlufusion.enabled
    supported: true
    limitations: 当前只支持开关torch.nn.LSTM算子的融合模式。融合模式指使用一个大算子替换掉多个小算子拼接的过程。

  - api: torch.backends.cudnn.is_available
    supported: false

  - api: torch.backends.cudnn.version
    supported: false

  - api: torch.backends.mha.get_fastpath_enabled
    supported: false

  - api: torch.backends.mha.set_fastpath_enabled
    supported: false

  - api: torch.backends.mkl.is_available
    supported: false

  - api: torch.backends.mkl.verbose
    supported: false

  - api: torch.backends.mkldnn.is_available
    supported: false

  - api: torch.backends.mkldnn.verbose
    supported: false

  - api: torch.backends.mps.is_available
    supported: false

  - api: torch.backends.mps.is_built
    supported: false

  - api: torch.backends.nnpack.flags
    supported: false

  - api: torch.backends.nnpack.is_available
    supported: false

  - api: torch.backends.nnpack.set_flags
    supported: false

  - api: torch.backends.openmp.is_available
    supported: false

  - api: torch.backends.opt_einsum.enabled
    supported: false

  - api: torch.backends.opt_einsum.get_opt_einsum
    supported: false

  - api: torch.backends.opt_einsum.is_available
    supported: false

  - api: torch.backends.opt_einsum.strategy
    supported: false

- torch.export:

  - api: torch._higher_order_ops.cond.cond
    supported: false

  - api: torch.export.Constraint
    supported: false

  - api: torch.export.ExportBackwardSignature
    supported: false

  - api: torch.export.ExportGraphSignature
    supported: false

  - api: torch.export.ExportedProgram
    supported: false

  - api: torch.export.ExportedProgram.buffers
    supported: false

  - api: torch.export.ExportedProgram.module
    supported: false

  - api: torch.export.ExportedProgram.named_buffers
    supported: false

  - api: torch.export.ExportedProgram.named_parameters
    supported: false

  - api: torch.export.ExportedProgram.parameters
    supported: false

  - api: torch.export.ExportedProgram.run_decompositions
    supported: false

  - api: torch.export.ModuleCallEntry
    supported: false

  - api: torch.export.ModuleCallSignature
    supported: false

  - api: torch.export.dims
    supported: false

  - api: torch.export.dynamic_shapes.Dim
    supported: false

  - api: torch.export.dynamic_shapes.ShapesCollection
    supported: false

  - api: torch.export.dynamic_shapes.ShapesCollection.dynamic_shapes
    supported: false

  - api: torch.export.dynamic_shapes.dynamic_dim
    supported: false

  - api: torch.export.dynamic_shapes.refine_dynamic_shapes_from_suggested_fixes
    supported: false

  - api: torch.export.export
    supported: false

  - api: torch.export.graph_signature.CustomObjArgument
    supported: false

  - api: torch.export.graph_signature.ExportGraphSignature
    supported: false

  - api: torch.export.graph_signature.ExportGraphSignature.get_replace_hook
    supported: false

  - api: torch.export.graph_signature.ExportGraphSignature.replace_all_uses
    supported: false

  - api: torch.export.graph_signature.InputKind
    supported: false

  - api: torch.export.graph_signature.InputSpec
    supported: false

  - api: torch.export.graph_signature.OutputKind
    supported: false

  - api: torch.export.graph_signature.OutputSpec
    supported: false

  - api: torch.export.load
    supported: false

  - api: torch.export.register_dataclass
    supported: false

  - api: torch.export.save
    supported: false

  - api: torch.export.unflatten.FlatArgsAdapter
    supported: false

  - api: torch.export.unflatten.FlatArgsAdapter.adapt
    supported: false

  - api: torch.export.unflatten.InterpreterModule
    supported: false

  - api: torch.export.unflatten.unflatten
    supported: false

- torch.distributed:

  - api: torch.distributed.Backend
    supported: true

  - api: torch.distributed.Backend.register_backend
    supported: true

  - api: torch.distributed.DistBackendError
    supported: true

  - api: torch.distributed.DistError
    supported: true

  - api: torch.distributed.DistNetworkError
    supported: true

  - api: torch.distributed.DistStoreError
    supported: true

  - api: torch.distributed.FileStore
    supported: true

  - api: torch.distributed.HashStore
    supported: true

  - api: torch.distributed.P2POp
    supported: true

  - api: torch.distributed.PrefixStore
    supported: true

  - api: torch.distributed.ReduceOp
    supported: true
    limitations: 不支持 AVG, BAND, BOR, BXOR, PREMUL_SUM。

  - api: torch.distributed.Store
    supported: true

  - api: torch.distributed.Store.add
    supported: true

  - api: torch.distributed.Store.compare_set
    supported: true

  - api: torch.distributed.Store.delete_key
    supported: true

  - api: torch.distributed.Store.get
    supported: true

  - api: torch.distributed.Store.num_keys
    supported: true

  - api: torch.distributed.Store.set
    supported: true

  - api: torch.distributed.Store.set_timeout
    supported: true

  - api: torch.distributed.Store.wait
    supported: true

  - api: torch.distributed.TCPStore
    supported: true

  - api: torch.distributed.Work
    supported: true

  - api: torch.distributed.all_gather
    supported: true

  - api: torch.distributed.all_gather_into_tensor
    supported: true

  - api: torch.distributed.all_gather_object
    supported: true

  - api: torch.distributed.all_reduce
    supported: true
    limitations: 不支持 AVG, BAND, BOR, BXOR, PREMUL_SUM

  - api: torch.distributed.all_to_all
    supported: true

  - api: torch.distributed.all_to_all_single
    supported: true

  - api: torch.distributed.barrier
    supported: true
    limitations: 当前不支持 device_ids 这个参数，传入或者不传入该参数没有差别。

  - api: torch.distributed.batch_isend_irecv
    supported: true

  - api: torch.distributed.breakpoint
    supported: true

  - api: torch.distributed.broadcast
    supported: true

  - api: torch.distributed.broadcast_object_list
    supported: true

  - api: torch.distributed.device_mesh.DeviceMesh
    supported: true

  - api: torch.distributed.device_mesh.init_device_mesh
    supported: true

  - api: torch.distributed.gather
    supported: true

  - api: torch.distributed.gather_object
    supported: true

  - api: torch.distributed.get_backend
    supported: true

  - api: torch.distributed.get_global_rank
    supported: true

  - api: torch.distributed.get_group_rank
    supported: true

  - api: torch.distributed.get_process_group_ranks
    supported: true

  - api: torch.distributed.get_rank
    supported: true

  - api: torch.distributed.get_world_size
    supported: true

  - api: torch.distributed.init_process_group
    supported: true
    limitations: pg_options 仅支持 is_high_priority, group_name, backend 和 _timeout 参数。

  - api: torch.distributed.irecv
    supported: true
    limitations: src 参数不支持使用默认值，或者不传入该参数。

  - api: torch.distributed.is_available
    supported: true

  - api: torch.distributed.is_gloo_available
    supported: false

  - api: torch.distributed.is_initialized
    supported: true

  - api: torch.distributed.is_mpi_available
    supported: true

  - api: torch.distributed.is_nccl_available
    supported: true

  - api: torch.distributed.is_torchelastic_launched
    supported: true

  - api: torch.distributed.isend
    supported: true

  - api: torch.distributed.monitored_barrier
    supported: false

  - api: torch.distributed.new_group
    supported: true
    limitations: pg_options 仅支持 is_high_priority, group_name, backend 和 _timeout 参数。

  - api: torch.distributed.recv
    supported: true
    limitations: src 参数不支持使用默认值，或者不传入该参数。

  - api: torch.distributed.recv_object_list
    supported: false

  - api: torch.distributed.reduce
    supported: true
    limitations: 不支持 AVG、BAND、BOR、BXOR、PREMUL_SUM。

  - api: torch.distributed.reduce_op
    supported: true
    limitations: 不支持 AVG、BAND、BOR、BXOR、PREMUL_SUM。

  - api: torch.distributed.reduce_scatter
    supported: true
    limitations: 不支持 AVG、BAND、BOR、BXOR、PREMUL_SUM。

  - api: torch.distributed.reduce_scatter_tensor
    supported: true
    limitations: 不支持 AVG、BAND、BOR、BXOR、PREMUL_SUM。

  - api: torch.distributed.scatter
    supported: true

  - api: torch.distributed.scatter_object_list
    supported: true

  - api: torch.distributed.send
    supported: true

  - api: torch.distributed.send_object_list
    supported: false

- torch.distributed.algorithms.join:

  - api: torch.distributed.algorithms.Join
    supported: false

  - api: torch.distributed.algorithms.Join.notify_join_context
    supported: false

  - api: torch.distributed.algorithms.JoinHook
    supported: false

  - api: torch.distributed.algorithms.JoinHook.main_hook
    supported: false

  - api: torch.distributed.algorithms.JoinHook.post_hook
    supported: false

  - api: torch.distributed.algorithms.Joinable
    supported: false

  - api: torch.distributed.algorithms.Joinable.join_device
    supported: false

  - api: torch.distributed.algorithms.Joinable.join_hook
    supported: false

  - api: torch.distributed.algorithms.Joinable.join_process_group
    supported: false

- torch.distributed.elastic:

  - api: torch.distributed.elastic.agent.server.ElasticAgent
    supported: true

  - api: torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group
    supported: true

  - api: torch.distributed.elastic.agent.server.ElasticAgent.run
    supported: true

  - api: torch.distributed.elastic.agent.server.SimpleElasticAgent
    supported: true

  - api: torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks
    supported: true

  - api: torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier
    supported: true

  - api: torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers
    supported: true

  - api: torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers
    supported: true

  - api: torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous
    supported: true

  - api: torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers
    supported: true

  - api: torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown
    supported: true

  - api: torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers
    supported: true

  - api: torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers
    supported: true

  - api: torch.distributed.elastic.agent.server.Worker
    supported: true

  - api: torch.distributed.elastic.agent.server.WorkerGroup
    supported: true

  - api: torch.distributed.elastic.agent.server.WorkerSpec
    supported: true

  - api: torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name
    supported: true

  - api: torch.distributed.elastic.agent.server.WorkerState
    supported: true

  - api: torch.distributed.elastic.agent.server.WorkerState.is_running
    supported: true

  - api: torch.distributed.elastic.agent.server.api.RunResult
    supported: true

  - api: torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer
    supported: false

  - api: torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer.start
    supported: false

  - api: torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer.stop
    supported: false

  - api: torch.distributed.elastic.agent.server.health_check_server.create_healthcheck_server
    supported: false

  - api: torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent
    supported: true

  - api: torch.distributed.elastic.control_plane.worker_main
    supported: false

  - api: torch.distributed.elastic.events.api.Event
    supported: true

  - api: torch.distributed.elastic.events.api.EventMetadataValue
    supported: true

  - api: torch.distributed.elastic.events.api.EventSource
    supported: true

  - api: torch.distributed.elastic.events.get_logging_handler
    supported: true

  - api: torch.distributed.elastic.events.record
    supported: true

  - api: torch.distributed.elastic.metrics.api.ConsoleMetricHandler
    supported: true

  - api: torch.distributed.elastic.metrics.api.MetricHandler
    supported: true

  - api: torch.distributed.elastic.metrics.api.NullMetricHandler
    supported: true

  - api: torch.distributed.elastic.metrics.configure
    supported: true

  - api: torch.distributed.elastic.metrics.prof
    supported: true

  - api: torch.distributed.elastic.metrics.put_metric
    supported: true

  - api: torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs
    supported: false

  - api: torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs.reify
    supported: false

  - api: torch.distributed.elastic.multiprocessing.api.LogsDest
    supported: false

  - api: torch.distributed.elastic.multiprocessing.api.LogsSpecs
    supported: false

  - api: torch.distributed.elastic.multiprocessing.api.LogsSpecs.reify
    supported: false

  - api: torch.distributed.elastic.multiprocessing.api.MultiprocessContext
    supported: true

  - api: torch.distributed.elastic.multiprocessing.api.PContext
    supported: true

  - api: torch.distributed.elastic.multiprocessing.api.RunProcsResult
    supported: true

  - api: torch.distributed.elastic.multiprocessing.api.SubprocessContext
    supported: true

  - api: torch.distributed.elastic.multiprocessing.errors.ChildFailedError
    supported: true

  - api: torch.distributed.elastic.multiprocessing.errors.ErrorHandler
    supported: true

  - api: torch.distributed.elastic.multiprocessing.errors.ProcessFailure
    supported: true

  - api: torch.distributed.elastic.multiprocessing.errors.record
    supported: true

  - api: torch.distributed.elastic.multiprocessing.start_processes
    supported: true

  - api: torch.distributed.elastic.multiprocessing.subprocess_handler.handlers.get_subprocess_handler
    supported: false

  - api: torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler.SubprocessHandler
    supported: false

  - api: torch.distributed.elastic.rendezvous.RendezvousHandler
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousHandler.use_agent_store
    supported: false

  - api: torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousInfo
    supported: false

  - api: torch.distributed.elastic.rendezvous.RendezvousParameters
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousParameters.get
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool
    supported: true

  - api: torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int
    supported: true

  - api: torch.distributed.elastic.rendezvous.api.RendezvousClosedError
    supported: false

  - api: torch.distributed.elastic.rendezvous.api.RendezvousConnectionError
    supported: false

  - api: torch.distributed.elastic.rendezvous.api.RendezvousError
    supported: false

  - api: torch.distributed.elastic.rendezvous.api.RendezvousGracefulExitError
    supported: false

  - api: torch.distributed.elastic.rendezvous.api.RendezvousStateError
    supported: false

  - api: torch.distributed.elastic.rendezvous.api.RendezvousStoreInfo
    supported: false

  - api: torch.distributed.elastic.rendezvous.api.RendezvousStoreInfo.build
    supported: false

  - api: torch.distributed.elastic.rendezvous.api.RendezvousTimeoutError
    supported: false

  - api: torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend
    supported: true

  - api: torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state
    supported: true

  - api: torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name
    supported: true

  - api: torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state
    supported: true

  - api: torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call
    supported: true

  - api: torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_server.EtcdServer
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_store.EtcdStore
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set
    supported: true

  - api: torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait
    supported: true

  - api: torch.distributed.elastic.timer.FileTimerClient
    supported: true

  - api: torch.distributed.elastic.timer.FileTimerServer
    supported: true

  - api: torch.distributed.elastic.timer.LocalTimerClient
    supported: true

  - api: torch.distributed.elastic.timer.LocalTimerServer
    supported: true

  - api: torch.distributed.elastic.timer.TimerClient
    supported: true

  - api: torch.distributed.elastic.timer.TimerClient.acquire
    supported: true

  - api: torch.distributed.elastic.timer.TimerClient.release
    supported: true

  - api: torch.distributed.elastic.timer.TimerRequest
    supported: true

  - api: torch.distributed.elastic.timer.TimerServer
    supported: true

  - api: torch.distributed.elastic.timer.TimerServer.clear_timers
    supported: true

  - api: torch.distributed.elastic.timer.TimerServer.get_expired_timers
    supported: true

  - api: torch.distributed.elastic.timer.TimerServer.register_timers
    supported: true

  - api: torch.distributed.elastic.timer.configure
    supported: true

  - api: torch.distributed.elastic.timer.debug_info_logging.log_debug_info_for_expired_timers
    supported: false

  - api: torch.distributed.elastic.timer.expires
    supported: true

- torch.distributed.fsdp:

  - api: torch.distributed.fsdp.BackwardPrefetch
    supported: true

  - api: torch.distributed.fsdp.CPUOffload
    supported: true

  - api: torch.distributed.fsdp.FullOptimStateDictConfig
    supported: true

  - api: torch.distributed.fsdp.FullStateDictConfig
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.apply
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.check_is_root
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.forward
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.module
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.named_buffers
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.named_parameters
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.no_sync
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type
    supported: true

  - api: torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params
    supported: true

  - api: torch.distributed.fsdp.LocalOptimStateDictConfig
    supported: true

  - api: torch.distributed.fsdp.LocalStateDictConfig
    supported: true

  - api: torch.distributed.fsdp.MixedPrecision
    supported: true

  - api: torch.distributed.fsdp.OptimStateDictConfig
    supported: true

  - api: torch.distributed.fsdp.ShardedOptimStateDictConfig
    supported: true

  - api: torch.distributed.fsdp.ShardedStateDictConfig
    supported: true

  - api: torch.distributed.fsdp.ShardingStrategy
    supported: true

  - api: torch.distributed.fsdp.StateDictConfig
    supported: true

  - api: torch.distributed.fsdp.StateDictSettings
    supported: true

- torch.distributed.optim:

  - api: torch.distributed.optim.DistributedOptimizer
    supported: false

  - api: torch.distributed.optim.DistributedOptimizer.step
    supported: false

  - api: torch.distributed.optim.PostLocalSGDOptimizer
    supported: false

  - api: torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict
    supported: false

  - api: torch.distributed.optim.PostLocalSGDOptimizer.state_dict
    supported: false

  - api: torch.distributed.optim.PostLocalSGDOptimizer.step
    supported: false

  - api: torch.distributed.optim.ZeroRedundancyOptimizer
    supported: false

  - api: torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group
    supported: false

  - api: torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict
    supported: false

  - api: torch.distributed.optim.ZeroRedundancyOptimizer.join_device
    supported: false

  - api: torch.distributed.optim.ZeroRedundancyOptimizer.join_hook
    supported: false

  - api: torch.distributed.optim.ZeroRedundancyOptimizer.join_process_group
    supported: false

  - api: torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict
    supported: false

  - api: torch.distributed.optim.ZeroRedundancyOptimizer.state_dict
    supported: false

  - api: torch.distributed.optim.ZeroRedundancyOptimizer.step
    supported: false

- torch.distributed.pipelining:

  - api: torch.distributed.pipelining.Pipe
    supported: false

  - api: torch.distributed.pipelining.SplitPoint
    supported: false

  - api: torch.distributed.pipelining.microbatch.TensorChunkSpec
    supported: false

  - api: torch.distributed.pipelining.microbatch.merge_chunks
    supported: false

  - api: torch.distributed.pipelining.microbatch.split_args_kwargs_into_chunks
    supported: false

  - api: torch.distributed.pipelining.pipe_split
    supported: false

  - api: torch.distributed.pipelining.pipeline
    supported: false

  - api: torch.distributed.pipelining.schedules.PipelineScheduleMulti
    supported: false

  - api: torch.distributed.pipelining.schedules.PipelineScheduleMulti.step
    supported: false

  - api: torch.distributed.pipelining.schedules.PipelineScheduleSingle
    supported: false

  - api: torch.distributed.pipelining.schedules.PipelineScheduleSingle.step
    supported: false

  - api: torch.distributed.pipelining.schedules.Schedule1F1B
    supported: false

  - api: torch.distributed.pipelining.schedules.ScheduleGPipe
    supported: false

  - api: torch.distributed.pipelining.schedules.ScheduleInterleaved1F1B
    supported: false

  - api: torch.distributed.pipelining.schedules.ScheduleLoopedBFS
    supported: false

  - api: torch.distributed.pipelining.stage.PipelineStage
    supported: false

  - api: torch.distributed.pipelining.stage.build_stage
    supported: false

- torch.distributed.tensor.parallel:

  - api: torch.distributed.tensor.parallel.ColwiseParallel
    supported: true

  - api: torch.distributed.tensor.parallel.PrepareModuleInput
    supported: true

  - api: torch.distributed.tensor.parallel.PrepareModuleOutput
    supported: true

  - api: torch.distributed.tensor.parallel.RowwiseParallel
    supported: true

  - api: torch.distributed.tensor.parallel.SequenceParallel
    supported: true

  - api: torch.distributed.tensor.parallel.loss_parallel
    supported: true

  - api: torch.distributed.tensor.parallel.parallelize_module
    supported: true

- torch.distributed.checkpoint:

  - api: torch.distributed.checkpoint.DefaultLoadPlanner
    supported: true

  - api: torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor
    supported: true

  - api: torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor
    supported: true

  - api: torch.distributed.checkpoint.DefaultSavePlanner
    supported: true

  - api: torch.distributed.checkpoint.DefaultSavePlanner.lookup_object
    supported: true

  - api: torch.distributed.checkpoint.DefaultSavePlanner.transform_object
    supported: true

  - api: torch.distributed.checkpoint.FileSystemReader
    supported: true

  - api: torch.distributed.checkpoint.FileSystemReader.checkpoint_id
    supported: true

  - api: torch.distributed.checkpoint.FileSystemWriter
    supported: true

  - api: torch.distributed.checkpoint.FileSystemWriter.stage
    supported: true

  - api: torch.distributed.checkpoint.LoadPlan
    supported: true

  - api: torch.distributed.checkpoint.LoadPlanner
    supported: true

  - api: torch.distributed.checkpoint.LoadPlanner.commit_tensor
    supported: true

  - api: torch.distributed.checkpoint.LoadPlanner.create_global_plan
    supported: true

  - api: torch.distributed.checkpoint.LoadPlanner.create_local_plan
    supported: true

  - api: torch.distributed.checkpoint.LoadPlanner.finish_plan
    supported: true

  - api: torch.distributed.checkpoint.LoadPlanner.load_bytes
    supported: true

  - api: torch.distributed.checkpoint.LoadPlanner.resolve_bytes
    supported: true

  - api: torch.distributed.checkpoint.LoadPlanner.resolve_tensor
    supported: true

  - api: torch.distributed.checkpoint.LoadPlanner.set_up_planner
    supported: true

  - api: torch.distributed.checkpoint.ReadItem
    supported: true

  - api: torch.distributed.checkpoint.SavePlan
    supported: true

  - api: torch.distributed.checkpoint.SavePlanner
    supported: true

  - api: torch.distributed.checkpoint.SavePlanner.create_global_plan
    supported: true

  - api: torch.distributed.checkpoint.SavePlanner.create_local_plan
    supported: true

  - api: torch.distributed.checkpoint.SavePlanner.finish_plan
    supported: true

  - api: torch.distributed.checkpoint.SavePlanner.resolve_data
    supported: true

  - api: torch.distributed.checkpoint.SavePlanner.set_up_planner
    supported: true

  - api: torch.distributed.checkpoint.StorageReader
    supported: true

  - api: torch.distributed.checkpoint.StorageReader.prepare_global_plan
    supported: true

  - api: torch.distributed.checkpoint.StorageReader.prepare_local_plan
    supported: true

  - api: torch.distributed.checkpoint.StorageReader.read_data
    supported: true

  - api: torch.distributed.checkpoint.StorageReader.read_metadata
    supported: true

  - api: torch.distributed.checkpoint.StorageReader.reset
    supported: true

  - api: torch.distributed.checkpoint.StorageReader.set_up_storage_reader
    supported: true

  - api: torch.distributed.checkpoint.StorageReader.validate_checkpoint_id
    supported: true

  - api: torch.distributed.checkpoint.StorageWriter
    supported: true

  - api: torch.distributed.checkpoint.StorageWriter.finish
    supported: true

  - api: torch.distributed.checkpoint.StorageWriter.prepare_global_plan
    supported: true

  - api: torch.distributed.checkpoint.StorageWriter.prepare_local_plan
    supported: true

  - api: torch.distributed.checkpoint.StorageWriter.reset
    supported: true

  - api: torch.distributed.checkpoint.StorageWriter.set_up_storage_writer
    supported: true

  - api: torch.distributed.checkpoint.StorageWriter.storage_meta
    supported: true

  - api: torch.distributed.checkpoint.StorageWriter.validate_checkpoint_id
    supported: true

  - api: torch.distributed.checkpoint.StorageWriter.write_data
    supported: true

  - api: torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader
    supported: false

  - api: torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.prepare_global_plan
    supported: false

  - api: torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.prepare_local_plan
    supported: false

  - api: torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.read_data
    supported: false

  - api: torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.read_metadata
    supported: false

  - api: torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.reset
    supported: false

  - api: torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.set_up_storage_reader
    supported: false

  - api: torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.validate_checkpoint_id
    supported: false

  - api: torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner
    supported: true

  - api: torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner.set_up_planner
    supported: true

  - api: torch.distributed.checkpoint.format_utils.dcp_to_torch_save
    supported: true

  - api: torch.distributed.checkpoint.format_utils.torch_save_to_dcp
    supported: true

  - api: torch.distributed.checkpoint.planner.WriteItem
    supported: true

  - api: torch.distributed.checkpoint.planner.WriteItem.tensor_storage_size
    supported: true

  - api: torch.distributed.checkpoint.staging.AsyncStager
    supported: true

  - api: torch.distributed.checkpoint.staging.AsyncStager.should_synchronize_after_execute
    supported: true

  - api: torch.distributed.checkpoint.staging.AsyncStager.stage
    supported: true

  - api: torch.distributed.checkpoint.staging.AsyncStager.synchronize_staging
    supported: true

  - api: torch.distributed.checkpoint.staging.BlockingAsyncStager
    supported: true

  - api: torch.distributed.checkpoint.staging.BlockingAsyncStager.stage
    supported: true

  - api: torch.distributed.checkpoint.staging.BlockingAsyncStager.synchronize_staging
    supported: true

  - api: torch.distributed.checkpoint.state_dict.StateDictOptions
    supported: true

  - api: torch.distributed.checkpoint.state_dict.get_model_state_dict
    supported: true

  - api: torch.distributed.checkpoint.state_dict.get_optimizer_state_dict
    supported: true

  - api: torch.distributed.checkpoint.state_dict.get_state_dict
    supported: true

  - api: torch.distributed.checkpoint.state_dict.set_model_state_dict
    supported: true

  - api: torch.distributed.checkpoint.state_dict.set_optimizer_state_dict
    supported: true

  - api: torch.distributed.checkpoint.state_dict.set_state_dict
    supported: true

  - api: torch.distributed.checkpoint.state_dict_loader.load
    supported: true

  - api: torch.distributed.checkpoint.state_dict_loader.load_state_dict
    supported: true

  - api: torch.distributed.checkpoint.state_dict_saver.async_save
    supported: true

  - api: torch.distributed.checkpoint.state_dict_saver.save
    supported: true

  - api: torch.distributed.checkpoint.state_dict_saver.save_state_dict
    supported: true

  - api: torch.distributed.checkpoint.stateful.Stateful
    supported: true

  - api: torch.distributed.checkpoint.stateful.Stateful.load_state_dict
    supported: true

  - api: torch.distributed.checkpoint.stateful.Stateful.state_dict
    supported: true

- torch.distributions:

  - api: torch.distributions.bernoulli.Bernoulli
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.arg_constraints
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.entropy
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.enumerate_support
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.expand
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.has_enumerate_support
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.log_prob
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.logits
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.mean
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.mode
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.param_shape
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.probs
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.sample
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.support
    supported: true

  - api: torch.distributions.bernoulli.Bernoulli.variance
    supported: true

  - api: torch.distributions.beta.Beta
    supported: false

  - api: torch.distributions.beta.Beta.arg_constraints
    supported: false

  - api: torch.distributions.beta.Beta.concentration0
    supported: false

  - api: torch.distributions.beta.Beta.concentration1
    supported: false

  - api: torch.distributions.beta.Beta.entropy
    supported: false

  - api: torch.distributions.beta.Beta.expand
    supported: false

  - api: torch.distributions.beta.Beta.has_rsample
    supported: false

  - api: torch.distributions.beta.Beta.log_prob
    supported: false

  - api: torch.distributions.beta.Beta.mean
    supported: false

  - api: torch.distributions.beta.Beta.mode
    supported: false

  - api: torch.distributions.beta.Beta.rsample
    supported: false

  - api: torch.distributions.beta.Beta.support
    supported: false

  - api: torch.distributions.beta.Beta.variance
    supported: false

  - api: torch.distributions.binomial.Binomial
    supported: false

  - api: torch.distributions.binomial.Binomial.arg_constraints
    supported: false

  - api: torch.distributions.binomial.Binomial.entropy
    supported: false

  - api: torch.distributions.binomial.Binomial.enumerate_support
    supported: false

  - api: torch.distributions.binomial.Binomial.expand
    supported: false

  - api: torch.distributions.binomial.Binomial.has_enumerate_support
    supported: false

  - api: torch.distributions.binomial.Binomial.log_prob
    supported: false

  - api: torch.distributions.binomial.Binomial.logits
    supported: false

  - api: torch.distributions.binomial.Binomial.mean
    supported: false

  - api: torch.distributions.binomial.Binomial.mode
    supported: false

  - api: torch.distributions.binomial.Binomial.param_shape
    supported: false

  - api: torch.distributions.binomial.Binomial.probs
    supported: false

  - api: torch.distributions.binomial.Binomial.sample
    supported: false

  - api: torch.distributions.binomial.Binomial.support
    supported: false

  - api: torch.distributions.binomial.Binomial.variance
    supported: false

  - api: torch.distributions.categorical.Categorical
    supported: true

  - api: torch.distributions.categorical.Categorical.arg_constraints
    supported: true

  - api: torch.distributions.categorical.Categorical.entropy
    supported: true

  - api: torch.distributions.categorical.Categorical.enumerate_support
    supported: true

  - api: torch.distributions.categorical.Categorical.expand
    supported: true

  - api: torch.distributions.categorical.Categorical.has_enumerate_support
    supported: true

  - api: torch.distributions.categorical.Categorical.log_prob
    supported: true

  - api: torch.distributions.categorical.Categorical.logits
    supported: true

  - api: torch.distributions.categorical.Categorical.mean
    supported: true

  - api: torch.distributions.categorical.Categorical.mode
    supported: true

  - api: torch.distributions.categorical.Categorical.param_shape
    supported: true

  - api: torch.distributions.categorical.Categorical.probs
    supported: true

  - api: torch.distributions.categorical.Categorical.sample
    supported: true

  - api: torch.distributions.categorical.Categorical.support
    supported: true

  - api: torch.distributions.categorical.Categorical.variance
    supported: true

  - api: torch.distributions.cauchy.Cauchy
    supported: false

  - api: torch.distributions.cauchy.Cauchy.arg_constraints
    supported: false

  - api: torch.distributions.cauchy.Cauchy.cdf
    supported: false

  - api: torch.distributions.cauchy.Cauchy.entropy
    supported: false

  - api: torch.distributions.cauchy.Cauchy.expand
    supported: false

  - api: torch.distributions.cauchy.Cauchy.has_rsample
    supported: false

  - api: torch.distributions.cauchy.Cauchy.icdf
    supported: false

  - api: torch.distributions.cauchy.Cauchy.log_prob
    supported: false

  - api: torch.distributions.cauchy.Cauchy.mean
    supported: false

  - api: torch.distributions.cauchy.Cauchy.mode
    supported: false

  - api: torch.distributions.cauchy.Cauchy.rsample
    supported: false

  - api: torch.distributions.cauchy.Cauchy.support
    supported: false

  - api: torch.distributions.cauchy.Cauchy.variance
    supported: false

  - api: torch.distributions.chi2.Chi2
    supported: false

  - api: torch.distributions.chi2.Chi2.arg_constraints
    supported: false

  - api: torch.distributions.chi2.Chi2.df
    supported: false

  - api: torch.distributions.chi2.Chi2.expand
    supported: false

  - api: torch.distributions.constraint_registry.ConstraintRegistry
    supported: true

  - api: torch.distributions.constraint_registry.ConstraintRegistry.register
    supported: true

  - api: torch.distributions.constraints.Constraint
    supported: true

  - api: torch.distributions.constraints.Constraint.check
    supported: true

  - api: torch.distributions.constraints.cat
    supported: false

  - api: torch.distributions.constraints.dependent_property
    supported: false

  - api: torch.distributions.constraints.greater_than
    supported: false

  - api: torch.distributions.constraints.greater_than_eq
    supported: false

  - api: torch.distributions.constraints.half_open_interval
    supported: false

  - api: torch.distributions.constraints.independent
    supported: false

  - api: torch.distributions.constraints.integer_interval
    supported: false

  - api: torch.distributions.constraints.interval
    supported: false

  - api: torch.distributions.constraints.less_than
    supported: false

  - api: torch.distributions.constraints.multinomial
    supported: true

  - api: torch.distributions.constraints.stack
    supported: false

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.support
    supported: true

  - api: torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance
    supported: true

  - api: torch.distributions.dirichlet.Dirichlet
    supported: false

  - api: torch.distributions.dirichlet.Dirichlet.arg_constraints
    supported: false

  - api: torch.distributions.dirichlet.Dirichlet.entropy
    supported: false

  - api: torch.distributions.dirichlet.Dirichlet.expand
    supported: false

  - api: torch.distributions.dirichlet.Dirichlet.has_rsample
    supported: false

  - api: torch.distributions.dirichlet.Dirichlet.log_prob
    supported: false

  - api: torch.distributions.dirichlet.Dirichlet.mean
    supported: false

  - api: torch.distributions.dirichlet.Dirichlet.mode
    supported: false

  - api: torch.distributions.dirichlet.Dirichlet.rsample
    supported: false

  - api: torch.distributions.dirichlet.Dirichlet.support
    supported: false

  - api: torch.distributions.dirichlet.Dirichlet.variance
    supported: false

  - api: torch.distributions.distribution.Distribution
    supported: true

  - api: torch.distributions.distribution.Distribution.arg_constraints
    supported: true

  - api: torch.distributions.distribution.Distribution.batch_shape
    supported: true

  - api: torch.distributions.distribution.Distribution.cdf
    supported: true

  - api: torch.distributions.distribution.Distribution.entropy
    supported: true

  - api: torch.distributions.distribution.Distribution.enumerate_support
    supported: true

  - api: torch.distributions.distribution.Distribution.event_shape
    supported: true

  - api: torch.distributions.distribution.Distribution.expand
    supported: true

  - api: torch.distributions.distribution.Distribution.icdf
    supported: true

  - api: torch.distributions.distribution.Distribution.log_prob
    supported: true

  - api: torch.distributions.distribution.Distribution.mean
    supported: true

  - api: torch.distributions.distribution.Distribution.mode
    supported: true

  - api: torch.distributions.distribution.Distribution.perplexity
    supported: true

  - api: torch.distributions.distribution.Distribution.rsample
    supported: true

  - api: torch.distributions.distribution.Distribution.sample
    supported: true

  - api: torch.distributions.distribution.Distribution.sample_n
    supported: true

  - api: torch.distributions.distribution.Distribution.set_default_validate_args
    supported: true

  - api: torch.distributions.distribution.Distribution.stddev
    supported: true

  - api: torch.distributions.distribution.Distribution.support
    supported: true

  - api: torch.distributions.distribution.Distribution.variance
    supported: true

  - api: torch.distributions.exp_family.ExponentialFamily
    supported: true

  - api: torch.distributions.exp_family.ExponentialFamily.entropy
    supported: true

  - api: torch.distributions.exponential.Exponential
    supported: true

  - api: torch.distributions.exponential.Exponential.arg_constraints
    supported: true

  - api: torch.distributions.exponential.Exponential.cdf
    supported: true

  - api: torch.distributions.exponential.Exponential.entropy
    supported: true

  - api: torch.distributions.exponential.Exponential.expand
    supported: true

  - api: torch.distributions.exponential.Exponential.has_rsample
    supported: true

  - api: torch.distributions.exponential.Exponential.icdf
    supported: true

  - api: torch.distributions.exponential.Exponential.log_prob
    supported: true

  - api: torch.distributions.exponential.Exponential.mean
    supported: true

  - api: torch.distributions.exponential.Exponential.mode
    supported: true

  - api: torch.distributions.exponential.Exponential.rsample
    supported: true

  - api: torch.distributions.exponential.Exponential.stddev
    supported: true

  - api: torch.distributions.exponential.Exponential.support
    supported: true

  - api: torch.distributions.exponential.Exponential.variance
    supported: true

  - api: torch.distributions.fishersnedecor.FisherSnedecor
    supported: false

  - api: torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints
    supported: false

  - api: torch.distributions.fishersnedecor.FisherSnedecor.expand
    supported: false

  - api: torch.distributions.fishersnedecor.FisherSnedecor.has_rsample
    supported: false

  - api: torch.distributions.fishersnedecor.FisherSnedecor.log_prob
    supported: false

  - api: torch.distributions.fishersnedecor.FisherSnedecor.mean
    supported: false

  - api: torch.distributions.fishersnedecor.FisherSnedecor.mode
    supported: false

  - api: torch.distributions.fishersnedecor.FisherSnedecor.rsample
    supported: false

  - api: torch.distributions.fishersnedecor.FisherSnedecor.support
    supported: false

  - api: torch.distributions.fishersnedecor.FisherSnedecor.variance
    supported: false

  - api: torch.distributions.gamma.Gamma
    supported: false

  - api: torch.distributions.gamma.Gamma.arg_constraints
    supported: false

  - api: torch.distributions.gamma.Gamma.cdf
    supported: false

  - api: torch.distributions.gamma.Gamma.entropy
    supported: false

  - api: torch.distributions.gamma.Gamma.expand
    supported: false

  - api: torch.distributions.gamma.Gamma.has_rsample
    supported: false

  - api: torch.distributions.gamma.Gamma.log_prob
    supported: false

  - api: torch.distributions.gamma.Gamma.mean
    supported: false

  - api: torch.distributions.gamma.Gamma.mode
    supported: false

  - api: torch.distributions.gamma.Gamma.rsample
    supported: false

  - api: torch.distributions.gamma.Gamma.support
    supported: false

  - api: torch.distributions.gamma.Gamma.variance
    supported: false

  - api: torch.distributions.geometric.Geometric
    supported: true

  - api: torch.distributions.geometric.Geometric.arg_constraints
    supported: true

  - api: torch.distributions.geometric.Geometric.entropy
    supported: true

  - api: torch.distributions.geometric.Geometric.expand
    supported: true

  - api: torch.distributions.geometric.Geometric.log_prob
    supported: true

  - api: torch.distributions.geometric.Geometric.logits
    supported: true

  - api: torch.distributions.geometric.Geometric.mean
    supported: true

  - api: torch.distributions.geometric.Geometric.mode
    supported: true

  - api: torch.distributions.geometric.Geometric.probs
    supported: true

  - api: torch.distributions.geometric.Geometric.sample
    supported: true

  - api: torch.distributions.geometric.Geometric.support
    supported: true

  - api: torch.distributions.geometric.Geometric.variance
    supported: true

  - api: torch.distributions.gumbel.Gumbel
    supported: true

  - api: torch.distributions.gumbel.Gumbel.arg_constraints
    supported: true

  - api: torch.distributions.gumbel.Gumbel.entropy
    supported: true

  - api: torch.distributions.gumbel.Gumbel.expand
    supported: true

  - api: torch.distributions.gumbel.Gumbel.log_prob
    supported: true

  - api: torch.distributions.gumbel.Gumbel.mean
    supported: true

  - api: torch.distributions.gumbel.Gumbel.mode
    supported: true

  - api: torch.distributions.gumbel.Gumbel.stddev
    supported: true

  - api: torch.distributions.gumbel.Gumbel.support
    supported: true

  - api: torch.distributions.gumbel.Gumbel.variance
    supported: true

  - api: torch.distributions.half_cauchy.HalfCauchy
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.arg_constraints
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.cdf
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.entropy
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.expand
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.has_rsample
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.icdf
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.log_prob
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.mean
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.mode
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.scale
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.support
    supported: false

  - api: torch.distributions.half_cauchy.HalfCauchy.variance
    supported: false

  - api: torch.distributions.half_normal.HalfNormal
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.arg_constraints
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.cdf
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.entropy
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.expand
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.has_rsample
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.icdf
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.log_prob
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.mean
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.mode
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.scale
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.support
    supported: true

  - api: torch.distributions.half_normal.HalfNormal.variance
    supported: true

  - api: torch.distributions.independent.Independent
    supported: true

  - api: torch.distributions.independent.Independent.arg_constraints
    supported: true

  - api: torch.distributions.independent.Independent.entropy
    supported: true

  - api: torch.distributions.independent.Independent.enumerate_support
    supported: true

  - api: torch.distributions.independent.Independent.expand
    supported: true

  - api: torch.distributions.independent.Independent.has_enumerate_support
    supported: true

  - api: torch.distributions.independent.Independent.has_rsample
    supported: true

  - api: torch.distributions.independent.Independent.log_prob
    supported: true

  - api: torch.distributions.independent.Independent.mean
    supported: true

  - api: torch.distributions.independent.Independent.mode
    supported: true

  - api: torch.distributions.independent.Independent.rsample
    supported: true

  - api: torch.distributions.independent.Independent.sample
    supported: true

  - api: torch.distributions.independent.Independent.support
    supported: true

  - api: torch.distributions.independent.Independent.variance
    supported: true

  - api: torch.distributions.inverse_gamma.InverseGamma
    supported: false

  - api: torch.distributions.inverse_gamma.InverseGamma.arg_constraints
    supported: false

  - api: torch.distributions.inverse_gamma.InverseGamma.concentration
    supported: false

  - api: torch.distributions.inverse_gamma.InverseGamma.entropy
    supported: false

  - api: torch.distributions.inverse_gamma.InverseGamma.expand
    supported: false

  - api: torch.distributions.inverse_gamma.InverseGamma.has_rsample
    supported: false

  - api: torch.distributions.inverse_gamma.InverseGamma.mean
    supported: false

  - api: torch.distributions.inverse_gamma.InverseGamma.mode
    supported: false

  - api: torch.distributions.inverse_gamma.InverseGamma.rate
    supported: false

  - api: torch.distributions.inverse_gamma.InverseGamma.support
    supported: false

  - api: torch.distributions.inverse_gamma.InverseGamma.variance
    supported: false

  - api: torch.distributions.kl.kl_divergence
    supported: true

  - api: torch.distributions.kl.register_kl
    supported: true

  - api: torch.distributions.kumaraswamy.Kumaraswamy
    supported: false

  - api: torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints
    supported: false

  - api: torch.distributions.kumaraswamy.Kumaraswamy.entropy
    supported: false

  - api: torch.distributions.kumaraswamy.Kumaraswamy.expand
    supported: false

  - api: torch.distributions.kumaraswamy.Kumaraswamy.has_rsample
    supported: false

  - api: torch.distributions.kumaraswamy.Kumaraswamy.mean
    supported: false

  - api: torch.distributions.kumaraswamy.Kumaraswamy.mode
    supported: false

  - api: torch.distributions.kumaraswamy.Kumaraswamy.support
    supported: false

  - api: torch.distributions.kumaraswamy.Kumaraswamy.variance
    supported: false

  - api: torch.distributions.laplace.Laplace
    supported: true

  - api: torch.distributions.laplace.Laplace.arg_constraints
    supported: true

  - api: torch.distributions.laplace.Laplace.cdf
    supported: true

  - api: torch.distributions.laplace.Laplace.entropy
    supported: true

  - api: torch.distributions.laplace.Laplace.expand
    supported: true

  - api: torch.distributions.laplace.Laplace.has_rsample
    supported: true

  - api: torch.distributions.laplace.Laplace.icdf
    supported: true

  - api: torch.distributions.laplace.Laplace.log_prob
    supported: true

  - api: torch.distributions.laplace.Laplace.mean
    supported: true

  - api: torch.distributions.laplace.Laplace.mode
    supported: true

  - api: torch.distributions.laplace.Laplace.rsample
    supported: true

  - api: torch.distributions.laplace.Laplace.stddev
    supported: true

  - api: torch.distributions.laplace.Laplace.support
    supported: true

  - api: torch.distributions.laplace.Laplace.variance
    supported: true

  - api: torch.distributions.lkj_cholesky.LKJCholesky
    supported: false

  - api: torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints
    supported: false

  - api: torch.distributions.lkj_cholesky.LKJCholesky.expand
    supported: false

  - api: torch.distributions.lkj_cholesky.LKJCholesky.log_prob
    supported: false

  - api: torch.distributions.lkj_cholesky.LKJCholesky.sample
    supported: false

  - api: torch.distributions.lkj_cholesky.LKJCholesky.support
    supported: false

  - api: torch.distributions.log_normal.LogNormal
    supported: true

  - api: torch.distributions.log_normal.LogNormal.arg_constraints
    supported: true

  - api: torch.distributions.log_normal.LogNormal.entropy
    supported: true

  - api: torch.distributions.log_normal.LogNormal.expand
    supported: true

  - api: torch.distributions.log_normal.LogNormal.has_rsample
    supported: true

  - api: torch.distributions.log_normal.LogNormal.loc
    supported: true

  - api: torch.distributions.log_normal.LogNormal.mean
    supported: true

  - api: torch.distributions.log_normal.LogNormal.mode
    supported: true

  - api: torch.distributions.log_normal.LogNormal.scale
    supported: true

  - api: torch.distributions.log_normal.LogNormal.support
    supported: true

  - api: torch.distributions.log_normal.LogNormal.variance
    supported: true

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support
    supported: false

  - api: torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance
    supported: false

  - api: torch.distributions.mixture_same_family.MixtureSameFamily
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.cdf
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.expand
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.log_prob
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.mean
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.sample
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.support
    supported: true

  - api: torch.distributions.mixture_same_family.MixtureSameFamily.variance
    supported: true

  - api: torch.distributions.multinomial.Multinomial
    supported: true

  - api: torch.distributions.multinomial.Multinomial.arg_constraints
    supported: true

  - api: torch.distributions.multinomial.Multinomial.entropy
    supported: false

  - api: torch.distributions.multinomial.Multinomial.expand
    supported: true

  - api: torch.distributions.multinomial.Multinomial.log_prob
    supported: false

  - api: torch.distributions.multinomial.Multinomial.logits
    supported: true

  - api: torch.distributions.multinomial.Multinomial.mean
    supported: true

  - api: torch.distributions.multinomial.Multinomial.param_shape
    supported: true

  - api: torch.distributions.multinomial.Multinomial.probs
    supported: true

  - api: torch.distributions.multinomial.Multinomial.sample
    supported: true

  - api: torch.distributions.multinomial.Multinomial.support
    supported: true

  - api: torch.distributions.multinomial.Multinomial.total_count
    supported: true

  - api: torch.distributions.multinomial.Multinomial.variance
    supported: true

  - api: torch.distributions.multivariate_normal.MultivariateNormal
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.entropy
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.expand
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.has_rsample
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.log_prob
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.mean
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.mode
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.rsample
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.scale_tril
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.support
    supported: false

  - api: torch.distributions.multivariate_normal.MultivariateNormal.variance
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.arg_constraints
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.expand
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.log_prob
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.logits
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.mean
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.mode
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.param_shape
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.probs
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.sample
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.support
    supported: false

  - api: torch.distributions.negative_binomial.NegativeBinomial.variance
    supported: false

  - api: torch.distributions.normal.Normal
    supported: true

  - api: torch.distributions.normal.Normal.arg_constraints
    supported: true

  - api: torch.distributions.normal.Normal.cdf
    supported: true

  - api: torch.distributions.normal.Normal.entropy
    supported: true

  - api: torch.distributions.normal.Normal.expand
    supported: true

  - api: torch.distributions.normal.Normal.has_rsample
    supported: true

  - api: torch.distributions.normal.Normal.icdf
    supported: true

  - api: torch.distributions.normal.Normal.log_prob
    supported: true

  - api: torch.distributions.normal.Normal.mean
    supported: true

  - api: torch.distributions.normal.Normal.mode
    supported: true

  - api: torch.distributions.normal.Normal.rsample
    supported: true

  - api: torch.distributions.normal.Normal.sample
    supported: true

  - api: torch.distributions.normal.Normal.stddev
    supported: true

  - api: torch.distributions.normal.Normal.support
    supported: true

  - api: torch.distributions.normal.Normal.variance
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.entropy
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.expand
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.log_prob
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.logits
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.mean
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.mode
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.param_shape
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.probs
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.sample
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.support
    supported: true

  - api: torch.distributions.one_hot_categorical.OneHotCategorical.variance
    supported: true

  - api: torch.distributions.pareto.Pareto
    supported: true

  - api: torch.distributions.pareto.Pareto.arg_constraints
    supported: true

  - api: torch.distributions.pareto.Pareto.entropy
    supported: true

  - api: torch.distributions.pareto.Pareto.expand
    supported: true

  - api: torch.distributions.pareto.Pareto.mean
    supported: true

  - api: torch.distributions.pareto.Pareto.mode
    supported: true

  - api: torch.distributions.pareto.Pareto.support
    supported: true

  - api: torch.distributions.pareto.Pareto.variance
    supported: true

  - api: torch.distributions.poisson.Poisson
    supported: false

  - api: torch.distributions.poisson.Poisson.arg_constraints
    supported: false

  - api: torch.distributions.poisson.Poisson.expand
    supported: false

  - api: torch.distributions.poisson.Poisson.log_prob
    supported: false

  - api: torch.distributions.poisson.Poisson.mean
    supported: false

  - api: torch.distributions.poisson.Poisson.mode
    supported: false

  - api: torch.distributions.poisson.Poisson.sample
    supported: false

  - api: torch.distributions.poisson.Poisson.support
    supported: false

  - api: torch.distributions.poisson.Poisson.variance
    supported: false

  - api: torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli
    supported: true

  - api: torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints
    supported: true

  - api: torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand
    supported: true

  - api: torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob
    supported: true

  - api: torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits
    supported: true

  - api: torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape
    supported: true

  - api: torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs
    supported: true

  - api: torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample
    supported: true

  - api: torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support
    supported: true

  - api: torch.distributions.relaxed_bernoulli.RelaxedBernoulli
    supported: true

  - api: torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints
    supported: true

  - api: torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand
    supported: true

  - api: torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample
    supported: true

  - api: torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits
    supported: true

  - api: torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs
    supported: true

  - api: torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support
    supported: true

  - api: torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature
    supported: true

  - api: torch.distributions.relaxed_categorical.RelaxedOneHotCategorical
    supported: false

  - api: torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints
    supported: false

  - api: torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand
    supported: false

  - api: torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample
    supported: false

  - api: torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits
    supported: false

  - api: torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs
    supported: false

  - api: torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support
    supported: false

  - api: torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature
    supported: false

  - api: torch.distributions.studentT.StudentT
    supported: false

  - api: torch.distributions.studentT.StudentT.arg_constraints
    supported: false

  - api: torch.distributions.studentT.StudentT.entropy
    supported: false

  - api: torch.distributions.studentT.StudentT.expand
    supported: false

  - api: torch.distributions.studentT.StudentT.has_rsample
    supported: false

  - api: torch.distributions.studentT.StudentT.log_prob
    supported: false

  - api: torch.distributions.studentT.StudentT.mean
    supported: false

  - api: torch.distributions.studentT.StudentT.mode
    supported: false

  - api: torch.distributions.studentT.StudentT.rsample
    supported: false

  - api: torch.distributions.studentT.StudentT.support
    supported: false

  - api: torch.distributions.studentT.StudentT.variance
    supported: false

  - api: torch.distributions.transformed_distribution.TransformedDistribution
    supported: true

  - api: torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints
    supported: true

  - api: torch.distributions.transformed_distribution.TransformedDistribution.cdf
    supported: true

  - api: torch.distributions.transformed_distribution.TransformedDistribution.expand
    supported: true

  - api: torch.distributions.transformed_distribution.TransformedDistribution.has_rsample
    supported: true

  - api: torch.distributions.transformed_distribution.TransformedDistribution.icdf
    supported: true

  - api: torch.distributions.transformed_distribution.TransformedDistribution.log_prob
    supported: true

  - api: torch.distributions.transformed_distribution.TransformedDistribution.rsample
    supported: true

  - api: torch.distributions.transformed_distribution.TransformedDistribution.sample
    supported: true

  - api: torch.distributions.transformed_distribution.TransformedDistribution.support
    supported: true

  - api: torch.distributions.transforms.AbsTransform
    supported: false

  - api: torch.distributions.transforms.AffineTransform
    supported: false

  - api: torch.distributions.transforms.CatTransform
    supported: false

  - api: torch.distributions.transforms.ComposeTransform
    supported: false

  - api: torch.distributions.transforms.CorrCholeskyTransform
    supported: false

  - api: torch.distributions.transforms.CumulativeDistributionTransform
    supported: false

  - api: torch.distributions.transforms.ExpTransform
    supported: false

  - api: torch.distributions.transforms.IndependentTransform
    supported: false

  - api: torch.distributions.transforms.LowerCholeskyTransform
    supported: false

  - api: torch.distributions.transforms.PositiveDefiniteTransform
    supported: false

  - api: torch.distributions.transforms.PowerTransform
    supported: false

  - api: torch.distributions.transforms.ReshapeTransform
    supported: false

  - api: torch.distributions.transforms.SigmoidTransform
    supported: false

  - api: torch.distributions.transforms.SoftmaxTransform
    supported: false

  - api: torch.distributions.transforms.SoftplusTransform
    supported: false

  - api: torch.distributions.transforms.StackTransform
    supported: false

  - api: torch.distributions.transforms.StickBreakingTransform
    supported: false

  - api: torch.distributions.transforms.TanhTransform
    supported: false

  - api: torch.distributions.transforms.Transform
    supported: false

  - api: torch.distributions.transforms.Transform.forward_shape
    supported: false

  - api: torch.distributions.transforms.Transform.inv
    supported: false

  - api: torch.distributions.transforms.Transform.inverse_shape
    supported: false

  - api: torch.distributions.transforms.Transform.log_abs_det_jacobian
    supported: false

  - api: torch.distributions.transforms.Transform.sign
    supported: false

  - api: torch.distributions.uniform.Uniform
    supported: false

  - api: torch.distributions.uniform.Uniform.arg_constraints
    supported: false

  - api: torch.distributions.uniform.Uniform.cdf
    supported: false

  - api: torch.distributions.uniform.Uniform.entropy
    supported: false

  - api: torch.distributions.uniform.Uniform.expand
    supported: false

  - api: torch.distributions.uniform.Uniform.has_rsample
    supported: false

  - api: torch.distributions.uniform.Uniform.icdf
    supported: false

  - api: torch.distributions.uniform.Uniform.log_prob
    supported: false

  - api: torch.distributions.uniform.Uniform.mean
    supported: false

  - api: torch.distributions.uniform.Uniform.mode
    supported: false

  - api: torch.distributions.uniform.Uniform.rsample
    supported: false

  - api: torch.distributions.uniform.Uniform.stddev
    supported: false

  - api: torch.distributions.uniform.Uniform.support
    supported: false

  - api: torch.distributions.uniform.Uniform.variance
    supported: false

  - api: torch.distributions.von_mises.VonMises
    supported: true

  - api: torch.distributions.von_mises.VonMises.arg_constraints
    supported: true

  - api: torch.distributions.von_mises.VonMises.expand
    supported: true

  - api: torch.distributions.von_mises.VonMises.has_rsample
    supported: true

  - api: torch.distributions.von_mises.VonMises.log_prob
    supported: true

  - api: torch.distributions.von_mises.VonMises.mean
    supported: true

  - api: torch.distributions.von_mises.VonMises.mode
    supported: true

  - api: torch.distributions.von_mises.VonMises.sample
    supported: true

  - api: torch.distributions.von_mises.VonMises.support
    supported: true

  - api: torch.distributions.von_mises.VonMises.variance
    supported: true

  - api: torch.distributions.weibull.Weibull
    supported: false

  - api: torch.distributions.weibull.Weibull.arg_constraints
    supported: false

  - api: torch.distributions.weibull.Weibull.entropy
    supported: false

  - api: torch.distributions.weibull.Weibull.expand
    supported: false

  - api: torch.distributions.weibull.Weibull.mean
    supported: false

  - api: torch.distributions.weibull.Weibull.mode
    supported: false

  - api: torch.distributions.weibull.Weibull.support
    supported: false

  - api: torch.distributions.weibull.Weibull.variance
    supported: false

  - api: torch.distributions.wishart.Wishart
    supported: false

  - api: torch.distributions.wishart.Wishart.arg_constraints
    supported: false

  - api: torch.distributions.wishart.Wishart.covariance_matrix
    supported: false

  - api: torch.distributions.wishart.Wishart.entropy
    supported: false

  - api: torch.distributions.wishart.Wishart.expand
    supported: false

  - api: torch.distributions.wishart.Wishart.has_rsample
    supported: false

  - api: torch.distributions.wishart.Wishart.log_prob
    supported: false

  - api: torch.distributions.wishart.Wishart.mean
    supported: false

  - api: torch.distributions.wishart.Wishart.mode
    supported: false

  - api: torch.distributions.wishart.Wishart.precision_matrix
    supported: false

  - api: torch.distributions.wishart.Wishart.rsample
    supported: false

  - api: torch.distributions.wishart.Wishart.scale_tril
    supported: false

  - api: torch.distributions.wishart.Wishart.support
    supported: false

  - api: torch.distributions.wishart.Wishart.variance
    supported: false

- torch.compiler:

  - api: torch.compiler.allow_in_graph
    supported: false

  - api: torch.compiler.assume_constant_result
    supported: false

  - api: torch.compiler.compile
    supported: false

  - api: torch.compiler.cudagraph_mark_step_begin
    supported: false

  - api: torch.compiler.disable
    supported: false

  - api: torch.compiler.is_compiling
    supported: false

  - api: torch.compiler.is_dynamo_compiling
    supported: false

  - api: torch.compiler.list_backends
    supported: false

  - api: torch.compiler.reset
    supported: false

- torch.fft:

  - api: torch.fft.fft
    supported: true
    limitations: 当前不支持传入out参数。

  - api: torch.fft.fft2
    supported: true

  - api: torch.fft.fftfreq
    supported: false

  - api: torch.fft.fftn
    supported: false

  - api: torch.fft.fftshift
    supported: true

  - api: torch.fft.hfft
    supported: false

  - api: torch.fft.hfft2
    supported: false

  - api: torch.fft.hfftn
    supported: false

  - api: torch.fft.ifft
    supported: true
    limitations: 不支持反向求梯度。

  - api: torch.fft.ifft2
    supported: true

  - api: torch.fft.ifftn
    supported: false

  - api: torch.fft.ifftshift
    supported: true

  - api: torch.fft.ihfft
    supported: false

  - api: torch.fft.ihfft2
    supported: false

  - api: torch.fft.ihfftn
    supported: false

  - api: torch.fft.irfft
    supported: true
    limitations: 不支持反向求梯度。

  - api: torch.fft.irfft2
    supported: false

  - api: torch.fft.irfftn
    supported: false

  - api: torch.fft.rfft
    supported: true
    limitations: 不支持反向求梯度。

  - api: torch.fft.rfft2
    supported: false

  - api: torch.fft.rfftfreq
    supported: false

  - api: torch.fft.rfftn
    supported: false

- torch.func:

  - api: torch.func.functional_call
    supported: false

  - api: torch.func.functionalize
    supported: false

  - api: torch.func.grad
    supported: false

  - api: torch.func.grad_and_value
    supported: false

  - api: torch.func.hessian
    supported: false

  - api: torch.func.jacfwd
    supported: false

  - api: torch.func.jacrev
    supported: false

  - api: torch.func.jvp
    supported: false

  - api: torch.func.linearize
    supported: false

  - api: torch.func.replace_all_batch_norm_modules_
    supported: false

  - api: torch.func.stack_module_state
    supported: false

  - api: torch.func.vjp
    supported: false

  - api: torch.func.vmap
    supported: false

- torch.futures:

  - api: torch.futures.Future
    supported: true

  - api: torch.futures.Future.add_done_callback
    supported: true

  - api: torch.futures.Future.done
    supported: true

  - api: torch.futures.Future.set_exception
    supported: true

  - api: torch.futures.Future.set_result
    supported: true

  - api: torch.futures.Future.then
    supported: true

  - api: torch.futures.Future.value
    supported: true

  - api: torch.futures.Future.wait
    supported: true

  - api: torch.futures.collect_all
    supported: true

  - api: torch.futures.wait_all
    supported: true

- torch.fx:

  - api: torch.fx.Graph
    supported: false

  - api: torch.fx.Graph.__init__
    supported: false

  - api: torch.fx.Graph.call_function
    supported: false

  - api: torch.fx.Graph.call_method
    supported: false

  - api: torch.fx.Graph.call_module
    supported: false

  - api: torch.fx.Graph.create_node
    supported: false

  - api: torch.fx.Graph.eliminate_dead_code
    supported: false

  - api: torch.fx.Graph.erase_node
    supported: false

  - api: torch.fx.Graph.find_nodes
    supported: false

  - api: torch.fx.Graph.get_attr
    supported: false

  - api: torch.fx.Graph.graph_copy
    supported: false

  - api: torch.fx.Graph.inserting_after
    supported: false

  - api: torch.fx.Graph.inserting_before
    supported: false

  - api: torch.fx.Graph.lint
    supported: false

  - api: torch.fx.Graph.node_copy
    supported: false

  - api: torch.fx.Graph.nodes
    supported: false

  - api: torch.fx.Graph.on_generate_code
    supported: false

  - api: torch.fx.Graph.output
    supported: false

  - api: torch.fx.Graph.placeholder
    supported: false

  - api: torch.fx.Graph.print_tabular
    supported: false

  - api: torch.fx.Graph.process_inputs
    supported: false

  - api: torch.fx.Graph.process_outputs
    supported: false

  - api: torch.fx.Graph.python_code
    supported: false

  - api: torch.fx.Graph.set_codegen
    supported: false

  - api: torch.fx.GraphModule
    supported: false

  - api: torch.fx.GraphModule.__init__
    supported: false

  - api: torch.fx.GraphModule.add_submodule
    supported: false

  - api: torch.fx.GraphModule.code
    supported: false

  - api: torch.fx.GraphModule.delete_all_unused_submodules
    supported: false

  - api: torch.fx.GraphModule.delete_submodule
    supported: false

  - api: torch.fx.GraphModule.graph
    supported: false

  - api: torch.fx.GraphModule.print_readable
    supported: false

  - api: torch.fx.GraphModule.recompile
    supported: false

  - api: torch.fx.GraphModule.to_folder
    supported: false

  - api: torch.fx.Interpreter
    supported: false

  - api: torch.fx.Interpreter.boxed_run
    supported: false

  - api: torch.fx.Interpreter.call_function
    supported: false

  - api: torch.fx.Interpreter.call_method
    supported: false

  - api: torch.fx.Interpreter.call_module
    supported: false

  - api: torch.fx.Interpreter.fetch_args_kwargs_from_env
    supported: false

  - api: torch.fx.Interpreter.fetch_attr
    supported: false

  - api: torch.fx.Interpreter.get_attr
    supported: false

  - api: torch.fx.Interpreter.map_nodes_to_values
    supported: false

  - api: torch.fx.Interpreter.output
    supported: false

  - api: torch.fx.Interpreter.placeholder
    supported: false

  - api: torch.fx.Interpreter.run
    supported: false

  - api: torch.fx.Interpreter.run_node
    supported: false

  - api: torch.fx.Node
    supported: false

  - api: torch.fx.Node.all_input_nodes
    supported: false

  - api: torch.fx.Node.append
    supported: false

  - api: torch.fx.Node.args
    supported: false

  - api: torch.fx.Node.format_node
    supported: false

  - api: torch.fx.Node.insert_arg
    supported: false

  - api: torch.fx.Node.is_impure
    supported: false

  - api: torch.fx.Node.kwargs
    supported: false

  - api: torch.fx.Node.next
    supported: false

  - api: torch.fx.Node.normalized_arguments
    supported: false

  - api: torch.fx.Node.prepend
    supported: false

  - api: torch.fx.Node.prev
    supported: false

  - api: torch.fx.Node.replace_all_uses_with
    supported: false

  - api: torch.fx.Node.replace_input_with
    supported: false

  - api: torch.fx.Node.stack_trace
    supported: false

  - api: torch.fx.Node.update_arg
    supported: false

  - api: torch.fx.Node.update_kwarg
    supported: false

  - api: torch.fx.Proxy
    supported: false

  - api: torch.fx.Tracer
    supported: false

  - api: torch.fx.Tracer.call_module
    supported: false

  - api: torch.fx.Tracer.create_arg
    supported: false

  - api: torch.fx.Tracer.create_args_for_root
    supported: false

  - api: torch.fx.Tracer.create_node
    supported: false

  - api: torch.fx.Tracer.create_proxy
    supported: false

  - api: torch.fx.Tracer.get_fresh_qualname
    supported: false

  - api: torch.fx.Tracer.getattr
    supported: false

  - api: torch.fx.Tracer.is_leaf_module
    supported: false

  - api: torch.fx.Tracer.iter
    supported: false

  - api: torch.fx.Tracer.keys
    supported: false

  - api: torch.fx.Tracer.path_of_module
    supported: false

  - api: torch.fx.Tracer.proxy
    supported: false

  - api: torch.fx.Tracer.to_bool
    supported: false

  - api: torch.fx.Tracer.trace
    supported: false

  - api: torch.fx.Transformer
    supported: false

  - api: torch.fx.Transformer.call_function
    supported: false

  - api: torch.fx.Transformer.call_module
    supported: false

  - api: torch.fx.Transformer.get_attr
    supported: false

  - api: torch.fx.Transformer.placeholder
    supported: false

  - api: torch.fx.Transformer.transform
    supported: false

  - api: torch.fx.replace_pattern
    supported: false

  - api: torch.fx.symbolic_trace
    supported: false

  - api: torch.fx.wrap
    supported: false

- torch.fx.experimental:

  - api: torch.fx.experimental.symbolic_shapes.CallMethodKey
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.CallMethodKey.get
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ConvertIntKey
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ConvertIntKey.get
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DimConstraints
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DimConstraints.add
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DimConstraints.add_equality
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DimConstraints.forced_specializations
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DimConstraints.prettify_results
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DimConstraints.remove_redundant_dynamic_results
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DimConstraints.rewrite_with_congruences
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DimConstraints.solve
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DimDynamic
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DivideByKey
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.DivideByKey.get
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.EqualityConstraint
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.InnerTensorKey
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.InnerTensorKey.get
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.boxed_run
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.call_function
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.call_method
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.call_module
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.fetch_args_kwargs_from_env
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.fetch_attr
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.get_attr
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.map_nodes_to_values
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.output
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.placeholder
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.run
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.run_node
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.add_var_to_val
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.bind_symbols
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.bound_sympy
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.check_equal
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.cleanup
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbol
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbolic_sizes_strides_storage_offset
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symboolnode
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symfloatnode
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symintnode
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symbool
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symfloat
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symint
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symbol
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symint_and_symbol
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.defer_runtime_assert
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_expr
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_expression
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_for_args
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.format_guards
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.freeze
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.freeze_runtime_asserts
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.get_axioms
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.get_implications
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.get_nontrivial_guards
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.get_pruned_guards
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.ignore_fresh_unbacked_symbols
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.is_unbacked_symint
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards_expression
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.replace
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.set_unbacked_var_to_val
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.simplify
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.size_hint
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnv.suppress_guards
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.ShapeEnvSettings
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.render
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.SymbolicContext
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.check_consistent
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.constrain_range
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.constrain_unify
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.definitely_false
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.definitely_true
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.guard_size_oblivious
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.has_free_symbols
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.hint_int
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.is_concrete_bool
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.is_concrete_int
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.lru_cache
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.parallel_and
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.parallel_or
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.rebind_unbacked
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.statically_known_true
    supported: false

  - api: torch.fx.experimental.symbolic_shapes.sym_eq
    supported: false

- torch.hub:

  - api: torch.hub.download_url_to_file
    supported: false

  - api: torch.hub.get_dir
    supported: false

  - api: torch.hub.help
    supported: false

  - api: torch.hub.list
    supported: false

  - api: torch.hub.load
    supported: false

  - api: torch.hub.load_state_dict_from_url
    supported: false

  - api: torch.hub.set_dir
    supported: false

- torch.jit:

  - api: torch.jit.Attribute
    supported: false

  - api: torch.jit.Attribute.count
    supported: false

  - api: torch.jit.Attribute.index
    supported: false

  - api: torch.jit.Attribute.type
    supported: false

  - api: torch.jit.Attribute.value
    supported: false

  - api: torch.jit.ScriptFunction
    supported: false

  - api: torch.jit.ScriptFunction.get_debug_state
    supported: false

  - api: torch.jit.ScriptFunction.save
    supported: false

  - api: torch.jit.ScriptFunction.save_to_buffer
    supported: false

  - api: torch.jit.ScriptModule
    supported: false

  - api: torch.jit.ScriptModule.add_module
    supported: false

  - api: torch.jit.ScriptModule.apply
    supported: false

  - api: torch.jit.ScriptModule.bfloat16
    supported: false

  - api: torch.jit.ScriptModule.buffers
    supported: false

  - api: torch.jit.ScriptModule.children
    supported: false

  - api: torch.jit.ScriptModule.code
    supported: false

  - api: torch.jit.ScriptModule.code_with_constants
    supported: false

  - api: torch.jit.ScriptModule.compile
    supported: false

  - api: torch.jit.ScriptModule.cpu
    supported: false

  - api: torch.jit.ScriptModule.cuda
    supported: false

  - api: torch.jit.ScriptModule.double
    supported: false

  - api: torch.jit.ScriptModule.eval
    supported: false

  - api: torch.jit.ScriptModule.extra_repr
    supported: false

  - api: torch.jit.ScriptModule.float
    supported: false

  - api: torch.jit.ScriptModule.get_buffer
    supported: false

  - api: torch.jit.ScriptModule.get_extra_state
    supported: false

  - api: torch.jit.ScriptModule.get_parameter
    supported: false

  - api: torch.jit.ScriptModule.get_submodule
    supported: false

  - api: torch.jit.ScriptModule.graph
    supported: false

  - api: torch.jit.ScriptModule.half
    supported: false

  - api: torch.jit.ScriptModule.inlined_graph
    supported: false

  - api: torch.jit.ScriptModule.ipu
    supported: false

  - api: torch.jit.ScriptModule.load_state_dict
    supported: false

  - api: torch.jit.ScriptModule.modules
    supported: false

  - api: torch.jit.ScriptModule.named_buffers
    supported: false

  - api: torch.jit.ScriptModule.named_children
    supported: false

  - api: torch.jit.ScriptModule.named_modules
    supported: false

  - api: torch.jit.ScriptModule.named_parameters
    supported: false

  - api: torch.jit.ScriptModule.parameters
    supported: false

  - api: torch.jit.ScriptModule.register_backward_hook
    supported: false

  - api: torch.jit.ScriptModule.register_buffer
    supported: false

  - api: torch.jit.ScriptModule.register_forward_hook
    supported: false

  - api: torch.jit.ScriptModule.register_forward_pre_hook
    supported: false

  - api: torch.jit.ScriptModule.register_full_backward_hook
    supported: false

  - api: torch.jit.ScriptModule.register_full_backward_pre_hook
    supported: false

  - api: torch.jit.ScriptModule.register_load_state_dict_post_hook
    supported: false

  - api: torch.jit.ScriptModule.register_module
    supported: false

  - api: torch.jit.ScriptModule.register_parameter
    supported: false

  - api: torch.jit.ScriptModule.register_state_dict_pre_hook
    supported: false

  - api: torch.jit.ScriptModule.requires_grad_
    supported: false

  - api: torch.jit.ScriptModule.save
    supported: false

  - api: torch.jit.ScriptModule.set_extra_state
    supported: false

  - api: torch.jit.ScriptModule.share_memory
    supported: false

  - api: torch.jit.ScriptModule.state_dict
    supported: false

  - api: torch.jit.ScriptModule.to
    supported: false

  - api: torch.jit.ScriptModule.to_empty
    supported: false

  - api: torch.jit.ScriptModule.train
    supported: false

  - api: torch.jit.ScriptModule.type
    supported: false

  - api: torch.jit.ScriptModule.xpu
    supported: false

  - api: torch.jit.ScriptModule.zero_grad
    supported: false

  - api: torch.jit.annotate
    supported: false

  - api: torch.jit.enable_onednn_fusion
    supported: false

  - api: torch.jit.export
    supported: false

  - api: torch.jit.fork
    supported: false

  - api: torch.jit.freeze
    supported: false

  - api: torch.jit.ignore
    supported: false

  - api: torch.jit.interface
    supported: false

  - api: torch.jit.is_scripting
    supported: false

  - api: torch.jit.is_tracing
    supported: false

  - api: torch.jit.isinstance
    supported: false

  - api: torch.jit.load
    supported: false

  - api: torch.jit.onednn_fusion_enabled
    supported: false

  - api: torch.jit.optimize_for_inference
    supported: false

  - api: torch.jit.save
    supported: false

  - api: torch.jit.script
    supported: false

  - api: torch.jit.script_if_tracing
    supported: false

  - api: torch.jit.set_fusion_strategy
    supported: false

  - api: torch.jit.strict_fusion
    supported: false

  - api: torch.jit.trace
    supported: false

  - api: torch.jit.trace_module
    supported: false

  - api: torch.jit.unused
    supported: false

  - api: torch.jit.wait
    supported: false

- torch.linalg:

  - api: torch.linalg.cholesky
    supported: false

  - api: torch.linalg.cholesky_ex
    supported: false

  - api: torch.linalg.cond
    supported: false

  - api: torch.linalg.cross
    supported: true

  - api: torch.linalg.det
    supported: true

  - api: torch.linalg.diagonal
    supported: false

  - api: torch.linalg.eig
    supported: false

  - api: torch.linalg.eigh
    supported: false

  - api: torch.linalg.eigvals
    supported: false

  - api: torch.linalg.eigvalsh
    supported: false

  - api: torch.linalg.householder_product
    supported: false

  - api: torch.linalg.inv
    supported: true
    limitations: 只支持可逆的输入。

  - api: torch.linalg.inv_ex
    supported: false

  - api: torch.linalg.ldl_factor
    supported: false

  - api: torch.linalg.ldl_factor_ex
    supported: false

  - api: torch.linalg.ldl_solve
    supported: false

  - api: torch.linalg.lstsq
    supported: false

  - api: torch.linalg.lu
    supported: false

  - api: torch.linalg.lu_factor
    supported: false

  - api: torch.linalg.lu_factor_ex
    supported: false

  - api: torch.linalg.lu_solve
    supported: false

  - api: torch.linalg.matmul
    supported: false

  - api: torch.linalg.matrix_exp
    supported: false

  - api: torch.linalg.matrix_norm
    supported: true
    limitations: 参数ord不支持2、-2和'nuc'。

  - api: torch.linalg.matrix_power
    supported: false

  - api: torch.linalg.matrix_rank
    supported: false

  - api: torch.linalg.multi_dot
    supported: false

  - api: torch.linalg.norm
    supported: true
    limitations: 参数dim为一个整数时，ord不支持inf和-inf;参数dim为二元组时，ord不支持2、-2和'nuc'。

  - api: torch.linalg.pinv
    supported: false

  - api: torch.linalg.qr
    supported: true
    limitations: 不支持反向。

  - api: torch.linalg.slogdet
    supported: true

  - api: torch.linalg.solve
    supported: false

  - api: torch.linalg.solve_ex
    supported: false

  - api: torch.linalg.solve_triangular
    supported: false

  - api: torch.linalg.svd
    supported: true
    limitations: 不支持compute_uv为false的情况，不支持driver参数。

  - api: torch.linalg.svdvals
    supported: false

  - api: torch.linalg.tensorinv
    supported: false

  - api: torch.linalg.tensorsolve
    supported: false

  - api: torch.linalg.vander
    supported: false

  - api: torch.linalg.vecdot
    supported: false

  - api: torch.linalg.vector_norm
    supported: true
    limitations: 参数ord不支持inf和-inf。

- torch.monitor:

  - api: torch.monitor.Aggregation
    supported: false

  - api: torch.monitor.Aggregation.name
    supported: false

  - api: torch.monitor.Event
    supported: false

  - api: torch.monitor.Event.__init__
    supported: false

  - api: torch.monitor.Event.data
    supported: false

  - api: torch.monitor.Event.name
    supported: false

  - api: torch.monitor.Event.timestamp
    supported: false

  - api: torch.monitor.EventHandlerHandle
    supported: false

  - api: torch.monitor.Stat
    supported: false

  - api: torch.monitor.Stat.__init__
    supported: false

  - api: torch.monitor.Stat.add
    supported: false

  - api: torch.monitor.Stat.count
    supported: false

  - api: torch.monitor.Stat.get
    supported: false

  - api: torch.monitor.Stat.name
    supported: false

  - api: torch.monitor.TensorboardEventHandler
    supported: false

  - api: torch.monitor.TensorboardEventHandler.__init__
    supported: false

  - api: torch.monitor.data_value_t
    supported: false

  - api: torch.monitor.log_event
    supported: false

  - api: torch.monitor.register_event_handler
    supported: false

  - api: torch.monitor.unregister_event_handler
    supported: false

- torch.signal:

  - api: torch.signal.windows.bartlett
    supported: false

  - api: torch.signal.windows.blackman
    supported: false

  - api: torch.signal.windows.cosine
    supported: false

  - api: torch.signal.windows.exponential
    supported: false

  - api: torch.signal.windows.gaussian
    supported: false

  - api: torch.signal.windows.general_cosine
    supported: false

  - api: torch.signal.windows.general_hamming
    supported: false

  - api: torch.signal.windows.hamming
    supported: false

  - api: torch.signal.windows.hann
    supported: false

  - api: torch.signal.windows.kaiser
    supported: false

  - api: torch.signal.windows.nuttall
    supported: false

- torch.special:

  - api: torch.special.airy_ai
    supported: false

  - api: torch.special.bessel_j0
    supported: false

  - api: torch.special.bessel_j1
    supported: false

  - api: torch.special.digamma
    supported: false

  - api: torch.special.entr
    supported: false

  - api: torch.special.erf
    supported: true

  - api: torch.special.erfc
    supported: true

  - api: torch.special.erfcx
    supported: false

  - api: torch.special.erfinv
    supported: true

  - api: torch.special.exp2
    supported: true

  - api: torch.special.expit
    supported: true

  - api: torch.special.expm1
    supported: true

  - api: torch.special.gammainc
    supported: false

  - api: torch.special.gammaincc
    supported: false

  - api: torch.special.gammaln
    supported: false

  - api: torch.special.i0
    supported: false

  - api: torch.special.i0e
    supported: false

  - api: torch.special.i1
    supported: false

  - api: torch.special.i1e
    supported: false

  - api: torch.special.log1p
    supported: true

  - api: torch.special.log_ndtr
    supported: false

  - api: torch.special.log_softmax
    supported: true

  - api: torch.special.logit
    supported: false

  - api: torch.special.logsumexp
    supported: true

  - api: torch.special.multigammaln
    supported: true

  - api: torch.special.ndtr
    supported: true

  - api: torch.special.ndtri
    supported: false

  - api: torch.special.polygamma
    supported: false

  - api: torch.special.psi
    supported: true

  - api: torch.special.round
    supported: true

  - api: torch.special.scaled_modified_bessel_k0
    supported: false

  - api: torch.special.scaled_modified_bessel_k1
    supported: false

  - api: torch.special.sinc
    supported: false

  - api: torch.special.softmax
    supported: true

  - api: torch.special.spherical_bessel_j0
    supported: false

  - api: torch.special.xlog1py
    supported: false

  - api: torch.special.xlogy
    supported: true

  - api: torch.special.zeta
    supported: false

- torch.overrides:

  - api: torch.overrides.get_ignored_functions
    supported: true

  - api: torch.overrides.get_overridable_functions
    supported: true

  - api: torch.overrides.get_testing_overrides
    supported: true

  - api: torch.overrides.handle_torch_function
    supported: true

  - api: torch.overrides.has_torch_function
    supported: true

  - api: torch.overrides.is_tensor_like
    supported: true

  - api: torch.overrides.is_tensor_method_or_property
    supported: true

  - api: torch.overrides.resolve_name
    supported: true

  - api: torch.overrides.wrap_torch_function
    supported: true

- torch.package:

  - api: torch.package.Directory
    supported: false

  - api: torch.package.Directory.has_file
    supported: false

  - api: torch.package.EmptyMatchError
    supported: false

  - api: torch.package.PackageExporter
    supported: false

  - api: torch.package.PackageExporter.__init__
    supported: false

  - api: torch.package.PackageExporter.add_dependency
    supported: false

  - api: torch.package.PackageExporter.all_paths
    supported: false

  - api: torch.package.PackageExporter.close
    supported: false

  - api: torch.package.PackageExporter.denied_modules
    supported: false

  - api: torch.package.PackageExporter.deny
    supported: false

  - api: torch.package.PackageExporter.dependency_graph_string
    supported: false

  - api: torch.package.PackageExporter.extern
    supported: false

  - api: torch.package.PackageExporter.externed_modules
    supported: false

  - api: torch.package.PackageExporter.get_rdeps
    supported: false

  - api: torch.package.PackageExporter.get_unique_id
    supported: false

  - api: torch.package.PackageExporter.intern
    supported: false

  - api: torch.package.PackageExporter.interned_modules
    supported: false

  - api: torch.package.PackageExporter.mock
    supported: false

  - api: torch.package.PackageExporter.mocked_modules
    supported: false

  - api: torch.package.PackageExporter.register_extern_hook
    supported: false

  - api: torch.package.PackageExporter.register_intern_hook
    supported: false

  - api: torch.package.PackageExporter.register_mock_hook
    supported: false

  - api: torch.package.PackageExporter.save_binary
    supported: false

  - api: torch.package.PackageExporter.save_module
    supported: false

  - api: torch.package.PackageExporter.save_pickle
    supported: false

  - api: torch.package.PackageExporter.save_source_file
    supported: false

  - api: torch.package.PackageExporter.save_source_string
    supported: false

  - api: torch.package.PackageExporter.save_text
    supported: false

  - api: torch.package.PackageImporter
    supported: false

  - api: torch.package.PackageImporter.__init__
    supported: false

  - api: torch.package.PackageImporter.file_structure
    supported: false

  - api: torch.package.PackageImporter.id
    supported: false

  - api: torch.package.PackageImporter.import_module
    supported: false

  - api: torch.package.PackageImporter.load_binary
    supported: false

  - api: torch.package.PackageImporter.load_pickle
    supported: false

  - api: torch.package.PackageImporter.load_text
    supported: false

  - api: torch.package.PackageImporter.python_version
    supported: false

  - api: torch.package.PackagingError
    supported: false

- torch.profiler:

  - api: torch.profiler.ProfilerAction
    supported: true

  - api: torch.profiler.ProfilerActivity
    supported: true
    limitations: 新增torch.profiler.ProfilerActivity.MLU

  - api: torch.profiler.ProfilerActivity.name
    supported: true

  - api: torch.profiler._KinetoProfile
    supported: true
    limitations: 不支持experimental_config参数

  - api: torch.profiler._KinetoProfile.add_metadata
    supported: true

  - api: torch.profiler._KinetoProfile.add_metadata_json
    supported: true

  - api: torch.profiler._KinetoProfile.events
    supported: true

  - api: torch.profiler._KinetoProfile.export_chrome_trace
    supported: true

  - api: torch.profiler._KinetoProfile.export_memory_timeline
    supported: false

  - api: torch.profiler._KinetoProfile.export_stacks
    supported: true

  - api: torch.profiler._KinetoProfile.key_averages
    supported: true

  - api: torch.profiler._KinetoProfile.preset_metadata_json
    supported: true

  - api: torch.profiler.itt.is_available
    supported: false

  - api: torch.profiler.itt.mark
    supported: false

  - api: torch.profiler.itt.range_pop
    supported: false

  - api: torch.profiler.itt.range_push
    supported: false

  - api: torch.profiler.profile
    supported: true
    limitations: 不支持experimental_config参数

  - api: torch.profiler.profile.step
    supported: true

  - api: torch.profiler.schedule
    supported: true

  - api: torch.profiler.tensorboard_trace_handler
    supported: true

- torch.nn.init:

  - api: torch.nn.init.calculate_gain
    supported: true

  - api: torch.nn.init.constant_
    supported: true

  - api: torch.nn.init.dirac_
    supported: true

  - api: torch.nn.init.eye_
    supported: true

  - api: torch.nn.init.kaiming_normal_
    supported: true

  - api: torch.nn.init.kaiming_uniform_
    supported: true

  - api: torch.nn.init.normal_
    supported: true

  - api: torch.nn.init.ones_
    supported: true

  - api: torch.nn.init.orthogonal_
    supported: true

  - api: torch.nn.init.sparse_
    supported: true

  - api: torch.nn.init.trunc_normal_
    supported: true

  - api: torch.nn.init.uniform_
    supported: true

  - api: torch.nn.init.xavier_normal_
    supported: true

  - api: torch.nn.init.xavier_uniform_
    supported: true

  - api: torch.nn.init.zeros_
    supported: true

- torch.nn.attention:

  - api: torch.nn.attention.SDPBackend
    supported: true

  - api: torch.nn.attention.SDPBackend.name
    supported: true

  - api: torch.nn.attention.bias.CausalBias
    supported: false

  - api: torch.nn.attention.bias.CausalVariant
    supported: false

  - api: torch.nn.attention.bias.causal_lower_right
    supported: false

  - api: torch.nn.attention.bias.causal_upper_left
    supported: false

  - api: torch.nn.attention.sdpa_kernel
    supported: true

- torch.onnx:

  - api: torch.onnx.DiagnosticOptions
    supported: false

  - api: torch.onnx.ExportOptions
    supported: false

  - api: torch.onnx.InvalidExportOptionsError
    supported: false

  - api: torch.onnx.JitScalarType
    supported: false

  - api: torch.onnx.JitScalarType.dtype
    supported: false

  - api: torch.onnx.JitScalarType.from_dtype
    supported: false

  - api: torch.onnx.JitScalarType.from_onnx_type
    supported: false

  - api: torch.onnx.JitScalarType.from_value
    supported: false

  - api: torch.onnx.JitScalarType.onnx_compatible
    supported: false

  - api: torch.onnx.JitScalarType.onnx_type
    supported: false

  - api: torch.onnx.JitScalarType.scalar_name
    supported: false

  - api: torch.onnx.JitScalarType.torch_name
    supported: false

  - api: torch.onnx.ONNXProgram
    supported: false

  - api: torch.onnx.ONNXProgram.adapt_torch_inputs_to_onnx
    supported: false

  - api: torch.onnx.ONNXProgram.adapt_torch_outputs_to_onnx
    supported: false

  - api: torch.onnx.ONNXProgram.diagnostic_context
    supported: false

  - api: torch.onnx.ONNXProgram.fake_context
    supported: false

  - api: torch.onnx.ONNXProgram.model_proto
    supported: false

  - api: torch.onnx.ONNXProgram.model_signature
    supported: false

  - api: torch.onnx.ONNXProgram.save
    supported: false

  - api: torch.onnx.ONNXProgram.save_diagnostics
    supported: false

  - api: torch.onnx.ONNXProgramSerializer
    supported: false

  - api: torch.onnx.ONNXProgramSerializer.serialize
    supported: false

  - api: torch.onnx.ONNXRuntimeOptions
    supported: false

  - api: torch.onnx.OnnxExporterError
    supported: false

  - api: torch.onnx.OnnxRegistry
    supported: false

  - api: torch.onnx.OnnxRegistry.get_op_functions
    supported: false

  - api: torch.onnx.OnnxRegistry.is_registered_op
    supported: false

  - api: torch.onnx.OnnxRegistry.opset_version
    supported: false

  - api: torch.onnx.OnnxRegistry.register_op
    supported: false

  - api: torch.onnx.disable_log
    supported: false

  - api: torch.onnx.dynamo_export
    supported: false

  - api: torch.onnx.enable_fake_mode
    supported: false

  - api: torch.onnx.enable_log
    supported: false

  - api: torch.onnx.export
    supported: false

  - api: torch.onnx.export_to_pretty_string
    supported: false

  - api: torch.onnx.is_in_onnx_export
    supported: false

  - api: torch.onnx.is_onnxrt_backend_supported
    supported: false

  - api: torch.onnx.register_custom_op_symbolic
    supported: false

  - api: torch.onnx.select_model_mode_for_export
    supported: false

  - api: torch.onnx.unregister_custom_op_symbolic
    supported: false

  - api: torch.onnx.verification.GraphInfo
    supported: false

  - api: torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info
    supported: false

  - api: torch.onnx.verification.GraphInfo.clear
    supported: false

  - api: torch.onnx.verification.GraphInfo.essential_node_count
    supported: false

  - api: torch.onnx.verification.GraphInfo.essential_node_kinds
    supported: false

  - api: torch.onnx.verification.GraphInfo.export_repro
    supported: false

  - api: torch.onnx.verification.GraphInfo.find_mismatch
    supported: false

  - api: torch.onnx.verification.GraphInfo.find_partition
    supported: false

  - api: torch.onnx.verification.GraphInfo.has_mismatch
    supported: false

  - api: torch.onnx.verification.GraphInfo.pretty_print_mismatch
    supported: false

  - api: torch.onnx.verification.GraphInfo.pretty_print_tree
    supported: false

  - api: torch.onnx.verification.GraphInfo.verify_export
    supported: false

  - api: torch.onnx.verification.VerificationOptions
    supported: false

  - api: torch.onnx.verification.find_mismatch
    supported: false

- torch.optim:

  - api: torch.optim.ASGD
    supported: true

  - api: torch.optim.ASGD.add_param_group
    supported: true

  - api: torch.optim.ASGD.load_state_dict
    supported: true

  - api: torch.optim.ASGD.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.ASGD.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.ASGD.register_state_dict_post_hook
    supported: false

  - api: torch.optim.ASGD.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.ASGD.register_step_post_hook
    supported: false

  - api: torch.optim.ASGD.register_step_pre_hook
    supported: false

  - api: torch.optim.ASGD.state_dict
    supported: true

  - api: torch.optim.ASGD.step
    supported: true

  - api: torch.optim.ASGD.zero_grad
    supported: true

  - api: torch.optim.Adadelta
    supported: true

  - api: torch.optim.Adadelta.add_param_group
    supported: true

  - api: torch.optim.Adadelta.load_state_dict
    supported: true

  - api: torch.optim.Adadelta.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.Adadelta.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.Adadelta.register_state_dict_post_hook
    supported: false

  - api: torch.optim.Adadelta.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.Adadelta.register_step_post_hook
    supported: false

  - api: torch.optim.Adadelta.register_step_pre_hook
    supported: false

  - api: torch.optim.Adadelta.state_dict
    supported: true

  - api: torch.optim.Adadelta.step
    supported: true

  - api: torch.optim.Adadelta.zero_grad
    supported: true

  - api: torch.optim.Adagrad
    supported: true

  - api: torch.optim.Adagrad.add_param_group
    supported: true

  - api: torch.optim.Adagrad.load_state_dict
    supported: true

  - api: torch.optim.Adagrad.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.Adagrad.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.Adagrad.register_state_dict_post_hook
    supported: false

  - api: torch.optim.Adagrad.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.Adagrad.register_step_post_hook
    supported: false

  - api: torch.optim.Adagrad.register_step_pre_hook
    supported: false

  - api: torch.optim.Adagrad.state_dict
    supported: true

  - api: torch.optim.Adagrad.step
    supported: true

  - api: torch.optim.Adagrad.zero_grad
    supported: true

  - api: torch.optim.Adam
    supported: true

  - api: torch.optim.Adam.add_param_group
    supported: true

  - api: torch.optim.Adam.load_state_dict
    supported: true

  - api: torch.optim.Adam.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.Adam.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.Adam.register_state_dict_post_hook
    supported: false

  - api: torch.optim.Adam.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.Adam.register_step_post_hook
    supported: false

  - api: torch.optim.Adam.register_step_pre_hook
    supported: false

  - api: torch.optim.Adam.state_dict
    supported: true

  - api: torch.optim.Adam.step
    supported: false

  - api: torch.optim.Adam.zero_grad
    supported: true

  - api: torch.optim.AdamW
    supported: true

  - api: torch.optim.AdamW.add_param_group
    supported: true

  - api: torch.optim.AdamW.load_state_dict
    supported: true

  - api: torch.optim.AdamW.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.AdamW.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.AdamW.register_state_dict_post_hook
    supported: false

  - api: torch.optim.AdamW.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.AdamW.register_step_post_hook
    supported: false

  - api: torch.optim.AdamW.register_step_pre_hook
    supported: false

  - api: torch.optim.AdamW.state_dict
    supported: true

  - api: torch.optim.AdamW.step
    supported: true

  - api: torch.optim.AdamW.zero_grad
    supported: true

  - api: torch.optim.Adamax
    supported: true

  - api: torch.optim.Adamax.add_param_group
    supported: true

  - api: torch.optim.Adamax.load_state_dict
    supported: true

  - api: torch.optim.Adamax.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.Adamax.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.Adamax.register_state_dict_post_hook
    supported: false

  - api: torch.optim.Adamax.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.Adamax.register_step_post_hook
    supported: false

  - api: torch.optim.Adamax.register_step_pre_hook
    supported: false

  - api: torch.optim.Adamax.state_dict
    supported: true

  - api: torch.optim.Adamax.step
    supported: true

  - api: torch.optim.Adamax.zero_grad
    supported: true

  - api: torch.optim.LBFGS
    supported: true

  - api: torch.optim.LBFGS.add_param_group
    supported: true

  - api: torch.optim.LBFGS.load_state_dict
    supported: true

  - api: torch.optim.LBFGS.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.LBFGS.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.LBFGS.register_state_dict_post_hook
    supported: false

  - api: torch.optim.LBFGS.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.LBFGS.register_step_post_hook
    supported: false

  - api: torch.optim.LBFGS.register_step_pre_hook
    supported: false

  - api: torch.optim.LBFGS.state_dict
    supported: true

  - api: torch.optim.LBFGS.step
    supported: true

  - api: torch.optim.LBFGS.zero_grad
    supported: true

  - api: torch.optim.NAdam
    supported: true

  - api: torch.optim.NAdam.add_param_group
    supported: true

  - api: torch.optim.NAdam.load_state_dict
    supported: true

  - api: torch.optim.NAdam.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.NAdam.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.NAdam.register_state_dict_post_hook
    supported: false

  - api: torch.optim.NAdam.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.NAdam.register_step_post_hook
    supported: false

  - api: torch.optim.NAdam.register_step_pre_hook
    supported: false

  - api: torch.optim.NAdam.state_dict
    supported: true

  - api: torch.optim.NAdam.step
    supported: true

  - api: torch.optim.NAdam.zero_grad
    supported: true

  - api: torch.optim.Optimizer
    supported: true

  - api: torch.optim.Optimizer.add_param_group
    supported: true

  - api: torch.optim.Optimizer.load_state_dict
    supported: true

  - api: torch.optim.Optimizer.state_dict
    supported: true

  - api: torch.optim.Optimizer.step
    supported: true

  - api: torch.optim.Optimizer.zero_grad
    supported: true

  - api: torch.optim.RAdam
    supported: true

  - api: torch.optim.RAdam.add_param_group
    supported: true

  - api: torch.optim.RAdam.load_state_dict
    supported: true

  - api: torch.optim.RAdam.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.RAdam.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.RAdam.register_state_dict_post_hook
    supported: false

  - api: torch.optim.RAdam.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.RAdam.register_step_post_hook
    supported: false

  - api: torch.optim.RAdam.register_step_pre_hook
    supported: false

  - api: torch.optim.RAdam.state_dict
    supported: true

  - api: torch.optim.RAdam.step
    supported: true

  - api: torch.optim.RAdam.zero_grad
    supported: true

  - api: torch.optim.RMSprop
    supported: true

  - api: torch.optim.RMSprop.add_param_group
    supported: true

  - api: torch.optim.RMSprop.load_state_dict
    supported: true

  - api: torch.optim.RMSprop.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.RMSprop.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.RMSprop.register_state_dict_post_hook
    supported: false

  - api: torch.optim.RMSprop.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.RMSprop.register_step_post_hook
    supported: false

  - api: torch.optim.RMSprop.register_step_pre_hook
    supported: false

  - api: torch.optim.RMSprop.state_dict
    supported: true

  - api: torch.optim.RMSprop.step
    supported: false

  - api: torch.optim.RMSprop.zero_grad
    supported: true

  - api: torch.optim.Rprop
    supported: true

  - api: torch.optim.Rprop.add_param_group
    supported: true

  - api: torch.optim.Rprop.load_state_dict
    supported: true

  - api: torch.optim.Rprop.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.Rprop.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.Rprop.register_state_dict_post_hook
    supported: false

  - api: torch.optim.Rprop.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.Rprop.register_step_post_hook
    supported: false

  - api: torch.optim.Rprop.register_step_pre_hook
    supported: false

  - api: torch.optim.Rprop.state_dict
    supported: true

  - api: torch.optim.Rprop.step
    supported: true

  - api: torch.optim.Rprop.zero_grad
    supported: true

  - api: torch.optim.SGD
    supported: true

  - api: torch.optim.SGD.add_param_group
    supported: true

  - api: torch.optim.SGD.load_state_dict
    supported: true

  - api: torch.optim.SGD.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.SGD.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.SGD.register_state_dict_post_hook
    supported: false

  - api: torch.optim.SGD.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.SGD.register_step_post_hook
    supported: false

  - api: torch.optim.SGD.register_step_pre_hook
    supported: false

  - api: torch.optim.SGD.state_dict
    supported: true

  - api: torch.optim.SGD.step
    supported: false

  - api: torch.optim.SGD.zero_grad
    supported: true

  - api: torch.optim.SparseAdam
    supported: false

  - api: torch.optim.SparseAdam.add_param_group
    supported: false

  - api: torch.optim.SparseAdam.load_state_dict
    supported: false

  - api: torch.optim.SparseAdam.register_load_state_dict_post_hook
    supported: false

  - api: torch.optim.SparseAdam.register_load_state_dict_pre_hook
    supported: false

  - api: torch.optim.SparseAdam.register_state_dict_post_hook
    supported: false

  - api: torch.optim.SparseAdam.register_state_dict_pre_hook
    supported: false

  - api: torch.optim.SparseAdam.register_step_post_hook
    supported: false

  - api: torch.optim.SparseAdam.register_step_pre_hook
    supported: false

  - api: torch.optim.SparseAdam.state_dict
    supported: false

  - api: torch.optim.SparseAdam.step
    supported: false

  - api: torch.optim.SparseAdam.zero_grad
    supported: false

  - api: torch.optim.lr_scheduler.ChainedScheduler
    supported: true

  - api: torch.optim.lr_scheduler.ChainedScheduler.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.ChainedScheduler.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.ChainedScheduler.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.ChainedScheduler.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.ConstantLR
    supported: true

  - api: torch.optim.lr_scheduler.ConstantLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.ConstantLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.ConstantLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.ConstantLR.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingLR
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingLR.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step
    supported: true

  - api: torch.optim.lr_scheduler.CyclicLR
    supported: true

  - api: torch.optim.lr_scheduler.CyclicLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.CyclicLR.get_lr
    supported: true

  - api: torch.optim.lr_scheduler.CyclicLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.ExponentialLR
    supported: true

  - api: torch.optim.lr_scheduler.ExponentialLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.ExponentialLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.ExponentialLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.ExponentialLR.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.LambdaLR
    supported: true

  - api: torch.optim.lr_scheduler.LambdaLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.LambdaLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.LambdaLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.LambdaLR.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.LinearLR
    supported: true

  - api: torch.optim.lr_scheduler.LinearLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.LinearLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.LinearLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.LinearLR.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.MultiStepLR
    supported: true

  - api: torch.optim.lr_scheduler.MultiStepLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.MultiStepLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.MultiStepLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.MultiStepLR.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.MultiplicativeLR
    supported: true

  - api: torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.MultiplicativeLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.MultiplicativeLR.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.OneCycleLR
    supported: true

  - api: torch.optim.lr_scheduler.OneCycleLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.OneCycleLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.OneCycleLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.OneCycleLR.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.PolynomialLR
    supported: true

  - api: torch.optim.lr_scheduler.PolynomialLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.PolynomialLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.PolynomialLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.PolynomialLR.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.ReduceLROnPlateau
    supported: true

  - api: torch.optim.lr_scheduler.ReduceLROnPlateau.get_last_lr
    supported: false

  - api: torch.optim.lr_scheduler.ReduceLROnPlateau.print_lr
    supported: false

  - api: torch.optim.lr_scheduler.SequentialLR
    supported: true

  - api: torch.optim.lr_scheduler.SequentialLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.SequentialLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.SequentialLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.SequentialLR.state_dict
    supported: true

  - api: torch.optim.lr_scheduler.StepLR
    supported: true

  - api: torch.optim.lr_scheduler.StepLR.get_last_lr
    supported: true

  - api: torch.optim.lr_scheduler.StepLR.load_state_dict
    supported: true

  - api: torch.optim.lr_scheduler.StepLR.print_lr
    supported: true

  - api: torch.optim.lr_scheduler.StepLR.state_dict
    supported: true

- Complex Numbers: []

- DDP Communication Hooks:

  - api: torch.distributed.GradBucket
    supported: false

  - api: torch.distributed.GradBucket.buffer
    supported: false

  - api: torch.distributed.GradBucket.gradients
    supported: false

  - api: torch.distributed.GradBucket.index
    supported: false

  - api: torch.distributed.GradBucket.is_last
    supported: false

  - api: torch.distributed.GradBucket.parameters
    supported: false

  - api: torch.distributed.GradBucket.set_buffer
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook
    supported: false

  - api: torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook
    supported: false

- Quantization:

  - api: torch.ao.nn.intrinsic.BNReLU2d
    supported: false

  - api: torch.ao.nn.intrinsic.BNReLU3d
    supported: false

  - api: torch.ao.nn.intrinsic.ConvBn1d
    supported: false

  - api: torch.ao.nn.intrinsic.ConvBn2d
    supported: false

  - api: torch.ao.nn.intrinsic.ConvBn3d
    supported: false

  - api: torch.ao.nn.intrinsic.ConvBnReLU1d
    supported: false

  - api: torch.ao.nn.intrinsic.ConvBnReLU2d
    supported: false

  - api: torch.ao.nn.intrinsic.ConvBnReLU3d
    supported: false

  - api: torch.ao.nn.intrinsic.ConvReLU1d
    supported: false

  - api: torch.ao.nn.intrinsic.ConvReLU2d
    supported: false

  - api: torch.ao.nn.intrinsic.ConvReLU3d
    supported: false

  - api: torch.ao.nn.intrinsic.LinearReLU
    supported: false

  - api: torch.ao.nn.intrinsic.qat.ConvBn1d
    supported: false

  - api: torch.ao.nn.intrinsic.qat.ConvBn2d
    supported: false

  - api: torch.ao.nn.intrinsic.qat.ConvBn3d
    supported: false

  - api: torch.ao.nn.intrinsic.qat.ConvBnReLU1d
    supported: false

  - api: torch.ao.nn.intrinsic.qat.ConvBnReLU2d
    supported: false

  - api: torch.ao.nn.intrinsic.qat.ConvBnReLU3d
    supported: false

  - api: torch.ao.nn.intrinsic.qat.ConvReLU2d
    supported: false

  - api: torch.ao.nn.intrinsic.qat.ConvReLU3d
    supported: false

  - api: torch.ao.nn.intrinsic.qat.LinearReLU
    supported: false

  - api: torch.ao.nn.intrinsic.qat.freeze_bn_stats
    supported: false

  - api: torch.ao.nn.intrinsic.qat.update_bn_stats
    supported: false

  - api: torch.ao.nn.intrinsic.quantized.BNReLU2d
    supported: false

  - api: torch.ao.nn.intrinsic.quantized.BNReLU3d
    supported: false

  - api: torch.ao.nn.intrinsic.quantized.ConvReLU1d
    supported: false

  - api: torch.ao.nn.intrinsic.quantized.ConvReLU2d
    supported: false

  - api: torch.ao.nn.intrinsic.quantized.ConvReLU3d
    supported: false

  - api: torch.ao.nn.intrinsic.quantized.LinearReLU
    supported: false

  - api: torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU
    supported: false

  - api: torch.ao.nn.qat.Conv2d
    supported: false

  - api: torch.ao.nn.qat.Conv3d
    supported: false

  - api: torch.ao.nn.qat.Linear
    supported: false

  - api: torch.ao.nn.qat.Linear.from_float
    supported: false

  - api: torch.ao.nn.qat.dynamic.Linear
    supported: false

  - api: torch.ao.nn.quantizable.LSTM
    supported: false

  - api: torch.ao.nn.quantizable.MultiheadAttention
    supported: false

  - api: torch.ao.nn.quantizable.MultiheadAttention.dequantize
    supported: false

  - api: torch.ao.nn.quantizable.MultiheadAttention.forward
    supported: false

  - api: torch.ao.nn.quantized.BatchNorm2d
    supported: false

  - api: torch.ao.nn.quantized.BatchNorm3d
    supported: false

  - api: torch.ao.nn.quantized.Conv1d
    supported: false

  - api: torch.ao.nn.quantized.Conv1d.from_float
    supported: false

  - api: torch.ao.nn.quantized.Conv2d
    supported: false

  - api: torch.ao.nn.quantized.Conv2d.from_float
    supported: false

  - api: torch.ao.nn.quantized.Conv3d
    supported: false

  - api: torch.ao.nn.quantized.Conv3d.from_float
    supported: false

  - api: torch.ao.nn.quantized.ConvTranspose1d
    supported: false

  - api: torch.ao.nn.quantized.ConvTranspose2d
    supported: false

  - api: torch.ao.nn.quantized.ConvTranspose3d
    supported: false

  - api: torch.ao.nn.quantized.ELU
    supported: false

  - api: torch.ao.nn.quantized.Embedding
    supported: false

  - api: torch.ao.nn.quantized.Embedding.from_float
    supported: false

  - api: torch.ao.nn.quantized.EmbeddingBag
    supported: false

  - api: torch.ao.nn.quantized.EmbeddingBag.from_float
    supported: false

  - api: torch.ao.nn.quantized.FXFloatFunctional
    supported: false

  - api: torch.ao.nn.quantized.FloatFunctional
    supported: false

  - api: torch.ao.nn.quantized.GroupNorm
    supported: false

  - api: torch.ao.nn.quantized.Hardswish
    supported: false

  - api: torch.ao.nn.quantized.InstanceNorm1d
    supported: false

  - api: torch.ao.nn.quantized.InstanceNorm2d
    supported: false

  - api: torch.ao.nn.quantized.InstanceNorm3d
    supported: false

  - api: torch.ao.nn.quantized.LayerNorm
    supported: false

  - api: torch.ao.nn.quantized.LeakyReLU
    supported: false

  - api: torch.ao.nn.quantized.Linear
    supported: false

  - api: torch.ao.nn.quantized.Linear.from_float
    supported: false

  - api: torch.ao.nn.quantized.Linear.from_reference
    supported: false

  - api: torch.ao.nn.quantized.QFunctional
    supported: false

  - api: torch.ao.nn.quantized.ReLU6
    supported: false

  - api: torch.ao.nn.quantized.Sigmoid
    supported: false

  - api: torch.ao.nn.quantized.dynamic.GRU
    supported: false

  - api: torch.ao.nn.quantized.dynamic.GRUCell
    supported: false

  - api: torch.ao.nn.quantized.dynamic.LSTM
    supported: false

  - api: torch.ao.nn.quantized.dynamic.LSTMCell
    supported: false

  - api: torch.ao.nn.quantized.dynamic.Linear
    supported: false

  - api: torch.ao.nn.quantized.dynamic.Linear.from_float
    supported: false

  - api: torch.ao.nn.quantized.dynamic.Linear.from_reference
    supported: false

  - api: torch.ao.nn.quantized.dynamic.RNNCell
    supported: false

  - api: torch.ao.nn.quantized.functional.adaptive_avg_pool2d
    supported: false

  - api: torch.ao.nn.quantized.functional.adaptive_avg_pool3d
    supported: false

  - api: torch.ao.nn.quantized.functional.avg_pool2d
    supported: false

  - api: torch.ao.nn.quantized.functional.avg_pool3d
    supported: false

  - api: torch.ao.nn.quantized.functional.celu
    supported: false

  - api: torch.ao.nn.quantized.functional.clamp
    supported: false

  - api: torch.ao.nn.quantized.functional.conv1d
    supported: false

  - api: torch.ao.nn.quantized.functional.conv2d
    supported: false

  - api: torch.ao.nn.quantized.functional.conv3d
    supported: false

  - api: torch.ao.nn.quantized.functional.elu
    supported: false

  - api: torch.ao.nn.quantized.functional.hardsigmoid
    supported: false

  - api: torch.ao.nn.quantized.functional.hardswish
    supported: false

  - api: torch.ao.nn.quantized.functional.hardtanh
    supported: false

  - api: torch.ao.nn.quantized.functional.interpolate
    supported: false

  - api: torch.ao.nn.quantized.functional.leaky_relu
    supported: false

  - api: torch.ao.nn.quantized.functional.linear
    supported: false

  - api: torch.ao.nn.quantized.functional.max_pool1d
    supported: false

  - api: torch.ao.nn.quantized.functional.max_pool2d
    supported: false

  - api: torch.ao.nn.quantized.functional.threshold
    supported: false

  - api: torch.ao.nn.quantized.functional.upsample
    supported: false

  - api: torch.ao.nn.quantized.functional.upsample_bilinear
    supported: false

  - api: torch.ao.nn.quantized.functional.upsample_nearest
    supported: false

  - api: torch.ao.ns._numeric_suite.Logger
    supported: false

  - api: torch.ao.ns._numeric_suite.Logger.forward
    supported: false

  - api: torch.ao.ns._numeric_suite.OutputLogger
    supported: false

  - api: torch.ao.ns._numeric_suite.OutputLogger.forward
    supported: false

  - api: torch.ao.ns._numeric_suite.Shadow
    supported: false

  - api: torch.ao.ns._numeric_suite.Shadow.add
    supported: false

  - api: torch.ao.ns._numeric_suite.Shadow.add_relu
    supported: false

  - api: torch.ao.ns._numeric_suite.Shadow.add_scalar
    supported: false

  - api: torch.ao.ns._numeric_suite.Shadow.cat
    supported: false

  - api: torch.ao.ns._numeric_suite.Shadow.forward
    supported: false

  - api: torch.ao.ns._numeric_suite.Shadow.mul
    supported: false

  - api: torch.ao.ns._numeric_suite.Shadow.mul_scalar
    supported: false

  - api: torch.ao.ns._numeric_suite.ShadowLogger
    supported: false

  - api: torch.ao.ns._numeric_suite.ShadowLogger.forward
    supported: false

  - api: torch.ao.ns._numeric_suite.compare_model_outputs
    supported: false

  - api: torch.ao.ns._numeric_suite.compare_model_stub
    supported: false

  - api: torch.ao.ns._numeric_suite.compare_weights
    supported: false

  - api: torch.ao.ns._numeric_suite.get_logger_dict
    supported: false

  - api: torch.ao.ns._numeric_suite.get_matching_activations
    supported: false

  - api: torch.ao.ns._numeric_suite.prepare_model_outputs
    supported: false

  - api: torch.ao.ns._numeric_suite.prepare_model_with_stubs
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.NSTracer
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.OutputComparisonLogger
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.OutputLogger
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.OutputLogger.forward
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.add_loggers
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.add_shadow_loggers
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.convert_n_shadows_model
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.extract_logger_info
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.extract_weights
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.loggers_set_enabled
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.loggers_set_save_activations
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model
    supported: false

  - api: torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model
    supported: false

  - api: torch.ao.ns.fx.utils.compute_cosine_similarity
    supported: false

  - api: torch.ao.ns.fx.utils.compute_normalized_l2_error
    supported: false

  - api: torch.ao.ns.fx.utils.compute_sqnr
    supported: false

  - api: torch.ao.quantization.DeQuantStub
    supported: false

  - api: torch.ao.quantization.QuantStub
    supported: false

  - api: torch.ao.quantization.QuantWrapper
    supported: false

  - api: torch.ao.quantization.add_quant_dequant
    supported: false

  - api: torch.ao.quantization.backend_config.BackendConfig
    supported: false

  - api: torch.ao.quantization.backend_config.BackendConfig.configs
    supported: false

  - api: torch.ao.quantization.backend_config.BackendConfig.from_dict
    supported: false

  - api: torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config
    supported: false

  - api: torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs
    supported: false

  - api: torch.ao.quantization.backend_config.BackendConfig.set_name
    supported: false

  - api: torch.ao.quantization.backend_config.BackendConfig.to_dict
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.from_dict
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module
    supported: false

  - api: torch.ao.quantization.backend_config.BackendPatternConfig.to_dict
    supported: false

  - api: torch.ao.quantization.backend_config.DTypeConfig
    supported: false

  - api: torch.ao.quantization.backend_config.DTypeConfig.from_dict
    supported: false

  - api: torch.ao.quantization.backend_config.DTypeConfig.to_dict
    supported: false

  - api: torch.ao.quantization.backend_config.DTypeWithConstraints
    supported: false

  - api: torch.ao.quantization.backend_config.ObservationType
    supported: false

  - api: torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED
    supported: false

  - api: torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT
    supported: false

  - api: torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT
    supported: false

  - api: torch.ao.quantization.convert
    supported: false

  - api: torch.ao.quantization.default_eval_fn
    supported: false

  - api: torch.ao.quantization.fake_quantize.FakeQuantize
    supported: false

  - api: torch.ao.quantization.fake_quantize.FakeQuantizeBase
    supported: false

  - api: torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize
    supported: false

  - api: torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.extra_repr
    supported: false

  - api: torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize
    supported: false

  - api: torch.ao.quantization.fake_quantize.default_fake_quant
    supported: false

  - api: torch.ao.quantization.fake_quantize.default_fused_act_fake_quant
    supported: false

  - api: torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant
    supported: false

  - api: torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant
    supported: false

  - api: torch.ao.quantization.fake_quantize.default_histogram_fake_quant
    supported: false

  - api: torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant
    supported: false

  - api: torch.ao.quantization.fake_quantize.default_weight_fake_quant
    supported: false

  - api: torch.ao.quantization.fake_quantize.disable_fake_quant
    supported: false

  - api: torch.ao.quantization.fake_quantize.disable_observer
    supported: false

  - api: torch.ao.quantization.fake_quantize.enable_fake_quant
    supported: false

  - api: torch.ao.quantization.fake_quantize.enable_observer
    supported: false

  - api: torch.ao.quantization.fuse_modules.fuse_modules
    supported: false

  - api: torch.ao.quantization.fx.custom_config.ConvertCustomConfig
    supported: false

  - api: torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict
    supported: false

  - api: torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping
    supported: false

  - api: torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes
    supported: false

  - api: torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict
    supported: false

  - api: torch.ao.quantization.fx.custom_config.FuseCustomConfig
    supported: false

  - api: torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict
    supported: false

  - api: torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes
    supported: false

  - api: torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name
    supported: false

  - api: torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict
    supported: false

  - api: torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry
    supported: false

  - api: torch.ao.quantization.observer.HistogramObserver
    supported: false

  - api: torch.ao.quantization.observer.MinMaxObserver
    supported: false

  - api: torch.ao.quantization.observer.MinMaxObserver.calculate_qparams
    supported: false

  - api: torch.ao.quantization.observer.MinMaxObserver.forward
    supported: false

  - api: torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals
    supported: false

  - api: torch.ao.quantization.observer.MovingAverageMinMaxObserver
    supported: false

  - api: torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver
    supported: false

  - api: torch.ao.quantization.observer.NoopObserver
    supported: false

  - api: torch.ao.quantization.observer.ObserverBase
    supported: false

  - api: torch.ao.quantization.observer.ObserverBase.with_args
    supported: false

  - api: torch.ao.quantization.observer.ObserverBase.with_callable_args
    supported: false

  - api: torch.ao.quantization.observer.PerChannelMinMaxObserver
    supported: false

  - api: torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals
    supported: false

  - api: torch.ao.quantization.observer.PlaceholderObserver
    supported: false

  - api: torch.ao.quantization.observer.RecordingObserver
    supported: false

  - api: torch.ao.quantization.observer.default_debug_observer
    supported: false

  - api: torch.ao.quantization.observer.default_dynamic_quant_observer
    supported: false

  - api: torch.ao.quantization.observer.default_float_qparams_observer
    supported: false

  - api: torch.ao.quantization.observer.default_histogram_observer
    supported: false

  - api: torch.ao.quantization.observer.default_observer
    supported: false

  - api: torch.ao.quantization.observer.default_per_channel_weight_observer
    supported: false

  - api: torch.ao.quantization.observer.default_placeholder_observer
    supported: false

  - api: torch.ao.quantization.observer.default_weight_observer
    supported: false

  - api: torch.ao.quantization.observer.get_observer_state_dict
    supported: false

  - api: torch.ao.quantization.observer.load_observer_state_dict
    supported: false

  - api: torch.ao.quantization.prepare
    supported: false

  - api: torch.ao.quantization.prepare_qat
    supported: false

  - api: torch.ao.quantization.propagate_qconfig_
    supported: false

  - api: torch.ao.quantization.pt2e.export_utils.model_is_exported
    supported: false

  - api: torch.ao.quantization.qconfig.QConfig
    supported: false

  - api: torch.ao.quantization.qconfig.default_activation_only_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig.default_debug_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig.default_dynamic_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig.default_per_channel_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig.default_qat_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig.default_qat_qconfig_v2
    supported: false

  - api: torch.ao.quantization.qconfig.default_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig.default_weight_only_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig.float16_dynamic_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig.float16_static_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig.per_channel_dynamic_qconfig
    supported: false

  - api: torch.ao.quantization.qconfig_mapping.QConfigMapping
    supported: false

  - api: torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict
    supported: false

  - api: torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global
    supported: false

  - api: torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name
    supported: false

  - api: torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order
    supported: false

  - api: torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex
    supported: false

  - api: torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type
    supported: false

  - api: torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict
    supported: false

  - api: torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping
    supported: false

  - api: torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping
    supported: false

  - api: torch.ao.quantization.quantize
    supported: false

  - api: torch.ao.quantization.quantize_dynamic
    supported: false

  - api: torch.ao.quantization.quantize_fx.convert_fx
    supported: false

  - api: torch.ao.quantization.quantize_fx.fuse_fx
    supported: false

  - api: torch.ao.quantization.quantize_fx.prepare_fx
    supported: false

  - api: torch.ao.quantization.quantize_fx.prepare_qat_fx
    supported: false

  - api: torch.ao.quantization.quantize_qat
    supported: false

  - api: torch.ao.quantization.swap_module
    supported: false

- Distributed RPC Framework:

  - api: torch.distributed.autograd.backward
    supported: false

  - api: torch.distributed.autograd.context
    supported: false

  - api: torch.distributed.autograd.get_gradients
    supported: false

  - api: torch.distributed.nn.api.remote_module.RemoteModule
    supported: false

  - api: torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref
    supported: false

  - api: torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters
    supported: false

  - api: torch.distributed.rpc.BackendType
    supported: false

  - api: torch.distributed.rpc.PyRRef
    supported: false

  - api: torch.distributed.rpc.PyRRef.backward
    supported: false

  - api: torch.distributed.rpc.PyRRef.confirmed_by_owner
    supported: false

  - api: torch.distributed.rpc.PyRRef.is_owner
    supported: false

  - api: torch.distributed.rpc.PyRRef.local_value
    supported: false

  - api: torch.distributed.rpc.PyRRef.owner
    supported: false

  - api: torch.distributed.rpc.PyRRef.owner_name
    supported: false

  - api: torch.distributed.rpc.PyRRef.remote
    supported: false

  - api: torch.distributed.rpc.PyRRef.rpc_async
    supported: false

  - api: torch.distributed.rpc.PyRRef.rpc_sync
    supported: false

  - api: torch.distributed.rpc.PyRRef.to_here
    supported: false

  - api: torch.distributed.rpc.RpcBackendOptions
    supported: false

  - api: torch.distributed.rpc.RpcBackendOptions.init_method
    supported: false

  - api: torch.distributed.rpc.RpcBackendOptions.rpc_timeout
    supported: false

  - api: torch.distributed.rpc.TensorPipeRpcBackendOptions
    supported: false

  - api: torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps
    supported: false

  - api: torch.distributed.rpc.TensorPipeRpcBackendOptions.devices
    supported: false

  - api: torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method
    supported: false

  - api: torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads
    supported: false

  - api: torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout
    supported: false

  - api: torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map
    supported: false

  - api: torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices
    supported: false

  - api: torch.distributed.rpc.WorkerInfo
    supported: false

  - api: torch.distributed.rpc.WorkerInfo.id
    supported: false

  - api: torch.distributed.rpc.WorkerInfo.name
    supported: false

  - api: torch.distributed.rpc.functions.async_execution
    supported: false

  - api: torch.distributed.rpc.get_worker_info
    supported: false

  - api: torch.distributed.rpc.init_rpc
    supported: false

  - api: torch.distributed.rpc.remote
    supported: false

  - api: torch.distributed.rpc.rpc_async
    supported: false

  - api: torch.distributed.rpc.rpc_sync
    supported: false

  - api: torch.distributed.rpc.shutdown
    supported: false

- torch.random:

  - api: torch.random.fork_rng
    supported: true

  - api: torch.random.get_rng_state
    supported: true

  - api: torch.random.initial_seed
    supported: true

  - api: torch.random.manual_seed
    supported: true

  - api: torch.random.seed
    supported: true

  - api: torch.random.set_rng_state
    supported: true

- torch.masked: []

- torch.nested:

  - api: torch.nested.as_nested_tensor
    supported: false

  - api: torch.nested.nested_tensor
    supported: false

  - api: torch.nested.to_padded_tensor
    supported: false

- torch.Size:

  - api: torch.Size
    supported: false

  - api: torch.Size.count
    supported: false

  - api: torch.Size.index
    supported: false

  - api: torch.Size.numel
    supported: false

- torch.sparse:

  - api: torch.Tensor.ccol_indices
    supported: false

  - api: torch.Tensor.coalesce
    supported: false

  - api: torch.Tensor.col_indices
    supported: false

  - api: torch.Tensor.crow_indices
    supported: false

  - api: torch.Tensor.is_coalesced
    supported: true

  - api: torch.Tensor.is_sparse_csr
    supported: false

  - api: torch.Tensor.row_indices
    supported: false

  - api: torch.Tensor.sparse_resize_
    supported: false

  - api: torch.Tensor.sparse_resize_and_clear_
    supported: false

  - api: torch.Tensor.to_sparse_coo
    supported: false

  - api: torch.hspmm
    supported: false

  - api: torch.smm
    supported: false

  - api: torch.sparse.addmm
    supported: false

  - api: torch.sparse.as_sparse_gradcheck
    supported: false

  - api: torch.sparse.check_sparse_tensor_invariants
    supported: false

  - api: torch.sparse.check_sparse_tensor_invariants.disable
    supported: false

  - api: torch.sparse.check_sparse_tensor_invariants.enable
    supported: false

  - api: torch.sparse.check_sparse_tensor_invariants.is_enabled
    supported: false

  - api: torch.sparse.log_softmax
    supported: false

  - api: torch.sparse.mm
    supported: false

  - api: torch.sparse.sampled_addmm
    supported: false

  - api: torch.sparse.softmax
    supported: false

  - api: torch.sparse.spdiags
    supported: false

  - api: torch.sparse.sum
    supported: false

  - api: torch.sparse_compressed_tensor
    supported: false

  - api: torch.sspaddmm
    supported: false

- torch.Storage:

  - api: torch.BFloat16Storage
    supported: true

  - api: torch.BFloat16Storage.dtype
    supported: true

  - api: torch.BoolStorage
    supported: true

  - api: torch.BoolStorage.dtype
    supported: true

  - api: torch.ByteStorage
    supported: true

  - api: torch.ByteStorage.dtype
    supported: true

  - api: torch.CharStorage
    supported: true

  - api: torch.CharStorage.dtype
    supported: true

  - api: torch.ComplexDoubleStorage
    supported: true

  - api: torch.ComplexDoubleStorage.dtype
    supported: true

  - api: torch.ComplexFloatStorage
    supported: true

  - api: torch.ComplexFloatStorage.dtype
    supported: true

  - api: torch.DoubleStorage
    supported: true

  - api: torch.DoubleStorage.dtype
    supported: true

  - api: torch.FloatStorage
    supported: true

  - api: torch.FloatStorage.dtype
    supported: true

  - api: torch.HalfStorage
    supported: true

  - api: torch.HalfStorage.dtype
    supported: true

  - api: torch.IntStorage
    supported: true

  - api: torch.IntStorage.dtype
    supported: true

  - api: torch.LongStorage
    supported: true

  - api: torch.LongStorage.dtype
    supported: true

  - api: torch.QInt32Storage
    supported: false

  - api: torch.QInt32Storage.dtype
    supported: false

  - api: torch.QInt8Storage
    supported: false

  - api: torch.QInt8Storage.dtype
    supported: false

  - api: torch.QUInt2x4Storage
    supported: false

  - api: torch.QUInt2x4Storage.dtype
    supported: false

  - api: torch.QUInt4x2Storage
    supported: false

  - api: torch.QUInt4x2Storage.dtype
    supported: false

  - api: torch.QUInt8Storage
    supported: false

  - api: torch.QUInt8Storage.dtype
    supported: false

  - api: torch.ShortStorage
    supported: true

  - api: torch.ShortStorage.dtype
    supported: true

  - api: torch.TypedStorage
    supported: true

  - api: torch.TypedStorage.bfloat16
    supported: true

  - api: torch.TypedStorage.bool
    supported: true

  - api: torch.TypedStorage.byte
    supported: true

  - api: torch.TypedStorage.char
    supported: true

  - api: torch.TypedStorage.clone
    supported: true

  - api: torch.TypedStorage.complex_double
    supported: true

  - api: torch.TypedStorage.complex_float
    supported: true

  - api: torch.TypedStorage.copy_
    supported: true

  - api: torch.TypedStorage.cpu
    supported: true

  - api: torch.TypedStorage.cuda
    supported: true
    limitations: 提供了torch.TypedStorage.mlu接口来进行storage对象到mlu设备的转换。

  - api: torch.TypedStorage.data_ptr
    supported: true

  - api: torch.TypedStorage.device
    supported: true

  - api: torch.TypedStorage.double
    supported: true

  - api: torch.TypedStorage.dtype
    supported: true

  - api: torch.TypedStorage.element_size
    supported: true

  - api: torch.TypedStorage.filename
    supported: true

  - api: torch.TypedStorage.fill_
    supported: true

  - api: torch.TypedStorage.float
    supported: true

  - api: torch.TypedStorage.float8_e4m3fn
    supported: false

  - api: torch.TypedStorage.float8_e4m3fnuz
    supported: false

  - api: torch.TypedStorage.float8_e5m2
    supported: false

  - api: torch.TypedStorage.float8_e5m2fnuz
    supported: false

  - api: torch.TypedStorage.from_buffer
    supported: true

  - api: torch.TypedStorage.from_file
    supported: true

  - api: torch.TypedStorage.get_device
    supported: true

  - api: torch.TypedStorage.half
    supported: true

  - api: torch.TypedStorage.hpu
    supported: false

  - api: torch.TypedStorage.int
    supported: true

  - api: torch.TypedStorage.is_cuda
    supported: true
    limitations: 提供了torch.TypedStorage.is_mlu接口来判断storage对象的devive是否为mlu。

  - api: torch.TypedStorage.is_hpu
    supported: false

  - api: torch.TypedStorage.is_pinned
    supported: true

  - api: torch.TypedStorage.is_shared
    supported: true

  - api: torch.TypedStorage.is_sparse
    supported: true

  - api: torch.TypedStorage.long
    supported: true

  - api: torch.TypedStorage.nbytes
    supported: true

  - api: torch.TypedStorage.pickle_storage_type
    supported: true

  - api: torch.TypedStorage.pin_memory
    supported: true

  - api: torch.TypedStorage.resizable
    supported: true

  - api: torch.TypedStorage.resize_
    supported: true

  - api: torch.TypedStorage.share_memory_
    supported: true

  - api: torch.TypedStorage.short
    supported: true

  - api: torch.TypedStorage.size
    supported: true

  - api: torch.TypedStorage.to
    supported: true

  - api: torch.TypedStorage.tolist
    supported: true

  - api: torch.TypedStorage.type
    supported: true

  - api: torch.TypedStorage.untyped
    supported: true

  - api: torch.UntypedStorage
    supported: true

  - api: torch.UntypedStorage.bfloat16
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.bool
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.byte
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.byteswap
    supported: false

  - api: torch.UntypedStorage.char
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.clone
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.complex_double
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.complex_float
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.copy_
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.cpu
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.cuda
    supported: false

  - api: torch.UntypedStorage.data_ptr
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.device
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.double
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.element_size
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.filename
    supported: true

  - api: torch.UntypedStorage.fill_
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.float
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.float8_e4m3fn
    supported: false

  - api: torch.UntypedStorage.float8_e4m3fnuz
    supported: false

  - api: torch.UntypedStorage.float8_e5m2
    supported: false

  - api: torch.UntypedStorage.float8_e5m2fnuz
    supported: false

  - api: torch.UntypedStorage.from_buffer
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.from_file
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.get_device
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.half
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.hpu
    supported: false

  - api: torch.UntypedStorage.int
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.is_cuda
    supported: false

  - api: torch.UntypedStorage.is_hpu
    supported: false

  - api: torch.UntypedStorage.is_pinned
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.is_shared
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.is_sparse
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.is_sparse_csr
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.long
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.mps
    supported: false

  - api: torch.UntypedStorage.nbytes
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.new
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.pin_memory
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.resizable
    supported: true

  - api: torch.UntypedStorage.resize_
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.share_memory_
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.short
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.size
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.to
    supported: true

  - api: torch.UntypedStorage.tolist
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.type
    supported: true
    limitations: 参考torch.UntypedStorage。

  - api: torch.UntypedStorage.untyped
    supported: true
    limitations: 参考torch.UntypedStorage。

- torch.testing:

  - api: torch.testing.assert_allclose
    supported: false

  - api: torch.testing.assert_close
    supported: true

  - api: torch.testing.make_tensor
    supported: true

- torch.utils:

  - api: torch.utils.generate_methods_for_privateuse1_backend
    supported: true

  - api: torch.utils.get_cpp_backtrace
    supported: false

  - api: torch.utils.rename_privateuse1_backend
    supported: false

  - api: torch.utils.set_module
    supported: false

  - api: torch.utils.swap_tensors
    supported: false

- torch.utils.benchmark:

  - api: torch.utils.benchmark.CallgrindStats
    supported: false

  - api: torch.utils.benchmark.CallgrindStats.as_standardized
    supported: false

  - api: torch.utils.benchmark.CallgrindStats.counts
    supported: false

  - api: torch.utils.benchmark.CallgrindStats.delta
    supported: false

  - api: torch.utils.benchmark.CallgrindStats.stats
    supported: false

  - api: torch.utils.benchmark.Compare
    supported: false

  - api: torch.utils.benchmark.Compare.colorize
    supported: false

  - api: torch.utils.benchmark.Compare.extend_results
    supported: false

  - api: torch.utils.benchmark.Compare.highlight_warnings
    supported: false

  - api: torch.utils.benchmark.Compare.print
    supported: false

  - api: torch.utils.benchmark.Compare.trim_significant_figures
    supported: false

  - api: torch.utils.benchmark.FunctionCounts
    supported: false

  - api: torch.utils.benchmark.FunctionCounts.denoise
    supported: false

  - api: torch.utils.benchmark.FunctionCounts.filter
    supported: false

  - api: torch.utils.benchmark.FunctionCounts.transform
    supported: false

  - api: torch.utils.benchmark.Measurement
    supported: false

  - api: torch.utils.benchmark.Measurement.merge
    supported: false

  - api: torch.utils.benchmark.Measurement.significant_figures
    supported: false

  - api: torch.utils.benchmark.Timer
    supported: false

  - api: torch.utils.benchmark.Timer.adaptive_autorange
    supported: false

  - api: torch.utils.benchmark.Timer.blocked_autorange
    supported: false

  - api: torch.utils.benchmark.Timer.collect_callgrind
    supported: false

  - api: torch.utils.benchmark.Timer.timeit
    supported: false

- torch.utils.bottleneck: []

- torch.utils.checkpoint:

  - api: torch.utils.checkpoint.checkpoint
    supported: true

  - api: torch.utils.checkpoint.checkpoint_sequential
    supported: true

  - api: torch.utils.checkpoint.set_checkpoint_debug_enabled
    supported: false

- torch.utils.cpp_extension:

  - api: torch.utils.cpp_extension.BuildExtension
    corresponding MLU api: torch_mlu.utils.cpp_extension.BuildExtension
    supported: true

  - api: torch.utils.cpp_extension.CUDAExtension
    corresponding MLU api: torch_mlu.utils.cpp_extension.MLUExtension
    supported: true

  - api: torch.utils.cpp_extension.CppExtension
    supported: true

  - api: torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version
    supported: true

  - api: torch.utils.cpp_extension.include_paths
    corresponding MLU api: torch_mlu.utils.cpp_extension.include_paths
    supported: true

  - api: torch.utils.cpp_extension.is_ninja_available
    supported: true

  - api: torch.utils.cpp_extension.load
    corresponding MLU api: torch_mlu.utils.cpp_extension.load
    supported: true

  - api: torch.utils.cpp_extension.load_inline
    corresponding MLU api: torch_mlu.utils.cpp_extension.load_inline
    supported: true

  - api: torch.utils.cpp_extension.verify_ninja_availability
    supported: true

- torch.utils.data:

  - api: torch.utils.data.BatchSampler
    supported: true

  - api: torch.utils.data.ChainDataset
    supported: true

  - api: torch.utils.data.ConcatDataset
    supported: true

  - api: torch.utils.data.DataLoader
    supported: true
    limitations: generator参数不支持传入torch.Generator(device='mlu')

  - api: torch.utils.data.Dataset
    supported: true

  - api: torch.utils.data.IterableDataset
    supported: true

  - api: torch.utils.data.RandomSampler
    supported: true
    limitations: generator参数不支持传入torch.Generator(device='mlu')

  - api: torch.utils.data.Sampler
    supported: true

  - api: torch.utils.data.SequentialSampler
    supported: true

  - api: torch.utils.data.StackDataset
    supported: false

  - api: torch.utils.data.Subset
    supported: true

  - api: torch.utils.data.SubsetRandomSampler
    supported: true
    limitations: generator参数不支持传入torch.Generator(device='mlu')

  - api: torch.utils.data.TensorDataset
    supported: true

  - api: torch.utils.data.WeightedRandomSampler
    supported: true
    limitations: generator参数不支持传入torch.Generator(device='mlu')

  - api: torch.utils.data._utils.collate.collate
    supported: true

  - api: torch.utils.data.default_collate
    supported: true

  - api: torch.utils.data.default_convert
    supported: true

  - api: torch.utils.data.distributed.DistributedSampler
    supported: true

  - api: torch.utils.data.get_worker_info
    supported: true

  - api: torch.utils.data.random_split
    supported: true
    limitations: generator参数不支持传入torch.Generator(device='mlu')

- torch.utils.deterministic:

  - api: torch.utils.deterministic.fill_uninitialized_memory
    supported: false

- torch.utils.jit: []

- torch.utils.dlpack:

  - api: torch.utils.dlpack.from_dlpack
    supported: false

  - api: torch.utils.dlpack.to_dlpack
    supported: false

- torch.utils.mobile_optimizer:

  - api: torch.utils.mobile_optimizer.optimize_for_mobile
    supported: false

- torch.utils.model_zoo:

  - api: torch.utils.model_zoo.load_url
    supported: true

- torch.utils.tensorboard:

  - api: torch.utils.tensorboard.writer.SummaryWriter
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.__init__
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_audio
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_embedding
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_figure
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_graph
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_histogram
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_hparams
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_image
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_images
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_mesh
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_scalar
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_scalars
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_text
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.add_video
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.close
    supported: false

  - api: torch.utils.tensorboard.writer.SummaryWriter.flush
    supported: false

- torch.utils.module_tracker:

  - api: torch.utils.module_tracker.ModuleTracker
    supported: false

- Type Info:

  - api: torch.finfo
    supported: true

  - api: torch.iinfo
    supported: true

- Named Tensors:

  - api: torch.Tensor.align_as
    supported: false

  - api: torch.Tensor.align_to
    supported: false

  - api: torch.Tensor.names
    supported: false

  - api: torch.Tensor.refine_names
    supported: false

  - api: torch.Tensor.rename
    supported: false

  - api: torch.Tensor.rename_
    supported: false

- Named Tensors operator coverage: []

- torch.__config__:

  - api: torch.__config__.parallel_info
    supported: false

  - api: torch.__config__.show
    supported: false

- torch.__future__:

  - api: torch.__future__.get_overwrite_module_params_on_conversion
    supported: false

  - api: torch.__future__.get_swap_module_params_on_conversion
    supported: false

  - api: torch.__future__.set_overwrite_module_params_on_conversion
    supported: false

  - api: torch.__future__.set_swap_module_params_on_conversion
    supported: false

- torch._logging:

  - api: torch._logging.set_logs
    supported: false

- Torch Environment Variables: []

- Others:

  - api: torch.multiprocessing.SpawnContext
    supported: true

  - api: torch.multiprocessing.SpawnContext.join
    supported: true

  - api: torch.multiprocessing.get_all_sharing_strategies
    supported: true

  - api: torch.multiprocessing.get_sharing_strategy
    supported: true

  - api: torch.multiprocessing.set_sharing_strategy
    supported: true

  - api: torch.multiprocessing.spawn.spawn
    supported: true

  - api: torch.serialization.add_safe_globals
    supported: false

  - api: torch.serialization.clear_safe_globals
    supported: false

  - api: torch.serialization.get_default_load_endianness
    supported: false

  - api: torch.serialization.get_default_mmap_options
    supported: false

  - api: torch.serialization.get_safe_globals
    supported: false

  - api: torch.serialization.register_package
    supported: false

  - api: torch.serialization.set_default_load_endianness
    supported: false

  - api: torch.serialization.set_default_mmap_options
    supported: false

